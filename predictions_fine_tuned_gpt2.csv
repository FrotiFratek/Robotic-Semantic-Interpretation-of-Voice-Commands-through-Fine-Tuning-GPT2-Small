input,expected,predicted
"Command: Pick the toothbrush from the toolbox and leave it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    pick -> toothbrush [label=""object""];
    pick -> toolbox [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> cabinet [label=""on""];
}","Command: Pick the toothbrush from the toolbox and leave it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    pick -> toothbrush [label=""object""];
    pick -> toolbox [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> cabinet [label=""on""];
}"
"Command: Pick the jacket from the messy stove and leave it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> stove [label=""attribute""];
    pick -> jacket [label=""object""];
    pick -> stove [label=""from""];
    leave -> jacket [label=""object""];
    leave -> window_ledge [label=""on""];
}","Command: Pick the jacket from the messy stove and leave it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> stove [label=""attribute""];
    pick -> jacket [label=""object""];
    pick -> stove [label=""from""];
    leave -> jacket [label=""object""];
    leave -> window_ledge [label=""on""];
}"
"Command: Lift the bottle from the balcony shelf and place it on the dark full nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    dark -> nightstand [label=""attribute""];
    full -> nightstand [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> balcony_shelf [label=""from""];
    place -> bottle [label=""object""];
    place -> nightstand [label=""on""];
}","Command: Lift the bottle from the balcony shelf and place it on the dark full nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    dark -> nightstand [label=""attribute""];
    full -> nightstand [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> balcony_shelf [label=""from""];
    place -> bottle [label=""object""];
    place -> nightstand [label=""on""];
}"
"Command: Take the blunt square notebook from the messy desk and lay it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> notebook [label=""attribute""];
    messy -> desk [label=""attribute""];
    take -> notebook [label=""object""];
    take -> desk [label=""from""];
    lay -> notebook [label=""object""];
    lay -> under_the_table [label=""on""];
}","Command: Take the blunt square notebook from the messy desk and lay it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> notebook [label=""attribute""];
    messy -> desk [label=""attribute""];
    take -> notebook [label=""object""];
    take -> desk [label=""from""];
    lay -> notebook [label=""object""];
    lay -> under_the_table [label=""on""];
}"
"Command: Grab the glossy shiny container from the step stool and set it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    glossy -> container [label=""attribute""];
    shiny -> container [label=""attribute""];
    grab -> container [label=""object""];
    grab -> step_stool [label=""from""];
    set -> container [label=""object""];
    set -> ottoman [label=""on""];
}","Command: Grab the glossy shiny container from the step stool and set it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    container [label=""container"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    glossy -> container [label=""attribute""];
    shiny -> container [label=""attribute""];
    grab -> container [label=""object""];
    grab -> step_stool [label=""from""];
    set -> container [label=""object""];
    set -> ottoman [label=""on""];
}"
"Command: Grab the letter from the wooden fruit bowl and put it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> letter [label=""object""];
    grab -> fruit_bowl [label=""from""];
    put -> letter [label=""object""];
    put -> under_the_bed [label=""on""];
}","Command: Grab the letter from the wooden fruit bowl and put it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> fruit_bowl [label=""from""];
    put -> letter [label=""object""];
    put -> under_the_bed [label=""on""];
}"
"Command: Pick the red hat from the behind the curtain and leave it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    red -> hat [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> behind_the_curtain [label=""from""];
    leave -> hat [label=""object""];
    leave -> fish_tank [label=""on""];
}","Command: Pick the red hat from the behind the curtain and leave it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    red -> hat [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> behind_the_curtain [label=""from""];
    leave -> hat [label=""object""];
    leave -> fish_tank [label=""on""];
}"
"Command: Grab the round envelope from the plastic dark microwave and set it on the dark wooden nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    round -> envelope [label=""attribute""];
    plastic -> microwave [label=""attribute""];
    dark -> microwave [label=""attribute""];
    dark -> nightstand [label=""attribute""];
    wooden -> nightstand [label=""attribute""];
    grab -> envelope [label=""object""];
    grab -> microwave [label=""from""];
    set -> envelope [label=""object""];
    set -> nightstand [label=""on""];
}","Command: Grab the round envelope from the plastic dark microwave and set it on the dark wooden nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    dark -> microwave [label=""attribute""];
    plastic -> microwave [label=""attribute""];
    dark -> nightstand [label=""attribute""];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round -> envelope [label=""attribute""];
    plastic -> microwave [label=""attribute""];
    dark -> nightstand [label=""attribute""];
    wooden -> nightstand [label=""attribute""];
    grab -> envelope [label=""object""];
    grab -> microwave [label=""from""];
    set -> envelope [label=""object""];
    set -> nightstand [label=""on""];
}"
"Command: Grab the lamp from the bright bin and set it on the dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    bright -> bin [label=""attribute""];
    grab -> lamp [label=""object""];
    grab -> bin [label=""from""];
    set -> lamp [label=""object""];
    set -> dryer [label=""on""];
}","Command: Grab the lamp from the bright bin and set it on the dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    bright -> bin [label=""attribute""];
    grab -> lamp [label=""object""];
    grab -> bin [label=""from""];
    set -> lamp [label=""object""];
    set -> dryer [label=""on""];
}"
"Command: Grab the towel from the empty stove and leave it on the tidy toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> stove [label=""attribute""];
    tidy -> toilet [label=""attribute""];
    grab -> towel [label=""object""];
    grab -> stove [label=""from""];
    leave -> towel [label=""object""];
    leave -> toilet [label=""on""];
}","Command: Grab the towel from the empty stove and leave it on the tidy toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> stove [label=""attribute""];
    tidy -> toilet [label=""attribute""];
    grab -> towel [label=""object""];
    grab -> stove [label=""from""];
    leave -> towel [label=""object""];
    leave -> toilet [label=""on""];
}"
"Command: Pick the tool from the noisy cold coat rack and put it on the warm cold toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    noisy -> coat_rack [label=""attribute""];
    cold -> coat_rack [label=""attribute""];
    warm -> toilet [label=""attribute""];
    cold -> toilet [label=""attribute""];
    pick -> tool [label=""object""];
    pick -> coat_rack [label=""from""];
    put -> tool [label=""object""];
    put -> toilet [label=""on""];
}","Command: Pick the tool from the noisy cold coat rack and put it on the warm cold toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    noisy -> coat_rack [label=""attribute""];
    cold -> coat_rack [label=""attribute""];
    warm -> toilet [label=""attribute""];
    pick -> tool [label=""object""];
    pick -> coat_rack [label=""from""];
    put -> tool [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Take the tie from the toiletry shelf and put it on the tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> tie [label=""object""];
    take -> toiletry_shelf [label=""from""];
    put -> tie [label=""object""];
    put -> tv_cabinet [label=""on""];
}","Command: Take the tie from the toiletry shelf and put it on the tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> tie [label=""object""];
    take -> toiletry_shelf [label=""from""];
    put -> tie [label=""object""];
    put -> tv_cabinet [label=""on""];
}"
"Command: Take the round cap from the oven and leave it on the bright sturdy safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    round -> cap [label=""attribute""];
    bright -> safe [label=""attribute""];
    sturdy -> safe [label=""attribute""];
    take -> cap [label=""object""];
    take -> oven [label=""from""];
    leave -> cap [label=""object""];
    leave -> safe [label=""on""];
}","Command: Take the round cap from the oven and leave it on the bright sturdy safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    round -> cap [label=""attribute""];
    bright -> safe [label=""attribute""];
    sturdy -> safe [label=""attribute""];
    take -> cap [label=""object""];
    take -> oven [label=""from""];
    leave -> cap [label=""object""];
    leave -> safe [label=""on""];
}"
"Command: Pick the headphones from the entrance and set it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    pick -> headphones [label=""object""];
    pick -> entrance [label=""from""];
    set -> headphones [label=""object""];
    set -> rack [label=""on""];
}","Command: Pick the headphones from the entrance and set it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    pick -> headphones [label=""object""];
    pick -> entrance [label=""from""];
    set -> headphones [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Lift the monitor from the magazine rack and leave it on the narrow ceramic mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> mini_fridge [label=""attribute""];
    ceramic -> mini_fridge [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> magazine_rack [label=""from""];
    leave -> monitor [label=""object""];
    leave -> mini_fridge [label=""on""];
}","Command: Lift the monitor from the magazine rack and leave it on the narrow ceramic mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> mini_fridge [label=""attribute""];
    ceramic -> mini_fridge [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> magazine_rack [label=""from""];
    leave -> monitor [label=""object""];
    leave -> mini_fridge [label=""on""];
}"
"Command: Grab the square heavy bill from the trash can and put it on the stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    square -> bill [label=""attribute""];
    heavy -> bill [label=""attribute""];
    grab -> bill [label=""object""];
    grab -> trash_can [label=""from""];
    put -> bill [label=""object""];
    put -> stove [label=""on""];
}","Command: Grab the square heavy bill from the trash can and put it on the stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    square -> bill [label=""attribute""];
    heavy -> bill [label=""attribute""];
    grab -> bill [label=""object""];
    grab -> trash_can [label=""from""];
    put -> bill [label=""object""];
    put -> stove [label=""on""];
}"
"Command: Take the smooth fuzzy pencil from the sturdy ottoman and put it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> pencil [label=""attribute""];
    sturdy -> ottoman [label=""attribute""];
    take -> pencil [label=""object""];
    take -> ottoman [label=""from""];
    put -> pencil [label=""object""];
    put -> on_the_radiator [label=""on""];
}","Command: Take the smooth fuzzy pencil from the sturdy ottoman and put it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> pencil [label=""attribute""];
    sturdy -> ottoman [label=""attribute""];
    take -> pencil [label=""object""];
    take -> ottoman [label=""from""];
    put -> pencil [label=""object""];
    put -> on_the_radiator [label=""on""];
}"
"Command: Lift the shiny square brush from the empty bed and place it on the terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    shiny -> brush [label=""attribute""];
    square -> brush [label=""attribute""];
    empty -> bed [label=""attribute""];
    lift -> brush [label=""object""];
    lift -> bed [label=""from""];
    place -> brush [label=""object""];
    place -> terrace_table [label=""on""];
}","Command: Lift the shiny square brush from the empty bed and place it on the terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    shiny -> brush [label=""attribute""];
    square -> brush [label=""attribute""];
    empty -> bed [label=""attribute""];
    lift -> brush [label=""object""];
    lift -> bed [label=""from""];
    place -> brush [label=""object""];
    place -> terrace_table [label=""on""];
}"
"Command: Lift the red book from the basket and place it on the plastic cold bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    red -> book [label=""attribute""];
    plastic -> bench [label=""attribute""];
    cold -> bench [label=""attribute""];
    lift -> book [label=""object""];
    lift -> basket [label=""from""];
    place -> book [label=""object""];
    place -> bench [label=""on""];
}","Command: Lift the red book from the basket and place it on the plastic cold bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    red -> book [label=""attribute""];
    plastic -> bench [label=""attribute""];
    cold -> bench [label=""attribute""];
    lift -> book [label=""object""];
    lift -> basket [label=""from""];
    place -> book [label=""object""];
    place -> bench [label=""on""];
}"
"Command: Pick the red shiny container from the locker and set it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    red -> container [label=""attribute""];
    shiny -> container [label=""attribute""];
    pick -> container [label=""object""];
    pick -> locker [label=""from""];
    set -> container [label=""object""];
    set -> bed [label=""on""];
}","Command: Pick the red shiny container from the locker and set it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    red -> container [label=""attribute""];
    shiny -> container [label=""attribute""];
    pick -> container [label=""object""];
    pick -> locker [label=""from""];
    set -> container [label=""object""];
    set -> bed [label=""on""];
}"
"Command: Pick the cable from the bookshelf and set it on the messy bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    messy -> bread_box [label=""attribute""];
    pick -> cable [label=""object""];
    pick -> bookshelf [label=""from""];
    set -> cable [label=""object""];
    set -> bread_box [label=""on""];
}","Command: Pick the cable from the bookshelf and set it on the messy bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    messy -> bread_box [label=""attribute""];
    pick -> cable [label=""object""];
    pick -> bookshelf [label=""from""];
    set -> cable [label=""object""];
    set -> bread_box [label=""on""];
}"
"Command: Take the fragile smooth lego from the pet bed and put it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> lego [label=""attribute""];
    smooth -> lego [label=""attribute""];
    take -> lego [label=""object""];
    take -> pet_bed [label=""from""];
    put -> lego [label=""object""];
    put -> toilet [label=""on""];
}","Command: Take the fragile smooth lego from the pet bed and put it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> lego [label=""attribute""];
    smooth -> lego [label=""attribute""];
    take -> lego [label=""object""];
    take -> pet_bed [label=""from""];
    put -> lego [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Grab the cable from the closed narrow vacuum base and place it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    closed -> vacuum_base [label=""attribute""];
    narrow -> vacuum_base [label=""attribute""];
    grab -> cable [label=""object""];
    grab -> vacuum_base [label=""from""];
    place -> cable [label=""object""];
    place -> shaving_kit [label=""on""];
}","Command: Grab the cable from the closed narrow vacuum base and place it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    closed -> vacuum_base [label=""attribute""];
    narrow -> vacuum_base [label=""attribute""];
    grab -> cable [label=""object""];
    grab -> vacuum_base [label=""from""];
    place -> cable [label=""object""];
    place -> shaving_kit [label=""on""];
}"
"Command: Take the notebook from the on the radiator and leave it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> notebook [label=""object""];
    take -> on_the_radiator [label=""from""];
    leave -> notebook [label=""object""];
    leave -> trash_can [label=""on""];
}","Command: Take the notebook from the on the radiator and leave it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    take -> notebook [label=""object""];
    take -> on_the_radiator [label=""from""];
    leave -> notebook [label=""object""];
    leave -> trash_can [label=""on""];
}"
"Command: Lift the square blue hammer from the next to the lamp and set it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> hammer [label=""attribute""];
    blue -> hammer [label=""attribute""];
    lift -> hammer [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    set -> hammer [label=""object""];
    set -> wall_shelf [label=""on""];
}","Command: Lift the square blue hammer from the next to the lamp and set it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> hammer [label=""attribute""];
    blue -> hammer [label=""attribute""];
    lift -> hammer [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    set -> hammer [label=""object""];
    set -> wall_shelf [label=""on""];
}"
"Command: Pick the light fragile drill from the ceramic wooden vacuum base and put it on the warm rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    light -> drill [label=""attribute""];
    fragile -> drill [label=""attribute""];
    ceramic -> vacuum_base [label=""attribute""];
    wooden -> vacuum_base [label=""attribute""];
    warm -> rack [label=""attribute""];
    pick -> drill [label=""object""];
    pick -> vacuum_base [label=""from""];
    put -> drill [label=""object""];
    put -> rack [label=""on""];
}","Command: Pick the light fragile drill from the ceramic wooden vacuum base and put it on the warm rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    light [label=""light"", shape=ellipse, fillcolor=white];
    light -> drill [label=""attribute""];
    fragile -> drill [label=""attribute""];
    ceramic -> vacuum_base [label=""attribute""];
    wooden -> vacuum_base [label=""attribute""];
    warm -> rack [label=""attribute""];
    pick -> drill [label=""object""];
    pick -> vacuum_base [label=""from""];
    put -> drill [label=""object""];
    put -> rack [label=""on""];
}"
"Command: Grab the sharp heavy belt from the rack and leave it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    sharp -> belt [label=""attribute""];
    heavy -> belt [label=""attribute""];
    grab -> belt [label=""object""];
    grab -> rack [label=""from""];
    leave -> belt [label=""object""];
    leave -> fridge [label=""on""];
}","Command: Grab the sharp heavy belt from the rack and leave it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    sharp -> belt [label=""attribute""];
    heavy -> belt [label=""attribute""];
    grab -> belt [label=""object""];
    grab -> rack [label=""from""];
    leave -> belt [label=""object""];
    leave -> fridge [label=""on""];
}"
"Command: Pick the eraser from the laundry basket and leave it on the safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    pick -> eraser [label=""object""];
    pick -> laundry_basket [label=""from""];
    leave -> eraser [label=""object""];
    leave -> safe [label=""on""];
}","Command: Pick the eraser from the laundry basket and leave it on the safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    pick -> eraser [label=""object""];
    pick -> laundry_basket [label=""from""];
    leave -> eraser [label=""object""];
    leave -> safe [label=""on""];
}"
"Command: Take the red hard towel from the safe and set it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> towel [label=""attribute""];
    take -> towel [label=""object""];
    take -> safe [label=""from""];
    set -> towel [label=""object""];
    set -> under_the_table [label=""on""];
}","Command: Take the red hard towel from the safe and set it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hard -> towel [label=""attribute""];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> towel [label=""attribute""];
    take -> towel [label=""object""];
    take -> safe [label=""from""];
    set -> towel [label=""object""];
    set -> under_the_table [label=""on""];
}"
"Command: Lift the broom from the ceramic wet entrance and put it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet -> entrance [label=""attribute""];
    lift -> broom [label=""object""];
    lift -> entrance [label=""from""];
    put -> broom [label=""object""];
    put -> behind_the_curtain [label=""on""];
}","Command: Lift the broom from the ceramic wet entrance and put it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet -> entrance [label=""attribute""];
    lift -> broom [label=""object""];
    lift -> entrance [label=""from""];
    put -> broom [label=""object""];
    put -> behind_the_curtain [label=""on""];
}"
"Command: Grab the clock from the messy plastic ottoman and lay it on the wet dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    messy -> ottoman [label=""attribute""];
    plastic -> ottoman [label=""attribute""];
    wet -> dryer [label=""attribute""];
    grab -> clock [label=""object""];
    grab -> ottoman [label=""from""];
    lay -> clock [label=""object""];
    lay -> dryer [label=""on""];
}","Command: Grab the clock from the messy plastic ottoman and lay it on the wet dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    ottoman_dryer [label=""ottoman"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> ottoman [label=""attribute""];
    plastic -> ottoman [label=""attribute""];
    wet -> dryer [label=""attribute""];
    grab -> clock [label=""object""];
    grab -> ottoman [label=""from""];
    lay -> clock [label=""object""];
    lay -> dryer [label=""on""];
}"
"Command: Grab the smooth eraser from the open dark plant pot and leave it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open -> plant_pot [label=""attribute""];
    dark -> plant_pot [label=""attribute""];
    grab -> eraser [label=""object""];
    grab -> plant_pot [label=""from""];
    leave -> eraser [label=""object""];
    leave -> under_the_bed [label=""on""];
}","Command: Grab the smooth eraser from the open dark plant pot and leave it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    dark -> plant_pot [label=""attribute""];
    open -> plant_pot [label=""attribute""];
    grab -> eraser [label=""object""];
    grab -> plant_pot [label=""from""];
    leave -> eraser [label=""object""];
    leave -> under_the_bed [label=""on""];
}"
"Command: Pick the soft speaker from the tidy bookshelf top and set it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    soft -> speaker [label=""attribute""];
    tidy -> bookshelf_top [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> bookshelf_top [label=""from""];
    set -> speaker [label=""object""];
    set -> fish_tank [label=""on""];
}","Command: Pick the soft speaker from the tidy bookshelf top and set it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    soft -> speaker [label=""attribute""];
    tidy -> bookshelf_top [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> bookshelf_top [label=""from""];
    set -> speaker [label=""object""];
    set -> fish_tank [label=""on""];
}"
"Command: Lift the belt from the window sill and lay it on the kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift -> belt [label=""object""];
    lift -> window_sill [label=""from""];
    lay -> belt [label=""object""];
    lay -> kitchen_island [label=""on""];
}","Command: Lift the belt from the window sill and lay it on the kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    lift -> belt [label=""object""];
    lift -> window_sill [label=""from""];
    lay -> belt [label=""object""];
    lay -> kitchen_island [label=""on""];
}"
"Command: Pick the backpack from the shaving kit and set it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    pick -> backpack [label=""object""];
    pick -> shaving_kit [label=""from""];
    set -> backpack [label=""object""];
    set -> bathtub [label=""on""];
}","Command: Pick the backpack from the shaving kit and set it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    pick -> backpack [label=""object""];
    pick -> shaving_kit [label=""from""];
    set -> backpack [label=""object""];
    set -> bathtub [label=""on""];
}"
"Command: Grab the square plate from the stove and lay it on the narrow coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    square -> plate [label=""attribute""];
    narrow -> coat_shelf [label=""attribute""];
    grab -> plate [label=""object""];
    grab -> stove [label=""from""];
    lay -> plate [label=""object""];
    lay -> coat_shelf [label=""on""];
}","Command: Grab the square plate from the stove and lay it on the narrow coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    square -> plate [label=""attribute""];
    narrow -> coat_shelf [label=""attribute""];
    grab -> plate [label=""object""];
    grab -> stove [label=""from""];
    lay -> plate [label=""object""];
    lay -> coat_shelf [label=""on""];
}"
"Command: Lift the mirror from the messy dusty wine rack and set it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    messy -> wine_rack [label=""attribute""];
    dusty -> wine_rack [label=""attribute""];
    lift -> mirror [label=""object""];
    lift -> wine_rack [label=""from""];
    set -> mirror [label=""object""];
    set -> drawer [label=""on""];
}","Command: Lift the mirror from the messy dusty wine rack and set it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    messy -> wine_rack [label=""attribute""];
    dusty -> wine_rack [label=""attribute""];
    lift -> mirror [label=""object""];
    lift -> wine_rack [label=""from""];
    set -> mirror [label=""object""];
    set -> drawer [label=""on""];
}"
"Command: Grab the shoe from the balcony shelf and put it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> balcony_shelf [label=""from""];
    put -> shoe [label=""object""];
    put -> beside_the_couch [label=""on""];
}","Command: Grab the shoe from the balcony shelf and put it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> balcony_shelf [label=""from""];
    put -> shoe [label=""object""];
    put -> beside_the_couch [label=""on""];
}"
"Command: Pick the hat from the fish tank and place it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    pick -> hat [label=""object""];
    pick -> fish_tank [label=""from""];
    place -> hat [label=""object""];
    place -> pantry [label=""on""];
}","Command: Pick the hat from the fish tank and place it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    pick -> hat [label=""object""];
    pick -> fish_tank [label=""from""];
    place -> hat [label=""object""];
    place -> pantry [label=""on""];
}"
"Command: Take the marker from the behind the curtain and put it on the messy tidy side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    messy -> side_table [label=""attribute""];
    tidy -> side_table [label=""attribute""];
    take -> marker [label=""object""];
    take -> behind_the_curtain [label=""from""];
    put -> marker [label=""object""];
    put -> side_table [label=""on""];
}","Command: Take the marker from the behind the curtain and put it on the messy tidy side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    messy -> side_table [label=""attribute""];
    tidy -> side_table [label=""attribute""];
    take -> marker [label=""object""];
    take -> behind_the_curtain [label=""from""];
    put -> marker [label=""object""];
    put -> side_table [label=""on""];
}"
"Command: Grab the phone from the wooden warm corner and place it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> corner [label=""attribute""];
    warm -> corner [label=""attribute""];
    grab -> phone [label=""object""];
    grab -> corner [label=""from""];
    place -> phone [label=""object""];
    place -> vacuum_base [label=""on""];
}","Command: Grab the phone from the wooden warm corner and place it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    wooden -> corner [label=""attribute""];
    warm -> corner [label=""attribute""];
    grab -> phone [label=""object""];
    grab -> corner [label=""from""];
    place -> phone [label=""object""];
    place -> vacuum_base [label=""on""];
}"
"Command: Pick the jacket from the wall shelf and leave it on the closed makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> makeup_bag [label=""attribute""];
    pick -> jacket [label=""object""];
    pick -> wall_shelf [label=""from""];
    leave -> jacket [label=""object""];
    leave -> makeup_bag [label=""on""];
}","Command: Pick the jacket from the wall shelf and leave it on the closed makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> makeup_bag [label=""attribute""];
    pick -> jacket [label=""object""];
    pick -> wall_shelf [label=""from""];
    leave -> jacket [label=""object""];
    leave -> makeup_bag [label=""on""];
}"
"Command: Pick the blunt speaker from the narrow coat rack and put it on the bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blunt -> speaker [label=""attribute""];
    narrow -> coat_rack [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> coat_rack [label=""from""];
    put -> speaker [label=""object""];
    put -> bench [label=""on""];
}","Command: Pick the blunt speaker from the narrow coat rack and put it on the bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blunt -> speaker [label=""attribute""];
    narrow -> coat_rack [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> coat_rack [label=""from""];
    put -> speaker [label=""object""];
    put -> bench [label=""on""];
}"
"Command: Pick the shiny glove from the sturdy toiletry shelf and lay it on the narrow cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> glove [label=""attribute""];
    sturdy -> toiletry_shelf [label=""attribute""];
    narrow -> cushion [label=""attribute""];
    pick -> glove [label=""object""];
    pick -> toiletry_shelf [label=""from""];
    lay -> glove [label=""object""];
    lay -> cushion [label=""on""];
}","Command: Pick the shiny glove from the sturdy toiletry shelf and lay it on the narrow cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> glove [label=""attribute""];
    sturdy -> toiletry_shelf [label=""attribute""];
    narrow -> cushion [label=""attribute""];
    pick -> glove [label=""object""];
    pick -> toiletry_shelf [label=""from""];
    lay -> glove [label=""object""];
    lay -> cushion [label=""on""];
}"
"Command: Take the necklace from the wooden sturdy desk drawer and place it on the full bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wooden -> desk_drawer [label=""attribute""];
    sturdy -> desk_drawer [label=""attribute""];
    full -> bookshelf_top [label=""attribute""];
    take -> necklace [label=""object""];
    take -> desk_drawer [label=""from""];
    place -> necklace [label=""object""];
    place -> bookshelf_top [label=""on""];
}","Command: Take the necklace from the wooden sturdy desk drawer and place it on the full bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wooden -> desk_drawer [label=""attribute""];
    sturdy -> desk_drawer [label=""attribute""];
    full -> bookshelf_top [label=""attribute""];
    take -> necklace [label=""object""];
    take -> desk_drawer [label=""from""];
    place -> necklace [label=""object""];
    place -> bookshelf_top [label=""on""];
}"
"Command: Grab the smooth red lego from the narrow nightstand and leave it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    smooth -> lego [label=""attribute""];
    red -> lego [label=""attribute""];
    narrow -> nightstand [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> nightstand [label=""from""];
    leave -> lego [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Grab the smooth red lego from the narrow nightstand and leave it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    smooth -> lego [label=""attribute""];
    red -> lego [label=""attribute""];
    narrow -> nightstand [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> nightstand [label=""from""];
    leave -> lego [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Lift the hard helmet from the noisy tidy step stool and put it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    hard -> helmet [label=""attribute""];
    noisy -> step_stool [label=""attribute""];
    tidy -> step_stool [label=""attribute""];
    lift -> helmet [label=""object""];
    lift -> step_stool [label=""from""];
    put -> helmet [label=""object""];
    put -> snack_shelf [label=""on""];
}","Command: Lift the hard helmet from the noisy tidy step stool and put it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    hard -> helmet [label=""attribute""];
    noisy -> step_stool [label=""attribute""];
    tidy -> step_stool [label=""attribute""];
    lift -> helmet [label=""object""];
    lift -> step_stool [label=""from""];
    put -> helmet [label=""object""];
    put -> snack_shelf [label=""on""];
}"
"Command: Grab the white monitor from the wet cabinet and leave it on the narrow empty bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    white -> monitor [label=""attribute""];
    wet -> cabinet [label=""attribute""];
    narrow -> bed [label=""attribute""];
    empty -> bed [label=""attribute""];
    grab -> monitor [label=""object""];
    grab -> cabinet [label=""from""];
    leave -> monitor [label=""object""];
    leave -> bed [label=""on""];
}","Command: Grab the white monitor from the wet cabinet and leave it on the narrow empty bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    white -> monitor [label=""attribute""];
    wet -> cabinet [label=""attribute""];
    narrow -> bed [label=""attribute""];
    empty -> bed [label=""attribute""];
    grab -> monitor [label=""object""];
    grab -> cabinet [label=""from""];
    leave -> monitor [label=""object""];
    leave -> bed [label=""on""];
}"
"Command: Pick the sharp matte frame from the cabinet and place it on the safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> frame [label=""attribute""];
    matte -> frame [label=""attribute""];
    pick -> frame [label=""object""];
    pick -> cabinet [label=""from""];
    place -> frame [label=""object""];
    place -> safe [label=""on""];
}","Command: Pick the sharp matte frame from the cabinet and place it on the safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> frame [label=""attribute""];
    matte -> frame [label=""attribute""];
    pick -> frame [label=""object""];
    pick -> cabinet [label=""from""];
    place -> frame [label=""object""];
    place -> safe [label=""on""];
}"
"Command: Lift the sweater from the vacuum base and put it on the cold windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cold -> windowsill [label=""attribute""];
    lift -> sweater [label=""object""];
    lift -> vacuum_base [label=""from""];
    put -> sweater [label=""object""];
    put -> windowsill [label=""on""];
}","Command: Lift the sweater from the vacuum base and put it on the cold windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cold -> windowsill [label=""attribute""];
    lift -> sweater [label=""object""];
    lift -> vacuum_base [label=""from""];
    put -> sweater [label=""object""];
    put -> windowsill [label=""on""];
}"
"Command: Lift the remote from the dry cold tv stand and set it on the desk.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> tv_stand [label=""attribute""];
    cold -> tv_stand [label=""attribute""];
    lift -> remote [label=""object""];
    lift -> tv_stand [label=""from""];
    set -> remote [label=""object""];
    set -> desk [label=""on""];
}","Command: Lift the remote from the dry cold tv stand and set it on the desk.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    dry -> tv_stand [label=""attribute""];
    cold -> tv_stand [label=""attribute""];
    lift -> remote [label=""object""];
    lift -> tv_stand [label=""from""];
    set -> remote [label=""object""];
    set -> desk [label=""on""];
}"
"Command: Grab the glossy coin from the garden box and put it on the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    glossy -> coin [label=""attribute""];
    grab -> coin [label=""object""];
    grab -> garden_box [label=""from""];
    put -> coin [label=""object""];
    put -> table [label=""on""];
}","Command: Grab the glossy coin from the garden box and put it on the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    glossy -> coin [label=""attribute""];
    grab -> coin [label=""object""];
    grab -> garden_box [label=""from""];
    put -> coin [label=""object""];
    put -> table [label=""on""];
}"
"Command: Grab the light shirt from the empty cabinet and leave it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    empty -> cabinet [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> cabinet [label=""from""];
    leave -> shirt [label=""object""];
    leave -> under_the_bed [label=""on""];
}","Command: Grab the light shirt from the empty cabinet and leave it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    empty -> cabinet [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> cabinet [label=""from""];
    leave -> shirt [label=""object""];
    leave -> under_the_bed [label=""on""];
}"
"Command: Lift the blunt toothbrush from the mirror shelf and place it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> toothbrush [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> mirror_shelf [label=""from""];
    place -> toothbrush [label=""object""];
    place -> ottoman [label=""on""];
}","Command: Lift the blunt toothbrush from the mirror shelf and place it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> toothbrush [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> mirror_shelf [label=""from""];
    place -> toothbrush [label=""object""];
    place -> ottoman [label=""on""];
}"
"Command: Take the light bat from the dusty bookshelf and put it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dusty -> bookshelf [label=""attribute""];
    take -> bat [label=""object""];
    take -> bookshelf [label=""from""];
    put -> bat [label=""object""];
    put -> under_the_table [label=""on""];
}","Command: Take the light bat from the dusty bookshelf and put it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dusty -> bookshelf [label=""attribute""];
    take -> bat [label=""object""];
    take -> bookshelf [label=""from""];
    put -> bat [label=""object""];
    put -> under_the_table [label=""on""];
}"
"Command: Grab the jacket from the dusty nightstand and place it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    dusty -> nightstand [label=""attribute""];
    grab -> jacket [label=""object""];
    grab -> nightstand [label=""from""];
    place -> jacket [label=""object""];
    place -> armrest [label=""on""];
}","Command: Grab the jacket from the dusty nightstand and place it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    dusty -> nightstand [label=""attribute""];
    grab -> jacket [label=""object""];
    grab -> nightstand [label=""from""];
    place -> jacket [label=""object""];
    place -> armrest [label=""on""];
}"
"Command: Grab the blanket from the fish tank and place it on the wet wooden side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    wet -> side_table [label=""attribute""];
    wooden -> side_table [label=""attribute""];
    grab -> blanket [label=""object""];
    grab -> fish_tank [label=""from""];
    place -> blanket [label=""object""];
    place -> side_table [label=""on""];
}","Command: Grab the blanket from the fish tank and place it on the wet wooden side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    wet -> side_table [label=""attribute""];
    wooden -> side_table [label=""attribute""];
    grab -> blanket [label=""object""];
    grab -> fish_tank [label=""from""];
    place -> blanket [label=""object""];
    place -> side_table [label=""on""];
}"
"Command: Pick the fuzzy wallet from the dusty plant pot and lay it on the wooden dusty sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    fuzzy -> wallet [label=""attribute""];
    dusty -> plant_pot [label=""attribute""];
    wooden -> sink [label=""attribute""];
    dusty -> sink [label=""attribute""];
    pick -> wallet [label=""object""];
    pick -> plant_pot [label=""from""];
    lay -> wallet [label=""object""];
    lay -> sink [label=""on""];
}","Command: Pick the fuzzy wallet from the dusty plant pot and lay it on the wooden dusty sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    fuzzy -> wallet [label=""attribute""];
    dusty -> plant_pot [label=""attribute""];
    wooden -> sink [label=""attribute""];
    dusty -> sink [label=""attribute""];
    pick -> wallet [label=""object""];
    pick -> plant_pot [label=""from""];
    lay -> wallet [label=""object""];
    lay -> sink [label=""on""];
}"
"Command: Pick the phone from the hallway and place it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    pick -> phone [label=""object""];
    pick -> hallway [label=""from""];
    place -> phone [label=""object""];
    place -> fridge [label=""on""];
}","Command: Pick the phone from the hallway and place it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    pick -> phone [label=""object""];
    pick -> hallway [label=""from""];
    place -> phone [label=""object""];
    place -> fridge [label=""on""];
}"
"Command: Lift the cracked green pencil from the empty sturdy wardrobe and set it on the fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    cracked -> pencil [label=""attribute""];
    green -> pencil [label=""attribute""];
    empty -> wardrobe [label=""attribute""];
    sturdy -> wardrobe [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> wardrobe [label=""from""];
    set -> pencil [label=""object""];
    set -> fridge_door [label=""on""];
}","Command: Lift the cracked green pencil from the empty sturdy wardrobe and set it on the fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    cracked -> pencil [label=""attribute""];
    green -> pencil [label=""attribute""];
    empty -> wardrobe [label=""attribute""];
    sturdy -> wardrobe [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> wardrobe [label=""from""];
    set -> pencil [label=""object""];
    set -> fridge_door [label=""on""];
}"
"Command: Take the heavy lamp from the above the fridge and leave it on the full litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    heavy -> lamp [label=""attribute""];
    full -> litter_box [label=""attribute""];
    take -> lamp [label=""object""];
    take -> above_the_fridge [label=""from""];
    leave -> lamp [label=""object""];
    leave -> litter_box [label=""on""];
}","Command: Take the heavy lamp from the above the fridge and leave it on the full litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> lamp [label=""attribute""];
    full -> litter_box [label=""attribute""];
    take -> lamp [label=""object""];
    take -> above_the_fridge [label=""from""];
    leave -> lamp [label=""object""];
    leave -> litter_box [label=""on""];
}"
"Command: Pick the shiny glossy speaker from the cushion and lay it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shiny -> speaker [label=""attribute""];
    glossy -> speaker [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> cushion [label=""from""];
    lay -> speaker [label=""object""];
    lay -> locker [label=""on""];
}","Command: Pick the shiny glossy speaker from the cushion and lay it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shiny -> speaker [label=""attribute""];
    glossy -> speaker [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> cushion [label=""from""];
    lay -> speaker [label=""object""];
    lay -> locker [label=""on""];
}"
"Command: Pick the soft white mug from the messy garden box and set it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    white -> mug [label=""attribute""];
    messy -> garden_box [label=""attribute""];
    pick -> mug [label=""object""];
    pick -> garden_box [label=""from""];
    set -> mug [label=""object""];
    set -> under_the_table [label=""on""];
}","Command: Pick the soft white mug from the messy garden box and set it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    white -> mug [label=""attribute""];
    messy -> garden_box [label=""attribute""];
    pick -> mug [label=""object""];
    pick -> garden_box [label=""from""];
    set -> mug [label=""object""];
    set -> under_the_table [label=""on""];
}"
"Command: Take the fuzzy wallet from the open sturdy dryer and set it on the narrow wooden coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    fuzzy -> wallet [label=""attribute""];
    open -> dryer [label=""attribute""];
    sturdy -> dryer [label=""attribute""];
    narrow -> coat_shelf [label=""attribute""];
    wooden -> coat_shelf [label=""attribute""];
    take -> wallet [label=""object""];
    take -> dryer [label=""from""];
    set -> wallet [label=""object""];
    set -> coat_shelf [label=""on""];
}","Command: Take the fuzzy wallet from the open sturdy dryer and set it on the narrow wooden coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    fuzzy -> wallet [label=""attribute""];
    open -> dryer [label=""attribute""];
    sturdy -> dryer [label=""attribute""];
    wooden -> coat_shelf [label=""attribute""];
    narrow -> coat_shelf [label=""attribute""];
    wooden -> coat_shelf [label=""attribute""];
    take -> wallet [label=""object""];
    take -> dryer [label=""from""];
    set -> wallet [label=""object""];
    set -> coat_shelf [label=""on""];
}"
"Command: Lift the fuzzy pencil from the kitchen island and put it on the oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> pencil [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> kitchen_island [label=""from""];
    put -> pencil [label=""object""];
    put -> oven [label=""on""];
}","Command: Lift the fuzzy pencil from the kitchen island and put it on the oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> pencil [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> kitchen_island [label=""from""];
    put -> pencil [label=""object""];
    put -> oven [label=""on""];
}"
"Command: Pick the bag from the dark basket and place it on the cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    dark -> basket [label=""attribute""];
    pick -> bag [label=""object""];
    pick -> basket [label=""from""];
    place -> bag [label=""object""];
    place -> cupboard [label=""on""];
}","Command: Pick the bag from the dark basket and place it on the cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    dark -> basket [label=""attribute""];
    pick -> bag [label=""object""];
    pick -> basket [label=""from""];
    place -> bag [label=""object""];
    place -> cupboard [label=""on""];
}"
"Command: Take the bottle from the dryer and set it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bottle [label=""object""];
    take -> dryer [label=""from""];
    set -> bottle [label=""object""];
    set -> shaving_kit [label=""on""];
}","Command: Take the bottle from the dryer and set it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bottle [label=""object""];
    take -> dryer [label=""from""];
    set -> bottle [label=""object""];
    set -> shaving_kit [label=""on""];
}"
"Command: Pick the round soft receipt from the wall shelf and put it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> receipt [label=""attribute""];
    soft -> receipt [label=""attribute""];
    pick -> receipt [label=""object""];
    pick -> wall_shelf [label=""from""];
    put -> receipt [label=""object""];
    put -> wall_shelf [label=""on""];
}","Command: Pick the round soft receipt from the wall shelf and put it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    soft -> receipt [label=""attribute""];
    pick -> receipt [label=""object""];
    pick -> wall_shelf [label=""from""];
    put -> receipt [label=""object""];
    put -> wall_shelf [label=""on""];
}"
"Command: Lift the hard notebook from the wet wine rack and lay it on the full laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    hard -> notebook [label=""attribute""];
    wet -> wine_rack [label=""attribute""];
    full -> laundry_basket [label=""attribute""];
    lift -> notebook [label=""object""];
    lift -> wine_rack [label=""from""];
    lay -> notebook [label=""object""];
    lay -> laundry_basket [label=""on""];
}","Command: Lift the hard notebook from the wet wine rack and lay it on the full laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    hard -> notebook [label=""attribute""];
    wet -> wine_rack [label=""attribute""];
    full -> laundry_basket [label=""attribute""];
    lift -> notebook [label=""object""];
    lift -> wine_rack [label=""from""];
    lay -> notebook [label=""object""];
    lay -> laundry_basket [label=""on""];
}"
"Command: Take the magazine from the wet windowsill and set it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wet -> windowsill [label=""attribute""];
    take -> magazine [label=""object""];
    take -> windowsill [label=""from""];
    set -> magazine [label=""object""];
    set -> armrest [label=""on""];
}","Command: Take the magazine from the wet windowsill and set it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wet -> windowsill [label=""attribute""];
    take -> magazine [label=""object""];
    take -> windowsill [label=""from""];
    set -> magazine [label=""object""];
    set -> armrest [label=""on""];
}"
"Command: Grab the blue green fork from the narrow dark table and leave it on the dark drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> fork [label=""attribute""];
    green -> fork [label=""attribute""];
    narrow -> table [label=""attribute""];
    dark -> table [label=""attribute""];
    dark -> drawer_top [label=""attribute""];
    grab -> fork [label=""object""];
    grab -> table [label=""from""];
    leave -> fork [label=""object""];
    leave -> drawer_top [label=""on""];
}","Command: Grab the blue green fork from the narrow dark table and leave it on the dark drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> fork [label=""attribute""];
    green -> fork [label=""attribute""];
    narrow -> table [label=""attribute""];
    dark -> table [label=""attribute""];
    grab -> fork [label=""object""];
    grab -> table [label=""from""];
    leave -> fork [label=""object""];
    leave -> drawer_top [label=""on""];
}"
"Command: Take the fragile blanket from the bright full laundry basket and put it on the kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    fragile -> blanket [label=""attribute""];
    bright -> laundry_basket [label=""attribute""];
    full -> laundry_basket [label=""attribute""];
    take -> blanket [label=""object""];
    take -> laundry_basket [label=""from""];
    put -> blanket [label=""object""];
    put -> kitchen_drawer [label=""on""];
}","Command: Take the fragile blanket from the bright full laundry basket and put it on the kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> blanket [label=""attribute""];
    bright -> laundry_basket [label=""attribute""];
    full -> laundry_basket [label=""attribute""];
    take -> blanket [label=""object""];
    take -> laundry_basket [label=""from""];
    put -> blanket [label=""object""];
    put -> kitchen_drawer [label=""on""];
}"
"Command: Grab the soft tie from the bright cushion and lay it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright -> cushion [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> cushion [label=""from""];
    lay -> tie [label=""object""];
    lay -> under_the_bed [label=""on""];
}","Command: Grab the soft tie from the bright cushion and lay it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright -> cushion [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> cushion [label=""from""];
    lay -> tie [label=""object""];
    lay -> under_the_bed [label=""on""];
}"
"Command: Pick the fragile tie from the dusty warm coffee table and place it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    fragile -> tie [label=""attribute""];
    dusty -> coffee_table [label=""attribute""];
    warm -> coffee_table [label=""attribute""];
    pick -> tie [label=""object""];
    pick -> coffee_table [label=""from""];
    place -> tie [label=""object""];
    place -> locker [label=""on""];
}","Command: Pick the fragile tie from the dusty warm coffee table and place it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    fragile -> tie [label=""attribute""];
    dusty -> coffee_table [label=""attribute""];
    warm -> coffee_table [label=""attribute""];
    pick -> tie [label=""object""];
    pick -> coffee_table [label=""from""];
    place -> tie [label=""object""];
    place -> locker [label=""on""];
}"
"Command: Pick the hammer from the coat rack and put it on the empty dark stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> stove [label=""attribute""];
    dark -> stove [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> coat_rack [label=""from""];
    put -> hammer [label=""object""];
    put -> stove [label=""on""];
}","Command: Pick the hammer from the coat rack and put it on the empty dark stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> stove [label=""attribute""];
    dark -> stove [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> coat_rack [label=""from""];
    put -> hammer [label=""object""];
    put -> stove [label=""on""];
}"
"Command: Lift the can from the wardrobe and place it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    lift -> can [label=""object""];
    lift -> wardrobe [label=""from""];
    place -> can [label=""object""];
    place -> toilet [label=""on""];
}","Command: Lift the can from the wardrobe and place it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    lift -> can [label=""object""];
    lift -> wardrobe [label=""from""];
    place -> can [label=""object""];
    place -> toilet [label=""on""];
}"
"Command: Pick the glove from the wooden dark hallway and set it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> hallway [label=""attribute""];
    dark -> hallway [label=""attribute""];
    pick -> glove [label=""object""];
    pick -> hallway [label=""from""];
    set -> glove [label=""object""];
    set -> laundry_machine [label=""on""];
}","Command: Pick the glove from the wooden dark hallway and set it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> hallway [label=""attribute""];
    dark -> hallway [label=""attribute""];
    pick -> glove [label=""object""];
    pick -> hallway [label=""from""];
    set -> glove [label=""object""];
    set -> laundry_machine [label=""on""];
}"
"Command: Grab the sweater from the wooden bread box and leave it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> sweater [label=""object""];
    grab -> bread_box [label=""from""];
    leave -> sweater [label=""object""];
    leave -> next_to_the_lamp [label=""on""];
}","Command: Grab the sweater from the wooden bread box and leave it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    wooden -> bread_box [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> bread_box [label=""from""];
    leave -> sweater [label=""object""];
    leave -> next_to_the_lamp [label=""on""];
}"
"Command: Grab the pillow from the closed open basket and lay it on the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    closed -> basket [label=""attribute""];
    open -> basket [label=""attribute""];
    grab -> pillow [label=""object""];
    grab -> basket [label=""from""];
    lay -> pillow [label=""object""];
    lay -> table [label=""on""];
}","Command: Grab the pillow from the closed open basket and lay it on the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    closed -> basket [label=""attribute""];
    open -> basket [label=""attribute""];
    grab -> pillow [label=""object""];
    grab -> basket [label=""from""];
    lay -> pillow [label=""object""];
    lay -> table [label=""on""];
}"
"Command: Grab the card from the warm dark kitchen drawer and leave it on the wooden full cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    card [label=""card"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    warm -> kitchen_drawer [label=""attribute""];
    dark -> kitchen_drawer [label=""attribute""];
    wooden -> cushion [label=""attribute""];
    full -> cushion [label=""attribute""];
    grab -> card [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    leave -> card [label=""object""];
    leave -> cushion [label=""on""];
}","Command: Grab the card from the warm dark kitchen drawer and leave it on the wooden full cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    card [label=""card"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    warm -> kitchen_drawer [label=""attribute""];
    dark -> kitchen_drawer [label=""attribute""];
    wooden -> cushion [label=""attribute""];
    full -> cushion [label=""attribute""];
    grab -> card [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    leave -> card [label=""object""];
    leave -> cushion [label=""on""];
}"
"Command: Grab the hard glossy tablet from the bin and leave it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy -> tablet [label=""attribute""];
    grab -> tablet [label=""object""];
    grab -> bin [label=""from""];
    leave -> tablet [label=""object""];
    leave -> on_the_radiator [label=""on""];
}","Command: Grab the hard glossy tablet from the bin and leave it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy -> tablet [label=""attribute""];
    grab -> tablet [label=""object""];
    grab -> bin [label=""from""];
    leave -> tablet [label=""object""];
    leave -> on_the_radiator [label=""on""];
}"
"Command: Take the soft jar from the fridge and set it on the messy empty storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    soft -> jar [label=""attribute""];
    messy -> storage_box [label=""attribute""];
    empty -> storage_box [label=""attribute""];
    take -> jar [label=""object""];
    take -> fridge [label=""from""];
    set -> jar [label=""object""];
    set -> storage_box [label=""on""];
}","Command: Take the soft jar from the fridge and set it on the messy empty storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> jar [label=""attribute""];
    messy -> storage_box [label=""attribute""];
    empty -> storage_box [label=""attribute""];
    take -> jar [label=""object""];
    take -> fridge [label=""from""];
    set -> jar [label=""object""];
    set -> storage_box [label=""on""];
}"
"Command: Grab the cap from the wet pantry and lay it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> cap [label=""object""];
    grab -> pantry [label=""from""];
    lay -> cap [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}","Command: Grab the cap from the wet pantry and lay it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    wet -> pantry [label=""attribute""];
    grab -> cap [label=""object""];
    grab -> pantry [label=""from""];
    lay -> cap [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}"
"Command: Grab the wallet from the side table and put it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    grab -> wallet [label=""object""];
    grab -> side_table [label=""from""];
    put -> wallet [label=""object""];
    put -> shaving_kit [label=""on""];
}","Command: Grab the wallet from the side table and put it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    grab -> wallet [label=""object""];
    grab -> side_table [label=""from""];
    put -> wallet [label=""object""];
    put -> shaving_kit [label=""on""];
}"
"Command: Grab the black shirt from the tv stand and put it on the storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    black -> shirt [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> tv_stand [label=""from""];
    put -> shirt [label=""object""];
    put -> storage_box [label=""on""];
}","Command: Grab the black shirt from the tv stand and put it on the storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    black -> shirt [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> tv_stand [label=""from""];
    put -> shirt [label=""object""];
    put -> storage_box [label=""on""];
}"
"Command: Grab the matte bowl from the mirror shelf and lay it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> bowl [label=""object""];
    grab -> mirror_shelf [label=""from""];
    lay -> bowl [label=""object""];
    lay -> beside_the_couch [label=""on""];
}","Command: Grab the matte bowl from the mirror shelf and lay it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte -> bowl [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> mirror_shelf [label=""from""];
    lay -> bowl [label=""object""];
    lay -> beside_the_couch [label=""on""];
}"
"Command: Grab the charger from the empty windowsill and put it on the closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> windowsill [label=""attribute""];
    grab -> charger [label=""object""];
    grab -> windowsill [label=""from""];
    put -> charger [label=""object""];
    put -> closet [label=""on""];
}","Command: Grab the charger from the empty windowsill and put it on the closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> windowsill [label=""attribute""];
    grab -> charger [label=""object""];
    grab -> windowsill [label=""from""];
    put -> charger [label=""object""];
    put -> closet [label=""on""];
}"
"Command: Lift the round mouse from the medicine cabinet and set it on the sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    round -> mouse [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> medicine_cabinet [label=""from""];
    set -> mouse [label=""object""];
    set -> sink [label=""on""];
}","Command: Lift the round mouse from the medicine cabinet and set it on the sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    round -> mouse [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> medicine_cabinet [label=""from""];
    set -> mouse [label=""object""];
    set -> sink [label=""on""];
}"
"Command: Grab the book from the messy hanger and leave it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    messy -> hanger [label=""attribute""];
    grab -> book [label=""object""];
    grab -> hanger [label=""from""];
    leave -> book [label=""object""];
    leave -> mini_fridge [label=""on""];
}","Command: Grab the book from the messy hanger and leave it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    messy -> hanger [label=""attribute""];
    grab -> book [label=""object""];
    grab -> hanger [label=""from""];
    leave -> book [label=""object""];
    leave -> mini_fridge [label=""on""];
}"
"Command: Take the charger from the wooden warm laundry basket and set it on the medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wooden -> laundry_basket [label=""attribute""];
    warm -> laundry_basket [label=""attribute""];
    take -> charger [label=""object""];
    take -> laundry_basket [label=""from""];
    set -> charger [label=""object""];
    set -> medicine_cabinet [label=""on""];
}","Command: Take the charger from the wooden warm laundry basket and set it on the medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wooden -> laundry_basket [label=""attribute""];
    warm -> laundry_basket [label=""attribute""];
    take -> charger [label=""object""];
    take -> laundry_basket [label=""from""];
    set -> charger [label=""object""];
    set -> medicine_cabinet [label=""on""];
}"
"Command: Pick the black round shirt from the noisy dusty entrance and place it on the laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> shirt [label=""attribute""];
    round -> shirt [label=""attribute""];
    noisy -> entrance [label=""attribute""];
    dusty -> entrance [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> entrance [label=""from""];
    place -> shirt [label=""object""];
    place -> laundry_basket [label=""on""];
}","Command: Pick the black round shirt from the noisy dusty entrance and place it on the laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> shirt [label=""attribute""];
    round -> shirt [label=""attribute""];
    noisy -> entrance [label=""attribute""];
    dusty -> entrance [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> entrance [label=""from""];
    place -> shirt [label=""object""];
    place -> laundry_basket [label=""on""];
}"
"Command: Pick the fuzzy lamp from the garage and set it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    fuzzy -> lamp [label=""attribute""];
    pick -> lamp [label=""object""];
    pick -> garage [label=""from""];
    set -> lamp [label=""object""];
    set -> floor [label=""on""];
}","Command: Pick the fuzzy lamp from the garage and set it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    fuzzy -> lamp [label=""attribute""];
    pick -> lamp [label=""object""];
    pick -> garage [label=""from""];
    set -> lamp [label=""object""];
    set -> floor [label=""on""];
}"
"Command: Take the soft belt from the bright full wardrobe and lay it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> belt [label=""attribute""];
    bright -> wardrobe [label=""attribute""];
    full -> wardrobe [label=""attribute""];
    take -> belt [label=""object""];
    take -> wardrobe [label=""from""];
    lay -> belt [label=""object""];
    lay -> wardrobe [label=""on""];
}","Command: Take the soft belt from the bright full wardrobe and lay it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> belt [label=""attribute""];
    bright -> wardrobe [label=""attribute""];
    full -> wardrobe [label=""attribute""];
    take -> belt [label=""object""];
    take -> wardrobe [label=""from""];
    lay -> belt [label=""object""];
    lay -> wardrobe [label=""on""];
}"
"Command: Grab the smooth sweater from the shelf and lay it on the wooden locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    smooth -> sweater [label=""attribute""];
    wooden -> locker [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> shelf [label=""from""];
    lay -> sweater [label=""object""];
    lay -> locker [label=""on""];
}","Command: Grab the smooth sweater from the shelf and lay it on the wooden locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    smooth -> sweater [label=""attribute""];
    wooden -> locker [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> shelf [label=""from""];
    lay -> sweater [label=""object""];
    lay -> locker [label=""on""];
}"
"Command: Lift the watch from the stove and put it on the open tidy windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    open -> windowsill [label=""attribute""];
    tidy -> windowsill [label=""attribute""];
    lift -> watch [label=""object""];
    lift -> stove [label=""from""];
    put -> watch [label=""object""];
    put -> windowsill [label=""on""];
}","Command: Lift the watch from the stove and put it on the open tidy windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    open -> windowsill [label=""attribute""];
    tidy -> windowsill [label=""attribute""];
    lift -> watch [label=""object""];
    lift -> stove [label=""from""];
    put -> watch [label=""object""];
    put -> windowsill [label=""on""];
}"
"Command: Pick the red scissors from the laundry basket and lay it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    red -> scissors [label=""attribute""];
    pick -> scissors [label=""object""];
    pick -> laundry_basket [label=""from""];
    lay -> scissors [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Pick the red scissors from the laundry basket and lay it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    red -> scissors [label=""attribute""];
    pick -> scissors [label=""object""];
    pick -> laundry_basket [label=""from""];
    lay -> scissors [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Take the bottle opener from the cold shoe rack and put it on the spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> shoe_rack [label=""attribute""];
    take -> bottle_opener [label=""object""];
    take -> shoe_rack [label=""from""];
    put -> bottle_opener [label=""object""];
    put -> spice_rack [label=""on""];
}","Command: Take the bottle opener from the cold shoe rack and put it on the spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> shoe_rack [label=""attribute""];
    take -> bottle_opener [label=""object""];
    take -> shoe_rack [label=""from""];
    put -> bottle_opener [label=""object""];
    put -> spice_rack [label=""on""];
}"
"Command: Take the fuzzy charger from the trash can and put it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> charger [label=""object""];
    take -> trash_can [label=""from""];
    put -> charger [label=""object""];
    put -> beside_the_couch [label=""on""];
}","Command: Take the fuzzy charger from the trash can and put it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> trash_can [label=""from""];
    put -> charger [label=""object""];
    put -> beside_the_couch [label=""on""];
}"
"Command: Lift the comb from the next to the lamp and leave it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    lift -> comb [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    leave -> comb [label=""object""];
    leave -> laundry_machine [label=""on""];
}","Command: Lift the comb from the next to the lamp and leave it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    lift -> comb [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    leave -> comb [label=""object""];
    leave -> laundry_machine [label=""on""];
}"
"Command: Lift the green square document from the open sturdy fridge door and leave it on the counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    green -> document [label=""attribute""];
    square -> document [label=""attribute""];
    open -> fridge_door [label=""attribute""];
    sturdy -> fridge_door [label=""attribute""];
    lift -> document [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> document [label=""object""];
    leave -> counter [label=""on""];
}","Command: Lift the green square document from the open sturdy fridge door and leave it on the counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    square -> document [label=""attribute""];
    open -> fridge_door [label=""attribute""];
    sturdy -> fridge_door [label=""attribute""];
    lift -> document [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> document [label=""object""];
    leave -> counter [label=""on""];
}"
"Command: Take the green sneaker from the fish tank and leave it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> sneaker [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> fish_tank [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> mini_fridge [label=""on""];
}","Command: Take the green sneaker from the fish tank and leave it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> sneaker [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> fish_tank [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> mini_fridge [label=""on""];
}"
"Command: Take the smooth ball from the pantry and lay it on the sturdy noisy window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> ball [label=""attribute""];
    sturdy -> window_sill [label=""attribute""];
    noisy -> window_sill [label=""attribute""];
    take -> ball [label=""object""];
    take -> pantry [label=""from""];
    lay -> ball [label=""object""];
    lay -> window_sill [label=""on""];
}","Command: Take the smooth ball from the pantry and lay it on the sturdy noisy window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> ball [label=""attribute""];
    sturdy -> window_sill [label=""attribute""];
    noisy -> window_sill [label=""attribute""];
    take -> ball [label=""object""];
    take -> pantry [label=""from""];
    lay -> ball [label=""object""];
    lay -> window_sill [label=""on""];
}"
"Command: Take the cable from the file cabinet and put it on the cold ceramic desk.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> desk [label=""attribute""];
    ceramic -> desk [label=""attribute""];
    take -> cable [label=""object""];
    take -> file_cabinet [label=""from""];
    put -> cable [label=""object""];
    put -> desk [label=""on""];
}","Command: Take the cable from the file cabinet and put it on the cold ceramic desk.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    cold -> desk [label=""attribute""];
    ceramic -> desk [label=""attribute""];
    take -> cable [label=""object""];
    take -> file_cabinet [label=""from""];
    put -> cable [label=""object""];
    put -> desk [label=""on""];
}"
"Command: Lift the toy from the cushion and set it on the safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    lift -> toy [label=""object""];
    lift -> cushion [label=""from""];
    set -> toy [label=""object""];
    set -> safe [label=""on""];
}","Command: Lift the toy from the cushion and set it on the safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    lift -> toy [label=""object""];
    lift -> cushion [label=""from""];
    set -> toy [label=""object""];
    set -> safe [label=""on""];
}"
"Command: Grab the shiny black bat from the sturdy open laundry machine and put it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    shiny -> bat [label=""attribute""];
    black -> bat [label=""attribute""];
    sturdy -> laundry_machine [label=""attribute""];
    open -> laundry_machine [label=""attribute""];
    grab -> bat [label=""object""];
    grab -> laundry_machine [label=""from""];
    put -> bat [label=""object""];
    put -> trash_can [label=""on""];
}","Command: Grab the shiny black bat from the sturdy open laundry machine and put it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    black [label=""black"", shape=ellipse, fillcolor=white];
    shiny -> bat [label=""attribute""];
    black -> bat [label=""attribute""];
    sturdy -> laundry_machine [label=""attribute""];
    open -> laundry_machine [label=""attribute""];
    grab -> bat [label=""object""];
    grab -> laundry_machine [label=""from""];
    put -> bat [label=""object""];
    put -> trash_can [label=""on""];
}"
"Command: Grab the drill from the floor and leave it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> floor [label=""from""];
    leave -> drill [label=""object""];
    leave -> under_the_table [label=""on""];
}","Command: Grab the drill from the floor and leave it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> floor [label=""from""];
    leave -> drill [label=""object""];
    leave -> under_the_table [label=""on""];
}"
"Command: Lift the bill from the messy windowsill and place it on the dark mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    messy -> windowsill [label=""attribute""];
    dark -> mini_fridge [label=""attribute""];
    lift -> bill [label=""object""];
    lift -> windowsill [label=""from""];
    place -> bill [label=""object""];
    place -> mini_fridge [label=""on""];
}","Command: Lift the bill from the messy windowsill and place it on the dark mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    messy -> windowsill [label=""attribute""];
    dark -> mini_fridge [label=""attribute""];
    lift -> bill [label=""object""];
    lift -> windowsill [label=""from""];
    place -> bill [label=""object""];
    place -> mini_fridge [label=""on""];
}"
"Command: Pick the monitor from the corner and leave it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> corner [label=""from""];
    leave -> monitor [label=""object""];
    leave -> above_the_fridge [label=""on""];
}","Command: Pick the monitor from the corner and leave it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> corner [label=""from""];
    leave -> monitor [label=""object""];
    leave -> above_the_fridge [label=""on""];
}"
"Command: Pick the fork from the wooden dusty bread box and place it on the cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> bread_box [label=""attribute""];
    dusty -> bread_box [label=""attribute""];
    pick -> fork [label=""object""];
    pick -> bread_box [label=""from""];
    place -> fork [label=""object""];
    place -> cutlery_drawer [label=""on""];
}","Command: Pick the fork from the wooden dusty bread box and place it on the cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> bread_box [label=""attribute""];
    dusty -> bread_box [label=""attribute""];
    pick -> fork [label=""object""];
    pick -> bread_box [label=""from""];
    place -> fork [label=""object""];
    place -> cutlery_drawer [label=""on""];
}"
"Command: Take the smooth green ball from the wardrobe and leave it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> ball [label=""attribute""];
    green -> ball [label=""attribute""];
    take -> ball [label=""object""];
    take -> wardrobe [label=""from""];
    leave -> ball [label=""object""];
    leave -> window_ledge [label=""on""];
}","Command: Take the smooth green ball from the wardrobe and leave it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> ball [label=""attribute""];
    green -> ball [label=""attribute""];
    take -> ball [label=""object""];
    take -> wardrobe [label=""from""];
    leave -> ball [label=""object""];
    leave -> window_ledge [label=""on""];
}"
"Command: Pick the shirt from the warm fridge and set it on the cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    warm -> fridge [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> fridge [label=""from""];
    set -> shirt [label=""object""];
    set -> cushion [label=""on""];
}","Command: Pick the shirt from the warm fridge and set it on the cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    warm -> fridge [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> fridge [label=""from""];
    set -> shirt [label=""object""];
    set -> cushion [label=""on""];
}"
"Command: Take the glove from the nightstand and place it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> glove [label=""object""];
    take -> nightstand [label=""from""];
    place -> glove [label=""object""];
    place -> floor [label=""on""];
}","Command: Take the glove from the nightstand and place it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> glove [label=""object""];
    take -> nightstand [label=""from""];
    place -> glove [label=""object""];
    place -> floor [label=""on""];
}"
"Command: Grab the box from the trash can and set it on the cold shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    box [label=""box"", shape=ellipse, fillcolor=white];
    cold -> shoe_rack [label=""attribute""];
    grab -> box [label=""object""];
    grab -> trash_can [label=""from""];
    set -> box [label=""object""];
    set -> shoe_rack [label=""on""];
}","Command: Grab the box from the trash can and set it on the cold shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    cold -> shoe_rack [label=""attribute""];
    grab -> box [label=""object""];
    grab -> trash_can [label=""from""];
    set -> box [label=""object""];
    set -> shoe_rack [label=""on""];
}"
"Command: Take the square shoe from the ceramic clean ottoman and put it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> shoe [label=""attribute""];
    ceramic -> ottoman [label=""attribute""];
    clean -> ottoman [label=""attribute""];
    take -> shoe [label=""object""];
    take -> ottoman [label=""from""];
    put -> shoe [label=""object""];
    put -> sofa [label=""on""];
}","Command: Take the square shoe from the ceramic clean ottoman and put it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> shoe [label=""attribute""];
    ceramic -> ottoman [label=""attribute""];
    clean -> ottoman [label=""attribute""];
    take -> shoe [label=""object""];
    take -> ottoman [label=""from""];
    put -> shoe [label=""object""];
    put -> sofa [label=""on""];
}"
"Command: Lift the envelope from the bookshelf and leave it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> bookshelf [label=""from""];
    leave -> envelope [label=""object""];
    leave -> under_the_bed [label=""on""];
}","Command: Lift the envelope from the bookshelf and leave it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> bookshelf [label=""from""];
    leave -> envelope [label=""object""];
    leave -> under_the_bed [label=""on""];
}"
"Command: Grab the coaster from the windowsill and place it on the dusty shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    dusty -> shelf [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> windowsill [label=""from""];
    place -> coaster [label=""object""];
    place -> shelf [label=""on""];
}","Command: Grab the coaster from the windowsill and place it on the dusty shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    dusty -> shelf [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> windowsill [label=""from""];
    place -> coaster [label=""object""];
    place -> shelf [label=""on""];
}"
"Command: Lift the green fuzzy spoon from the toolbox and put it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    green -> spoon [label=""attribute""];
    fuzzy -> spoon [label=""attribute""];
    lift -> spoon [label=""object""];
    lift -> toolbox [label=""from""];
    put -> spoon [label=""object""];
    put -> wine_rack [label=""on""];
}","Command: Lift the green fuzzy spoon from the toolbox and put it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    green -> spoon [label=""attribute""];
    fuzzy -> spoon [label=""attribute""];
    lift -> spoon [label=""object""];
    lift -> toolbox [label=""from""];
    put -> spoon [label=""object""];
    put -> wine_rack [label=""on""];
}"
"Command: Take the bracelet from the table and place it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bracelet [label=""object""];
    take -> table [label=""from""];
    place -> bracelet [label=""object""];
    place -> shaving_kit [label=""on""];
}","Command: Take the bracelet from the table and place it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bracelet [label=""object""];
    take -> table [label=""from""];
    place -> bracelet [label=""object""];
    place -> shaving_kit [label=""on""];
}"
"Command: Pick the eraser from the ceramic wall shelf and leave it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    ceramic -> wall_shelf [label=""attribute""];
    pick -> eraser [label=""object""];
    pick -> wall_shelf [label=""from""];
    leave -> eraser [label=""object""];
    leave -> pantry [label=""on""];
}","Command: Pick the eraser from the ceramic wall shelf and leave it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    ceramic -> wall_shelf [label=""attribute""];
    pick -> eraser [label=""object""];
    pick -> wall_shelf [label=""from""];
    leave -> eraser [label=""object""];
    leave -> pantry [label=""on""];
}"
"Command: Lift the blunt fragile receipt from the counter and lay it on the shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> receipt [label=""attribute""];
    fragile -> receipt [label=""attribute""];
    lift -> receipt [label=""object""];
    lift -> counter [label=""from""];
    lay -> receipt [label=""object""];
    lay -> shoe_rack [label=""on""];
}","Command: Lift the blunt fragile receipt from the counter and lay it on the shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> receipt [label=""attribute""];
    fragile -> receipt [label=""attribute""];
    lift -> receipt [label=""object""];
    lift -> counter [label=""from""];
    lay -> receipt [label=""object""];
    lay -> shoe_rack [label=""on""];
}"
"Command: Grab the mug from the medicine cabinet and lay it on the wet closed side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    wet -> side_table [label=""attribute""];
    closed -> side_table [label=""attribute""];
    grab -> mug [label=""object""];
    grab -> medicine_cabinet [label=""from""];
    lay -> mug [label=""object""];
    lay -> side_table [label=""on""];
}","Command: Grab the mug from the medicine cabinet and lay it on the wet closed side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    wet -> side_table [label=""attribute""];
    closed -> side_table [label=""attribute""];
    grab -> mug [label=""object""];
    grab -> medicine_cabinet [label=""from""];
    lay -> mug [label=""object""];
    lay -> side_table [label=""on""];
}"
"Command: Grab the cracked blunt spoon from the next to the lamp and put it on the stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cracked -> spoon [label=""attribute""];
    blunt -> spoon [label=""attribute""];
    grab -> spoon [label=""object""];
    grab -> next_to_the_lamp [label=""from""];
    put -> spoon [label=""object""];
    put -> stove [label=""on""];
}","Command: Grab the cracked blunt spoon from the next to the lamp and put it on the stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cracked -> spoon [label=""attribute""];
    blunt -> spoon [label=""attribute""];
    grab -> spoon [label=""object""];
    grab -> next_to_the_lamp [label=""from""];
    put -> spoon [label=""object""];
    put -> stove [label=""on""];
}"
"Command: Grab the square heavy boot from the desk and lay it on the closed wooden spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    square -> boot [label=""attribute""];
    heavy -> boot [label=""attribute""];
    closed -> spice_rack [label=""attribute""];
    wooden -> spice_rack [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> desk [label=""from""];
    lay -> boot [label=""object""];
    lay -> spice_rack [label=""on""];
}","Command: Grab the square heavy boot from the desk and lay it on the closed wooden spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    square -> boot [label=""attribute""];
    heavy -> boot [label=""attribute""];
    closed -> spice_rack [label=""attribute""];
    wooden -> spice_rack [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> desk [label=""from""];
    lay -> boot [label=""object""];
    lay -> spice_rack [label=""on""];
}"
"Command: Take the glossy controller from the entrance and lay it on the wooden full sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> controller [label=""attribute""];
    wooden -> sofa [label=""attribute""];
    full -> sofa [label=""attribute""];
    take -> controller [label=""object""];
    take -> entrance [label=""from""];
    lay -> controller [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Take the glossy controller from the entrance and lay it on the wooden full sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> controller [label=""attribute""];
    wooden -> sofa [label=""attribute""];
    full -> sofa [label=""attribute""];
    take -> controller [label=""object""];
    take -> entrance [label=""from""];
    lay -> controller [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Take the cable from the above the fridge and leave it on the narrow step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> step_stool [label=""attribute""];
    take -> cable [label=""object""];
    take -> above_the_fridge [label=""from""];
    leave -> cable [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Take the cable from the above the fridge and leave it on the narrow step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> step_stool [label=""attribute""];
    take -> cable [label=""object""];
    take -> above_the_fridge [label=""from""];
    leave -> cable [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Take the shiny container from the kitchen island and leave it on the warm mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> container [label=""attribute""];
    warm -> mirror_shelf [label=""attribute""];
    take -> container [label=""object""];
    take -> kitchen_island [label=""from""];
    leave -> container [label=""object""];
    leave -> mirror_shelf [label=""on""];
}","Command: Take the shiny container from the kitchen island and leave it on the warm mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> container [label=""attribute""];
    warm -> mirror_shelf [label=""attribute""];
    take -> container [label=""object""];
    take -> kitchen_island [label=""from""];
    leave -> container [label=""object""];
    leave -> mirror_shelf [label=""on""];
}"
"Command: Pick the light fork from the snack shelf and lay it on the dusty dry fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    light -> fork [label=""attribute""];
    dusty -> fridge_door [label=""attribute""];
    dry -> fridge_door [label=""attribute""];
    pick -> fork [label=""object""];
    pick -> snack_shelf [label=""from""];
    lay -> fork [label=""object""];
    lay -> fridge_door [label=""on""];
}","Command: Pick the light fork from the snack shelf and lay it on the dusty dry fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    light -> fork [label=""attribute""];
    dusty -> fridge_door [label=""attribute""];
    dry -> fridge_door [label=""attribute""];
    pick -> fork [label=""object""];
    pick -> snack_shelf [label=""from""];
    lay -> fork [label=""object""];
    lay -> fridge_door [label=""on""];
}"
"Command: Grab the round cup from the first aid box and leave it on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    round -> cup [label=""attribute""];
    grab -> cup [label=""object""];
    grab -> first_aid_box [label=""from""];
    leave -> cup [label=""object""];
    leave -> radiator [label=""on""];
}","Command: Grab the round cup from the first aid box and leave it on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    round -> cup [label=""attribute""];
    grab -> cup [label=""object""];
    grab -> first_aid_box [label=""from""];
    leave -> cup [label=""object""];
    leave -> radiator [label=""on""];
}"
"Command: Take the soft shirt from the bookshelf top and set it on the messy open wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> shirt [label=""attribute""];
    messy -> wardrobe [label=""attribute""];
    open -> wardrobe [label=""attribute""];
    take -> shirt [label=""object""];
    take -> bookshelf_top [label=""from""];
    set -> shirt [label=""object""];
    set -> wardrobe [label=""on""];
}","Command: Take the soft shirt from the bookshelf top and set it on the messy open wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> shirt [label=""attribute""];
    messy -> wardrobe [label=""attribute""];
    open -> wardrobe [label=""attribute""];
    take -> shirt [label=""object""];
    take -> bookshelf_top [label=""from""];
    set -> shirt [label=""object""];
    set -> wardrobe [label=""on""];
}"
"Command: Take the helmet from the plastic dusty drawer and set it on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plastic -> drawer [label=""attribute""];
    dusty -> drawer [label=""attribute""];
    take -> helmet [label=""object""];
    take -> drawer [label=""from""];
    set -> helmet [label=""object""];
    set -> radiator [label=""on""];
}","Command: Take the helmet from the plastic dusty drawer and set it on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plastic -> drawer [label=""attribute""];
    dusty -> drawer [label=""attribute""];
    take -> helmet [label=""object""];
    take -> drawer [label=""from""];
    set -> helmet [label=""object""];
    set -> radiator [label=""on""];
}"
"Command: Pick the green blunt comb from the wet full bookshelf top and place it on the sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    green -> comb [label=""attribute""];
    blunt -> comb [label=""attribute""];
    wet -> bookshelf_top [label=""attribute""];
    full -> bookshelf_top [label=""attribute""];
    pick -> comb [label=""object""];
    pick -> bookshelf_top [label=""from""];
    place -> comb [label=""object""];
    place -> sink [label=""on""];
}","Command: Pick the green blunt comb from the wet full bookshelf top and place it on the sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    green -> comb [label=""attribute""];
    blunt -> comb [label=""attribute""];
    wet -> bookshelf_top [label=""attribute""];
    full -> bookshelf_top [label=""attribute""];
    pick -> comb [label=""object""];
    pick -> bookshelf_top [label=""from""];
    place -> comb [label=""object""];
    place -> sink [label=""on""];
}"
"Command: Grab the backpack from the plastic sofa and place it on the open terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    plastic -> sofa [label=""attribute""];
    open -> terrace_table [label=""attribute""];
    grab -> backpack [label=""object""];
    grab -> sofa [label=""from""];
    place -> backpack [label=""object""];
    place -> terrace_table [label=""on""];
}","Command: Grab the backpack from the plastic sofa and place it on the open terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    plastic -> sofa [label=""attribute""];
    open -> terrace_table [label=""attribute""];
    grab -> backpack [label=""object""];
    grab -> sofa [label=""from""];
    place -> backpack [label=""object""];
    place -> terrace_table [label=""on""];
}"
"Command: Grab the can from the bookshelf and lay it on the bright bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    bright -> bench [label=""attribute""];
    grab -> can [label=""object""];
    grab -> bookshelf [label=""from""];
    lay -> can [label=""object""];
    lay -> bench [label=""on""];
}","Command: Grab the can from the bookshelf and lay it on the bright bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    bright -> bench [label=""attribute""];
    grab -> can [label=""object""];
    grab -> bookshelf [label=""from""];
    lay -> can [label=""object""];
    lay -> bench [label=""on""];
}"
"Command: Take the white plant from the oven and leave it on the corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> plant [label=""attribute""];
    take -> plant [label=""object""];
    take -> oven [label=""from""];
    leave -> plant [label=""object""];
    leave -> corner [label=""on""];
}","Command: Take the white plant from the oven and leave it on the corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> plant [label=""attribute""];
    take -> plant [label=""object""];
    take -> oven [label=""from""];
    leave -> plant [label=""object""];
    leave -> corner [label=""on""];
}"
"Command: Lift the smooth mouse from the file cabinet and leave it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    smooth -> mouse [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> file_cabinet [label=""from""];
    leave -> mouse [label=""object""];
    leave -> vacuum_base [label=""on""];
}","Command: Lift the smooth mouse from the file cabinet and leave it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    smooth -> mouse [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> file_cabinet [label=""from""];
    leave -> mouse [label=""object""];
    leave -> vacuum_base [label=""on""];
}"
"Command: Take the can from the above the fridge and set it on the dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    take -> can [label=""object""];
    take -> above_the_fridge [label=""from""];
    set -> can [label=""object""];
    set -> dryer [label=""on""];
}","Command: Take the can from the above the fridge and set it on the dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    take -> can [label=""object""];
    take -> above_the_fridge [label=""from""];
    set -> can [label=""object""];
    set -> dryer [label=""on""];
}"
"Command: Take the fragile sharp plant from the trash can and leave it on the mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> plant [label=""attribute""];
    sharp -> plant [label=""attribute""];
    take -> plant [label=""object""];
    take -> trash_can [label=""from""];
    leave -> plant [label=""object""];
    leave -> mirror_shelf [label=""on""];
}","Command: Take the fragile sharp plant from the trash can and leave it on the mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> plant [label=""attribute""];
    sharp -> plant [label=""attribute""];
    take -> plant [label=""object""];
    take -> trash_can [label=""from""];
    leave -> plant [label=""object""];
    leave -> mirror_shelf [label=""on""];
}"
"Command: Lift the cracked pencil from the tidy closet and put it on the closed messy closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    cracked -> pencil [label=""attribute""];
    tidy -> closet [label=""attribute""];
    closed -> closet [label=""attribute""];
    messy -> closet [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> closet [label=""from""];
    put -> pencil [label=""object""];
    put -> closet [label=""on""];
}","Command: Lift the cracked pencil from the tidy closet and put it on the closed messy closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    cracked -> pencil [label=""attribute""];
    tidy -> closet [label=""attribute""];
    closed -> closet [label=""attribute""];
    messy -> closet [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> closet [label=""from""];
    put -> pencil [label=""object""];
    put -> closet [label=""on""];
}"
"Command: Grab the case from the closed terrace table and lay it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> terrace_table [label=""attribute""];
    grab -> case [label=""object""];
    grab -> terrace_table [label=""from""];
    lay -> case [label=""object""];
    lay -> desk_drawer [label=""on""];
}","Command: Grab the case from the closed terrace table and lay it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> terrace_table [label=""attribute""];
    grab -> case [label=""object""];
    grab -> terrace_table [label=""from""];
    lay -> case [label=""object""];
    lay -> desk_drawer [label=""on""];
}"
"Command: Take the remote from the trash can and put it on the empty window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    empty -> window_ledge [label=""attribute""];
    take -> remote [label=""object""];
    take -> trash_can [label=""from""];
    put -> remote [label=""object""];
    put -> window_ledge [label=""on""];
}","Command: Take the remote from the trash can and put it on the empty window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> window_ledge [label=""attribute""];
    take -> remote [label=""object""];
    take -> trash_can [label=""from""];
    put -> remote [label=""object""];
    put -> window_ledge [label=""on""];
}"
"Command: Pick the pillow from the pantry and place it on the clean locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    clean -> locker [label=""attribute""];
    pick -> pillow [label=""object""];
    pick -> pantry [label=""from""];
    place -> pillow [label=""object""];
    place -> locker [label=""on""];
}","Command: Pick the pillow from the pantry and place it on the clean locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    clean -> locker [label=""attribute""];
    pick -> pillow [label=""object""];
    pick -> pantry [label=""from""];
    place -> pillow [label=""object""];
    place -> locker [label=""on""];
}"
"Command: Pick the fuzzy mug from the tool rack and set it on the ceramic cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    fuzzy -> mug [label=""attribute""];
    ceramic -> cupboard [label=""attribute""];
    pick -> mug [label=""object""];
    pick -> tool_rack [label=""from""];
    set -> mug [label=""object""];
    set -> cupboard [label=""on""];
}","Command: Pick the fuzzy mug from the tool rack and set it on the ceramic cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    fuzzy -> mug [label=""attribute""];
    ceramic -> cupboard [label=""attribute""];
    pick -> mug [label=""object""];
    pick -> tool_rack [label=""from""];
    set -> mug [label=""object""];
    set -> cupboard [label=""on""];
}"
"Command: Lift the broom from the clean closed beside the couch and lay it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    clean -> beside_the_couch [label=""attribute""];
    closed -> beside_the_couch [label=""attribute""];
    lift -> broom [label=""object""];
    lift -> beside_the_couch [label=""from""];
    lay -> broom [label=""object""];
    lay -> armrest [label=""on""];
}","Command: Lift the broom from the clean closed beside the couch and lay it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    clean -> beside_the_couch [label=""attribute""];
    closed -> beside_the_couch [label=""attribute""];
    lift -> broom [label=""object""];
    lift -> beside_the_couch [label=""from""];
    lay -> broom [label=""object""];
    lay -> armrest [label=""on""];
}"
"Command: Pick the blunt thermos from the dusty full litter box and leave it on the empty rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    blunt -> thermos [label=""attribute""];
    dusty -> litter_box [label=""attribute""];
    full -> litter_box [label=""attribute""];
    empty -> rack [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> litter_box [label=""from""];
    leave -> thermos [label=""object""];
    leave -> rack [label=""on""];
}","Command: Pick the blunt thermos from the dusty full litter box and leave it on the empty rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    blunt -> thermos [label=""attribute""];
    dusty -> litter_box [label=""attribute""];
    full -> litter_box [label=""attribute""];
    empty -> rack [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> litter_box [label=""from""];
    leave -> thermos [label=""object""];
    leave -> rack [label=""on""];
}"
"Command: Grab the round cup from the dusty dry cupboard and set it on the entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> cup [label=""attribute""];
    dusty -> cupboard [label=""attribute""];
    dry -> cupboard [label=""attribute""];
    grab -> cup [label=""object""];
    grab -> cupboard [label=""from""];
    set -> cup [label=""object""];
    set -> entrance [label=""on""];
}","Command: Grab the round cup from the dusty dry cupboard and set it on the entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    cup [label=""cupboard"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> cup [label=""attribute""];
    dusty -> cupboard [label=""attribute""];
    dry -> cupboard [label=""attribute""];
    grab -> cup [label=""object""];
    grab -> cupboard [label=""from""];
    set -> cup [label=""object""];
    set -> entrance [label=""on""];
}"
"Command: Take the white square magazine from the messy ceramic bread box and lay it on the oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> magazine [label=""attribute""];
    square -> magazine [label=""attribute""];
    messy -> bread_box [label=""attribute""];
    ceramic -> bread_box [label=""attribute""];
    take -> magazine [label=""object""];
    take -> bread_box [label=""from""];
    lay -> magazine [label=""object""];
    lay -> oven [label=""on""];
}","Command: Take the white square magazine from the messy ceramic bread box and lay it on the oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> magazine [label=""attribute""];
    square -> magazine [label=""attribute""];
    messy -> bread_box [label=""attribute""];
    ceramic -> bread_box [label=""attribute""];
    take -> magazine [label=""object""];
    take -> bread_box [label=""from""];
    lay -> magazine [label=""object""];
    lay -> oven [label=""on""];
}"
"Command: Grab the spoon from the rack and leave it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    grab -> spoon [label=""object""];
    grab -> rack [label=""from""];
    leave -> spoon [label=""object""];
    leave -> cabinet [label=""on""];
}","Command: Grab the spoon from the rack and leave it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    grab -> spoon [label=""object""];
    grab -> rack [label=""from""];
    leave -> spoon [label=""object""];
    leave -> cabinet [label=""on""];
}"
"Command: Lift the heavy controller from the bright fridge door and lay it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> controller [label=""attribute""];
    bright -> fridge_door [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> fridge_door [label=""from""];
    lay -> controller [label=""object""];
    lay -> drawer [label=""on""];
}","Command: Lift the heavy controller from the bright fridge door and lay it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> controller [label=""attribute""];
    bright -> fridge_door [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> fridge_door [label=""from""];
    lay -> controller [label=""object""];
    lay -> drawer [label=""on""];
}"
"Command: Lift the paper from the bread box and set it on the warm kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    warm -> kitchen_island [label=""attribute""];
    lift -> paper [label=""object""];
    lift -> bread_box [label=""from""];
    set -> paper [label=""object""];
    set -> kitchen_island [label=""on""];
}","Command: Lift the paper from the bread box and set it on the warm kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    warm -> kitchen_island [label=""attribute""];
    lift -> paper [label=""object""];
    lift -> bread_box [label=""from""];
    set -> paper [label=""object""];
    set -> kitchen_island [label=""on""];
}"
"Command: Grab the stapler from the messy floor and place it on the tidy mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    messy -> floor [label=""attribute""];
    tidy -> mini_fridge [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> floor [label=""from""];
    place -> stapler [label=""object""];
    place -> mini_fridge [label=""on""];
}","Command: Grab the stapler from the messy floor and place it on the tidy mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    messy -> floor [label=""attribute""];
    tidy -> mini_fridge [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> floor [label=""from""];
    place -> stapler [label=""object""];
    place -> mini_fridge [label=""on""];
}"
"Command: Take the bin from the coffee table and put it on the open wet toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> toilet [label=""attribute""];
    wet -> toilet [label=""attribute""];
    take -> bin [label=""object""];
    take -> coffee_table [label=""from""];
    put -> bin [label=""object""];
    put -> toilet [label=""on""];
}","Command: Take the bin from the coffee table and put it on the open wet toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> toilet [label=""attribute""];
    wet -> toilet [label=""attribute""];
    take -> bin [label=""object""];
    take -> coffee_table [label=""from""];
    put -> bin [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Pick the notebook from the dark dusty dryer and set it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    dark -> dryer [label=""attribute""];
    dusty -> dryer [label=""attribute""];
    pick -> notebook [label=""object""];
    pick -> dryer [label=""from""];
    set -> notebook [label=""object""];
    set -> nightstand [label=""on""];
}","Command: Pick the notebook from the dark dusty dryer and set it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    dark -> dryer [label=""attribute""];
    dusty -> dryer [label=""attribute""];
    pick -> notebook [label=""object""];
    pick -> dryer [label=""from""];
    set -> notebook [label=""object""];
    set -> nightstand [label=""on""];
}"
"Command: Lift the monitor from the coat shelf and place it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> coat_shelf [label=""from""];
    place -> monitor [label=""object""];
    place -> behind_the_curtain [label=""on""];
}","Command: Lift the monitor from the coat shelf and place it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> coat_shelf [label=""from""];
    place -> monitor [label=""object""];
    place -> behind_the_curtain [label=""on""];
}"
"Command: Take the bat from the open closed coat shelf and set it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> coat_shelf [label=""attribute""];
    closed -> coat_shelf [label=""attribute""];
    take -> bat [label=""object""];
    take -> coat_shelf [label=""from""];
    set -> bat [label=""object""];
    set -> coffee_table [label=""on""];
}","Command: Take the bat from the open closed coat shelf and set it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> coat_shelf [label=""attribute""];
    closed -> coat_shelf [label=""attribute""];
    take -> bat [label=""object""];
    take -> coat_shelf [label=""from""];
    set -> bat [label=""object""];
    set -> coffee_table [label=""on""];
}"
"Command: Grab the white fuzzy wallet from the wooden bookshelf and place it on the safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    white -> wallet [label=""attribute""];
    fuzzy -> wallet [label=""attribute""];
    wooden -> bookshelf [label=""attribute""];
    grab -> wallet [label=""object""];
    grab -> bookshelf [label=""from""];
    place -> wallet [label=""object""];
    place -> safe [label=""on""];
}","Command: Grab the white fuzzy wallet from the wooden bookshelf and place it on the safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    white -> wallet [label=""attribute""];
    fuzzy -> wallet [label=""attribute""];
    wooden -> bookshelf [label=""attribute""];
    grab -> wallet [label=""object""];
    grab -> bookshelf [label=""from""];
    place -> wallet [label=""object""];
    place -> safe [label=""on""];
}"
"Command: Take the square heavy lamp from the empty noisy drawer top and set it on the dark side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    square -> lamp [label=""attribute""];
    heavy -> lamp [label=""attribute""];
    empty -> drawer_top [label=""attribute""];
    noisy -> drawer_top [label=""attribute""];
    dark -> side_table [label=""attribute""];
    take -> lamp [label=""object""];
    take -> drawer_top [label=""from""];
    set -> lamp [label=""object""];
    set -> side_table [label=""on""];
}","Command: Take the square heavy lamp from the empty noisy drawer top and set it on the dark side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> lamp [label=""attribute""];
    heavy -> lamp [label=""attribute""];
    empty -> drawer_top [label=""attribute""];
    noisy -> drawer_top [label=""attribute""];
    dark -> side_table [label=""attribute""];
    take -> lamp [label=""object""];
    take -> drawer_top [label=""from""];
    set -> lamp [label=""object""];
    set -> side_table [label=""on""];
}"
"Command: Lift the coin from the cushion and lay it on the storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    lift -> coin [label=""object""];
    lift -> cushion [label=""from""];
    lay -> coin [label=""object""];
    lay -> storage_box [label=""on""];
}","Command: Lift the coin from the cushion and lay it on the storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    lift -> coin [label=""object""];
    lift -> cushion [label=""from""];
    lay -> coin [label=""object""];
    lay -> storage_box [label=""on""];
}"
"Command: Grab the blue lego from the open dry sofa and lay it on the cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    blue -> lego [label=""attribute""];
    open -> sofa [label=""attribute""];
    dry -> sofa [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> sofa [label=""from""];
    lay -> lego [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}","Command: Grab the blue lego from the open dry sofa and lay it on the cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    blue -> lego [label=""attribute""];
    open -> sofa [label=""attribute""];
    dry -> sofa [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> sofa [label=""from""];
    lay -> lego [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}"
"Command: Lift the square cable from the sturdy narrow corner and put it on the cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    square -> cable [label=""attribute""];
    sturdy -> corner [label=""attribute""];
    narrow -> corner [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> corner [label=""from""];
    put -> cable [label=""object""];
    put -> cupboard [label=""on""];
}","Command: Lift the square cable from the sturdy narrow corner and put it on the cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    square -> cable [label=""attribute""];
    sturdy -> corner [label=""attribute""];
    narrow -> corner [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> corner [label=""from""];
    put -> cable [label=""object""];
    put -> cupboard [label=""on""];
}"
"Command: Grab the tool from the safe and place it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    grab -> tool [label=""object""];
    grab -> safe [label=""from""];
    place -> tool [label=""object""];
    place -> bathtub [label=""on""];
}","Command: Grab the tool from the safe and place it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    grab -> tool [label=""object""];
    grab -> safe [label=""from""];
    place -> tool [label=""object""];
    place -> bathtub [label=""on""];
}"
"Command: Take the backpack from the ottoman and place it on the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> backpack [label=""object""];
    take -> ottoman [label=""from""];
    place -> backpack [label=""object""];
    place -> table [label=""on""];
}","Command: Take the backpack from the ottoman and place it on the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> backpack [label=""object""];
    take -> ottoman [label=""from""];
    place -> backpack [label=""object""];
    place -> table [label=""on""];
}"
"Command: Pick the clock from the tidy pantry and lay it on the toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tidy -> pantry [label=""attribute""];
    pick -> clock [label=""object""];
    pick -> pantry [label=""from""];
    lay -> clock [label=""object""];
    lay -> toolbox [label=""on""];
}","Command: Pick the clock from the tidy pantry and lay it on the toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tidy -> pantry [label=""attribute""];
    pick -> clock [label=""object""];
    pick -> pantry [label=""from""];
    lay -> clock [label=""object""];
    lay -> toolbox [label=""on""];
}"
"Command: Take the jacket from the on the radiator and set it on the clean shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    clean -> shaving_kit [label=""attribute""];
    take -> jacket [label=""object""];
    take -> on_the_radiator [label=""from""];
    set -> jacket [label=""object""];
    set -> shaving_kit [label=""on""];
}","Command: Take the jacket from the on the radiator and set it on the clean shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    clean -> shaving_kit [label=""attribute""];
    take -> jacket [label=""object""];
    take -> on_the_radiator [label=""from""];
    set -> jacket [label=""object""];
    set -> shaving_kit [label=""on""];
}"
"Command: Grab the matte headphones from the full bed and leave it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    matte -> headphones [label=""attribute""];
    full -> bed [label=""attribute""];
    grab -> headphones [label=""object""];
    grab -> bed [label=""from""];
    leave -> headphones [label=""object""];
    leave -> coffee_table [label=""on""];
}","Command: Grab the matte headphones from the full bed and leave it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    matte -> headphones [label=""attribute""];
    full -> bed [label=""attribute""];
    grab -> headphones [label=""object""];
    grab -> bed [label=""from""];
    leave -> headphones [label=""object""];
    leave -> coffee_table [label=""on""];
}"
"Command: Lift the sock from the warm bench and set it on the cold garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    warm -> bench [label=""attribute""];
    cold -> garage [label=""attribute""];
    lift -> sock [label=""object""];
    lift -> bench [label=""from""];
    set -> sock [label=""object""];
    set -> garage [label=""on""];
}","Command: Lift the sock from the warm bench and set it on the cold garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    warm -> bench [label=""attribute""];
    cold -> garage [label=""attribute""];
    lift -> sock [label=""object""];
    lift -> bench [label=""from""];
    set -> sock [label=""object""];
    set -> garage [label=""on""];
}"
"Command: Lift the square smooth lego from the wardrobe and place it on the recycling bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> lego [label=""attribute""];
    smooth -> lego [label=""attribute""];
    lift -> lego [label=""object""];
    lift -> wardrobe [label=""from""];
    place -> lego [label=""object""];
    place -> recycling_bin [label=""on""];
}","Command: Lift the square smooth lego from the wardrobe and place it on the recycling bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> lego [label=""attribute""];
    smooth -> lego [label=""attribute""];
    lift -> lego [label=""object""];
    lift -> wardrobe [label=""from""];
    place -> lego [label=""object""];
    place -> recycling_bin [label=""on""];
}"
"Command: Take the matte red magazine from the kitchen drawer and lay it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte -> magazine [label=""attribute""];
    red -> magazine [label=""attribute""];
    take -> magazine [label=""object""];
    take -> kitchen_drawer [label=""from""];
    lay -> magazine [label=""object""];
    lay -> ottoman [label=""on""];
}","Command: Take the matte red magazine from the kitchen drawer and lay it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte -> magazine [label=""attribute""];
    red -> magazine [label=""attribute""];
    take -> magazine [label=""object""];
    take -> kitchen_drawer [label=""from""];
    lay -> magazine [label=""object""];
    lay -> ottoman [label=""on""];
}"
"Command: Pick the coaster from the bed and put it on the wet narrow wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    wet -> wardrobe [label=""attribute""];
    narrow -> wardrobe [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> bed [label=""from""];
    put -> coaster [label=""object""];
    put -> wardrobe [label=""on""];
}","Command: Pick the coaster from the bed and put it on the wet narrow wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    wet -> wardrobe [label=""attribute""];
    narrow -> wardrobe [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> bed [label=""from""];
    put -> coaster [label=""object""];
    put -> wardrobe [label=""on""];
}"
"Command: Grab the puzzle from the dark bookshelf top and set it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    dark -> bookshelf_top [label=""attribute""];
    grab -> puzzle [label=""object""];
    grab -> bookshelf_top [label=""from""];
    set -> puzzle [label=""object""];
    set -> fridge [label=""on""];
}","Command: Grab the puzzle from the dark bookshelf top and set it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    dark -> bookshelf_top [label=""attribute""];
    grab -> puzzle [label=""object""];
    grab -> bookshelf_top [label=""from""];
    set -> puzzle [label=""object""];
    set -> fridge [label=""on""];
}"
"Command: Grab the clock from the microwave and place it on the kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    grab -> clock [label=""object""];
    grab -> microwave [label=""from""];
    place -> clock [label=""object""];
    place -> kitchen_drawer [label=""on""];
}","Command: Grab the clock from the microwave and place it on the kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    grab -> clock [label=""object""];
    grab -> microwave [label=""from""];
    place -> clock [label=""object""];
    place -> kitchen_drawer [label=""on""];
}"
"Command: Grab the envelope from the warm noisy stand and lay it on the sturdy table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    warm -> stand [label=""attribute""];
    noisy -> stand [label=""attribute""];
    sturdy -> table [label=""attribute""];
    grab -> envelope [label=""object""];
    grab -> stand [label=""from""];
    lay -> envelope [label=""object""];
    lay -> table [label=""on""];
}","Command: Grab the envelope from the warm noisy stand and lay it on the sturdy table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    warm -> stand [label=""attribute""];
    noisy -> stand [label=""attribute""];
    sturdy -> table [label=""attribute""];
    grab -> envelope [label=""object""];
    grab -> stand [label=""from""];
    lay -> envelope [label=""object""];
    lay -> table [label=""on""];
}"
"Command: Take the bowl from the safe and set it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bowl [label=""object""];
    take -> safe [label=""from""];
    set -> bowl [label=""object""];
    set -> rack [label=""on""];
}","Command: Take the bowl from the safe and set it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bowl [label=""object""];
    take -> safe [label=""from""];
    set -> bowl [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Pick the shiny round envelope from the armrest and put it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shiny -> envelope [label=""attribute""];
    round -> envelope [label=""attribute""];
    pick -> envelope [label=""object""];
    pick -> armrest [label=""from""];
    put -> envelope [label=""object""];
    put -> toiletry_shelf [label=""on""];
}","Command: Pick the shiny round envelope from the armrest and put it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shiny -> envelope [label=""attribute""];
    round -> envelope [label=""attribute""];
    pick -> envelope [label=""object""];
    pick -> armrest [label=""from""];
    put -> envelope [label=""object""];
    put -> toiletry_shelf [label=""on""];
}"
"Command: Lift the hard cracked towel from the shoe rack and lay it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    hard -> towel [label=""attribute""];
    cracked -> towel [label=""attribute""];
    lift -> towel [label=""object""];
    lift -> shoe_rack [label=""from""];
    lay -> towel [label=""object""];
    lay -> floor [label=""on""];
}","Command: Lift the hard cracked towel from the shoe rack and lay it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    hard -> towel [label=""attribute""];
    cracked -> towel [label=""attribute""];
    lift -> towel [label=""object""];
    lift -> shoe_rack [label=""from""];
    lay -> towel [label=""object""];
    lay -> floor [label=""on""];
}"
"Command: Take the knife from the garden box and place it on the full closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    full -> closet [label=""attribute""];
    take -> knife [label=""object""];
    take -> garden_box [label=""from""];
    place -> knife [label=""object""];
    place -> closet [label=""on""];
}","Command: Take the knife from the garden box and place it on the full closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    full -> closet [label=""attribute""];
    take -> knife [label=""object""];
    take -> garden_box [label=""from""];
    place -> knife [label=""object""];
    place -> closet [label=""on""];
}"
"Command: Take the soft fuzzy lamp from the dusty toilet and put it on the magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    soft -> lamp [label=""attribute""];
    fuzzy -> lamp [label=""attribute""];
    dusty -> toilet [label=""attribute""];
    take -> lamp [label=""object""];
    take -> toilet [label=""from""];
    put -> lamp [label=""object""];
    put -> magazine_rack [label=""on""];
}","Command: Take the soft fuzzy lamp from the dusty toilet and put it on the magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    soft -> lamp [label=""attribute""];
    fuzzy -> lamp [label=""attribute""];
    dusty -> toilet [label=""attribute""];
    take -> lamp [label=""object""];
    take -> toilet [label=""from""];
    put -> lamp [label=""object""];
    put -> magazine_rack [label=""on""];
}"
"Command: Take the sharp keyboard from the toolbox and place it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> keyboard [label=""object""];
    take -> toolbox [label=""from""];
    place -> keyboard [label=""object""];
    place -> under_the_bed [label=""on""];
}","Command: Take the sharp keyboard from the toolbox and place it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> keyboard [label=""attribute""];
    take -> keyboard [label=""object""];
    take -> toolbox [label=""from""];
    place -> keyboard [label=""object""];
    place -> under_the_bed [label=""on""];
}"
"Command: Pick the hard matte case from the messy windowsill and place it on the clean full window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    hard -> case [label=""attribute""];
    matte -> case [label=""attribute""];
    messy -> windowsill [label=""attribute""];
    clean -> window_sill [label=""attribute""];
    full -> window_sill [label=""attribute""];
    pick -> case [label=""object""];
    pick -> windowsill [label=""from""];
    place -> case [label=""object""];
    place -> window_sill [label=""on""];
}","Command: Pick the hard matte case from the messy windowsill and place it on the clean full window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    hard -> case [label=""attribute""];
    matte -> case [label=""attribute""];
    messy -> windowsill [label=""attribute""];
    clean -> window_sill [label=""attribute""];
    full -> window_sill [label=""attribute""];
    pick -> case [label=""object""];
    pick -> windowsill [label=""from""];
    place -> case [label=""object""];
    place -> window_sill [label=""on""];
}"
"Command: Pick the hat from the step stool and put it on the dry stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dry -> stove [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> step_stool [label=""from""];
    put -> hat [label=""object""];
    put -> stove [label=""on""];
}","Command: Pick the hat from the step stool and put it on the dry stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dry -> stove [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> step_stool [label=""from""];
    put -> hat [label=""object""];
    put -> stove [label=""on""];
}"
"Command: Lift the bowl from the wet coffee table and place it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    wet -> coffee_table [label=""attribute""];
    lift -> bowl [label=""object""];
    lift -> coffee_table [label=""from""];
    place -> bowl [label=""object""];
    place -> snack_shelf [label=""on""];
}","Command: Lift the bowl from the wet coffee table and place it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    wet -> coffee_table [label=""attribute""];
    lift -> bowl [label=""object""];
    lift -> coffee_table [label=""from""];
    place -> bowl [label=""object""];
    place -> snack_shelf [label=""on""];
}"
"Command: Lift the square matte plant from the clean shaving kit and set it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    square -> plant [label=""attribute""];
    matte -> plant [label=""attribute""];
    clean -> shaving_kit [label=""attribute""];
    lift -> plant [label=""object""];
    lift -> shaving_kit [label=""from""];
    set -> plant [label=""object""];
    set -> mini_fridge [label=""on""];
}","Command: Lift the square matte plant from the clean shaving kit and set it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    square -> plant [label=""attribute""];
    matte -> plant [label=""attribute""];
    clean -> shaving_kit [label=""attribute""];
    lift -> plant [label=""object""];
    lift -> shaving_kit [label=""from""];
    set -> plant [label=""object""];
    set -> mini_fridge [label=""on""];
}"
"Command: Lift the smooth blunt bottle from the bright tidy corner and place it on the empty open bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    smooth -> bottle [label=""attribute""];
    blunt -> bottle [label=""attribute""];
    bright -> corner [label=""attribute""];
    tidy -> corner [label=""attribute""];
    empty -> bread_box [label=""attribute""];
    open -> bread_box [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> corner [label=""from""];
    place -> bottle [label=""object""];
    place -> bread_box [label=""on""];
}","Command: Lift the smooth blunt bottle from the bright tidy corner and place it on the empty open bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    smooth -> bottle [label=""attribute""];
    blunt -> bottle [label=""attribute""];
    bright -> corner [label=""attribute""];
    tidy -> corner [label=""attribute""];
    empty -> bread_box [label=""attribute""];
    open -> bread_box [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> corner [label=""from""];
    place -> bottle [label=""object""];
    place -> bread_box [label=""on""];
}"
"Command: Pick the necklace from the basket and place it on the first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    pick -> necklace [label=""object""];
    pick -> basket [label=""from""];
    place -> necklace [label=""object""];
    place -> first_aid_box [label=""on""];
}","Command: Pick the necklace from the basket and place it on the first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    pick -> necklace [label=""object""];
    pick -> basket [label=""from""];
    place -> necklace [label=""object""];
    place -> first_aid_box [label=""on""];
}"
"Command: Pick the white soft controller from the sofa and set it on the noisy trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    white -> controller [label=""attribute""];
    soft -> controller [label=""attribute""];
    noisy -> trash_can [label=""attribute""];
    pick -> controller [label=""object""];
    pick -> sofa [label=""from""];
    set -> controller [label=""object""];
    set -> trash_can [label=""on""];
}","Command: Pick the white soft controller from the sofa and set it on the noisy trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    white -> controller [label=""attribute""];
    soft -> controller [label=""attribute""];
    noisy -> trash_can [label=""attribute""];
    pick -> controller [label=""object""];
    pick -> sofa [label=""from""];
    set -> controller [label=""object""];
    set -> trash_can [label=""on""];
}"
"Command: Grab the magazine from the coat rack and lay it on the heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    grab -> magazine [label=""object""];
    grab -> coat_rack [label=""from""];
    lay -> magazine [label=""object""];
    lay -> heater [label=""on""];
}","Command: Grab the magazine from the coat rack and lay it on the heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    grab -> magazine [label=""object""];
    grab -> coat_rack [label=""from""];
    lay -> magazine [label=""object""];
    lay -> heater [label=""on""];
}"
"Command: Lift the glass from the sturdy window ledge and put it on the shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sturdy -> window_ledge [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> window_ledge [label=""from""];
    put -> glass [label=""object""];
    put -> shoe_rack [label=""on""];
}","Command: Lift the glass from the sturdy window ledge and put it on the shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sturdy -> window_ledge [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> window_ledge [label=""from""];
    put -> glass [label=""object""];
    put -> shoe_rack [label=""on""];
}"
"Command: Lift the blue controller from the side table and put it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    blue -> controller [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> side_table [label=""from""];
    put -> controller [label=""object""];
    put -> toiletry_shelf [label=""on""];
}","Command: Lift the blue controller from the side table and put it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blue -> controller [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> side_table [label=""from""];
    put -> controller [label=""object""];
    put -> toiletry_shelf [label=""on""];
}"
"Command: Grab the white toy from the warm garage and put it on the entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    white -> toy [label=""attribute""];
    warm -> garage [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> garage [label=""from""];
    put -> toy [label=""object""];
    put -> entrance [label=""on""];
}","Command: Grab the white toy from the warm garage and put it on the entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    white -> toy [label=""attribute""];
    warm -> garage [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> garage [label=""from""];
    put -> toy [label=""object""];
    put -> entrance [label=""on""];
}"
"Command: Lift the heavy sharp tie from the corner and place it on the closed dry tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> tie [label=""attribute""];
    sharp -> tie [label=""attribute""];
    closed -> tv_cabinet [label=""attribute""];
    dry -> tv_cabinet [label=""attribute""];
    lift -> tie [label=""object""];
    lift -> corner [label=""from""];
    place -> tie [label=""object""];
    place -> tv_cabinet [label=""on""];
}","Command: Lift the heavy sharp tie from the corner and place it on the closed dry tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy -> tie [label=""attribute""];
    sharp -> tie [label=""attribute""];
    closed -> tv_cabinet [label=""attribute""];
    dry -> tv_cabinet [label=""attribute""];
    lift -> tie [label=""object""];
    lift -> corner [label=""from""];
    place -> tie [label=""object""];
    place -> tv_cabinet [label=""on""];
}"
"Command: Grab the square can from the shoe rack and lay it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> can [label=""object""];
    grab -> shoe_rack [label=""from""];
    lay -> can [label=""object""];
    lay -> under_the_bed [label=""on""];
}","Command: Grab the square can from the shoe rack and lay it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    square -> can [label=""attribute""];
    grab -> can [label=""object""];
    grab -> shoe_rack [label=""from""];
    lay -> can [label=""object""];
    lay -> under_the_bed [label=""on""];
}"
"Command: Lift the blanket from the cutlery drawer and put it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    lift -> blanket [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    put -> blanket [label=""object""];
    put -> cabinet [label=""on""];
}","Command: Lift the blanket from the cutlery drawer and put it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    lift -> blanket [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    put -> blanket [label=""object""];
    put -> cabinet [label=""on""];
}"
"Command: Grab the smooth hard hammer from the sturdy wet side table and put it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hard -> hammer [label=""attribute""];
    sturdy -> side_table [label=""attribute""];
    wet -> side_table [label=""attribute""];
    grab -> hammer [label=""object""];
    grab -> side_table [label=""from""];
    put -> hammer [label=""object""];
    put -> under_the_table [label=""on""];
}","Command: Grab the smooth hard hammer from the sturdy wet side table and put it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hard -> hammer [label=""attribute""];
    sturdy -> side_table [label=""attribute""];
    wet -> side_table [label=""attribute""];
    grab -> hammer [label=""object""];
    grab -> side_table [label=""from""];
    put -> hammer [label=""object""];
    put -> under_the_table [label=""on""];
}"
"Command: Grab the black sharp slipper from the windowsill and lay it on the entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> slipper [label=""attribute""];
    sharp -> slipper [label=""attribute""];
    grab -> slipper [label=""object""];
    grab -> windowsill [label=""from""];
    lay -> slipper [label=""object""];
    lay -> entrance [label=""on""];
}","Command: Grab the black sharp slipper from the windowsill and lay it on the entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> slipper [label=""attribute""];
    sharp -> slipper [label=""attribute""];
    grab -> slipper [label=""object""];
    grab -> windowsill [label=""from""];
    lay -> slipper [label=""object""];
    lay -> entrance [label=""on""];
}"
"Command: Take the can from the hallway and leave it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> can [label=""object""];
    take -> hallway [label=""from""];
    leave -> can [label=""object""];
    leave -> wardrobe [label=""on""];
}","Command: Take the can from the hallway and leave it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> can [label=""object""];
    take -> hallway [label=""from""];
    leave -> can [label=""object""];
    leave -> wardrobe [label=""on""];
}"
"Command: Take the hard smooth fork from the makeup bag and place it on the full cold table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> fork [label=""attribute""];
    smooth -> fork [label=""attribute""];
    full -> table [label=""attribute""];
    cold -> table [label=""attribute""];
    take -> fork [label=""object""];
    take -> makeup_bag [label=""from""];
    place -> fork [label=""object""];
    place -> table [label=""on""];
}","Command: Take the hard smooth fork from the makeup bag and place it on the full cold table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> fork [label=""attribute""];
    smooth -> fork [label=""attribute""];
    full -> table [label=""attribute""];
    cold -> table [label=""attribute""];
    take -> fork [label=""object""];
    take -> makeup_bag [label=""from""];
    place -> fork [label=""object""];
    place -> table [label=""on""];
}"
"Command: Lift the hard shirt from the bread box and leave it on the noisy tidy entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    hard -> shirt [label=""attribute""];
    noisy -> entrance [label=""attribute""];
    tidy -> entrance [label=""attribute""];
    lift -> shirt [label=""object""];
    lift -> bread_box [label=""from""];
    leave -> shirt [label=""object""];
    leave -> entrance [label=""on""];
}","Command: Lift the hard shirt from the bread box and leave it on the noisy tidy entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    hard -> shirt [label=""attribute""];
    noisy -> entrance [label=""attribute""];
    tidy -> entrance [label=""attribute""];
    lift -> shirt [label=""object""];
    lift -> bread_box [label=""from""];
    leave -> shirt [label=""object""];
    leave -> entrance [label=""on""];
}"
"Command: Lift the sharp toothbrush from the toiletry shelf and lay it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> toothbrush [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> toiletry_shelf [label=""from""];
    lay -> toothbrush [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Lift the sharp toothbrush from the toiletry shelf and lay it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> toothbrush [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> toiletry_shelf [label=""from""];
    lay -> toothbrush [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Take the white bottle opener from the heater and leave it on the bright vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> bottle_opener [label=""attribute""];
    bright -> vacuum_base [label=""attribute""];
    take -> bottle_opener [label=""object""];
    take -> heater [label=""from""];
    leave -> bottle_opener [label=""object""];
    leave -> vacuum_base [label=""on""];
}","Command: Take the white bottle opener from the heater and leave it on the bright vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> bottle_opener [label=""attribute""];
    bright -> vacuum_base [label=""attribute""];
    take -> bottle_opener [label=""object""];
    take -> heater [label=""from""];
    leave -> bottle_opener [label=""object""];
    leave -> vacuum_base [label=""on""];
}"
"Command: Take the blunt fragile monitor from the window ledge and leave it on the cold noisy mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> monitor [label=""attribute""];
    fragile -> monitor [label=""attribute""];
    cold -> mini_fridge [label=""attribute""];
    noisy -> mini_fridge [label=""attribute""];
    take -> monitor [label=""object""];
    take -> window_ledge [label=""from""];
    leave -> monitor [label=""object""];
    leave -> mini_fridge [label=""on""];
}","Command: Take the blunt fragile monitor from the window ledge and leave it on the cold noisy mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> monitor [label=""attribute""];
    fragile -> monitor [label=""attribute""];
    cold -> mini_fridge [label=""attribute""];
    noisy -> mini_fridge [label=""attribute""];
    take -> monitor [label=""object""];
    take -> window_ledge [label=""from""];
    leave -> monitor [label=""object""];
    leave -> mini_fridge [label=""on""];
}"
"Command: Lift the heavy watch from the bathtub and set it on the closed garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    heavy -> watch [label=""attribute""];
    closed -> garage [label=""attribute""];
    lift -> watch [label=""object""];
    lift -> bathtub [label=""from""];
    set -> watch [label=""object""];
    set -> garage [label=""on""];
}","Command: Lift the heavy watch from the bathtub and set it on the closed garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> watch [label=""attribute""];
    closed -> garage [label=""attribute""];
    lift -> watch [label=""object""];
    lift -> bathtub [label=""from""];
    set -> watch [label=""object""];
    set -> garage [label=""on""];
}"
"Command: Lift the cracked hard mouse from the tidy floor and lay it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    cracked -> mouse [label=""attribute""];
    hard -> mouse [label=""attribute""];
    tidy -> floor [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> floor [label=""from""];
    lay -> mouse [label=""object""];
    lay -> makeup_bag [label=""on""];
}","Command: Lift the cracked hard mouse from the tidy floor and lay it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    cracked -> mouse [label=""attribute""];
    hard -> mouse [label=""attribute""];
    tidy -> floor [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> floor [label=""from""];
    lay -> mouse [label=""object""];
    lay -> makeup_bag [label=""on""];
}"
"Command: Pick the smooth thermos from the cold spice rack and place it on the magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    smooth -> thermos [label=""attribute""];
    cold -> spice_rack [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> spice_rack [label=""from""];
    place -> thermos [label=""object""];
    place -> magazine_rack [label=""on""];
}","Command: Pick the smooth thermos from the cold spice rack and place it on the magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    smooth -> thermos [label=""attribute""];
    cold -> spice_rack [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> spice_rack [label=""from""];
    place -> thermos [label=""object""];
    place -> magazine_rack [label=""on""];
}"
"Command: Lift the doll from the messy wooden step stool and put it on the empty rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    messy -> step_stool [label=""attribute""];
    wooden -> step_stool [label=""attribute""];
    empty -> rack [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> step_stool [label=""from""];
    put -> doll [label=""object""];
    put -> rack [label=""on""];
}","Command: Lift the doll from the messy wooden step stool and put it on the empty rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    messy -> step_stool [label=""attribute""];
    wooden -> step_stool [label=""attribute""];
    empty -> rack [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> step_stool [label=""from""];
    put -> doll [label=""object""];
    put -> rack [label=""on""];
}"
"Command: Grab the fragile towel from the bread box and set it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fragile -> towel [label=""attribute""];
    grab -> towel [label=""object""];
    grab -> bread_box [label=""from""];
    set -> towel [label=""object""];
    set -> coffee_table [label=""on""];
}","Command: Grab the fragile towel from the bread box and set it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fragile -> towel [label=""attribute""];
    grab -> towel [label=""object""];
    grab -> bread_box [label=""from""];
    set -> towel [label=""object""];
    set -> coffee_table [label=""on""];
}"
"Command: Pick the coin from the ceramic bright magazine rack and put it on the empty closed bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    ceramic -> magazine_rack [label=""attribute""];
    bright -> magazine_rack [label=""attribute""];
    empty -> bin [label=""attribute""];
    closed -> bin [label=""attribute""];
    pick -> coin [label=""object""];
    pick -> magazine_rack [label=""from""];
    put -> coin [label=""object""];
    put -> bin [label=""on""];
}","Command: Pick the coin from the ceramic bright magazine rack and put it on the empty closed bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    ceramic -> magazine_rack [label=""attribute""];
    bright -> magazine_rack [label=""attribute""];
    empty -> bin [label=""attribute""];
    closed -> bin [label=""attribute""];
    pick -> coin [label=""object""];
    pick -> magazine_rack [label=""from""];
    put -> coin [label=""object""];
    put -> bin [label=""on""];
}"
"Command: Pick the bowl from the cold closet and lay it on the closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    cold -> closet [label=""attribute""];
    pick -> bowl [label=""object""];
    pick -> closet [label=""from""];
    lay -> bowl [label=""object""];
    lay -> closet [label=""on""];
}","Command: Pick the bowl from the cold closet and lay it on the closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    cold -> closet [label=""attribute""];
    pick -> bowl [label=""object""];
    pick -> closet [label=""from""];
    lay -> bowl [label=""object""];
    lay -> closet [label=""on""];
}"
"Command: Take the round keyboard from the bookshelf and leave it on the plastic tidy fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    round -> keyboard [label=""attribute""];
    plastic -> fridge [label=""attribute""];
    tidy -> fridge [label=""attribute""];
    take -> keyboard [label=""object""];
    take -> bookshelf [label=""from""];
    leave -> keyboard [label=""object""];
    leave -> fridge [label=""on""];
}","Command: Take the round keyboard from the bookshelf and leave it on the plastic tidy fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    round -> keyboard [label=""attribute""];
    plastic -> fridge [label=""attribute""];
    tidy -> fridge [label=""attribute""];
    take -> keyboard [label=""object""];
    take -> bookshelf [label=""from""];
    leave -> keyboard [label=""object""];
    leave -> fridge [label=""on""];
}"
"Command: Take the cracked shoe from the ottoman and set it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cracked -> shoe [label=""attribute""];
    take -> shoe [label=""object""];
    take -> ottoman [label=""from""];
    set -> shoe [label=""object""];
    set -> rack [label=""on""];
}","Command: Take the cracked shoe from the ottoman and set it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cracked -> shoe [label=""attribute""];
    take -> shoe [label=""object""];
    take -> ottoman [label=""from""];
    set -> shoe [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Take the black heavy folder from the coat shelf and lay it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    black -> folder [label=""attribute""];
    heavy -> folder [label=""attribute""];
    take -> folder [label=""object""];
    take -> coat_shelf [label=""from""];
    lay -> folder [label=""object""];
    lay -> file_cabinet [label=""on""];
}","Command: Take the black heavy folder from the coat shelf and lay it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    black -> folder [label=""attribute""];
    heavy -> folder [label=""attribute""];
    take -> folder [label=""object""];
    take -> coat_shelf [label=""from""];
    lay -> folder [label=""object""];
    lay -> file_cabinet [label=""on""];
}"
"Command: Pick the shiny fuzzy paper from the bench and lay it on the dusty narrow bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> paper [label=""attribute""];
    fuzzy -> paper [label=""attribute""];
    dusty -> bookshelf_top [label=""attribute""];
    narrow -> bookshelf_top [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> bench [label=""from""];
    lay -> paper [label=""object""];
    lay -> bookshelf_top [label=""on""];
}","Command: Pick the shiny fuzzy paper from the bench and lay it on the dusty narrow bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> paper [label=""attribute""];
    fuzzy -> paper [label=""attribute""];
    dusty -> bookshelf_top [label=""attribute""];
    narrow -> bookshelf_top [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> bench [label=""from""];
    lay -> paper [label=""object""];
    lay -> bookshelf_top [label=""on""];
}"
"Command: Grab the glossy white folder from the clean cabinet and lay it on the microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    glossy -> folder [label=""attribute""];
    white -> folder [label=""attribute""];
    clean -> cabinet [label=""attribute""];
    grab -> folder [label=""object""];
    grab -> cabinet [label=""from""];
    lay -> folder [label=""object""];
    lay -> microwave [label=""on""];
}","Command: Grab the glossy white folder from the clean cabinet and lay it on the microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    glossy -> folder [label=""attribute""];
    white -> folder [label=""attribute""];
    clean -> cabinet [label=""attribute""];
    grab -> folder [label=""object""];
    grab -> cabinet [label=""from""];
    lay -> folder [label=""object""];
    lay -> microwave [label=""on""];
}"
"Command: Take the square soft paper from the bench and leave it on the dry shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> paper [label=""attribute""];
    soft -> paper [label=""attribute""];
    dry -> shoe_rack [label=""attribute""];
    take -> paper [label=""object""];
    take -> bench [label=""from""];
    leave -> paper [label=""object""];
    leave -> shoe_rack [label=""on""];
}","Command: Take the square soft paper from the bench and leave it on the dry shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> paper [label=""attribute""];
    soft -> paper [label=""attribute""];
    dry -> shoe_rack [label=""attribute""];
    take -> paper [label=""object""];
    take -> bench [label=""from""];
    leave -> paper [label=""object""];
    leave -> shoe_rack [label=""on""];
}"
"Command: Grab the cracked green controller from the nightstand and place it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    cracked -> controller [label=""attribute""];
    green -> controller [label=""attribute""];
    grab -> controller [label=""object""];
    grab -> nightstand [label=""from""];
    place -> controller [label=""object""];
    place -> sofa [label=""on""];
}","Command: Grab the cracked green controller from the nightstand and place it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    cracked -> controller [label=""attribute""];
    green -> controller [label=""attribute""];
    grab -> controller [label=""object""];
    grab -> nightstand [label=""from""];
    place -> controller [label=""object""];
    place -> sofa [label=""on""];
}"
"Command: Take the glossy lego from the laundry machine and lay it on the sturdy bookshelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> lego [label=""attribute""];
    sturdy -> bookshelf [label=""attribute""];
    take -> lego [label=""object""];
    take -> laundry_machine [label=""from""];
    lay -> lego [label=""object""];
    lay -> bookshelf [label=""on""];
}","Command: Take the glossy lego from the laundry machine and lay it on the sturdy bookshelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> lego [label=""attribute""];
    sturdy -> bookshelf [label=""attribute""];
    take -> lego [label=""object""];
    take -> laundry_machine [label=""from""];
    lay -> lego [label=""object""];
    lay -> bookshelf [label=""on""];
}"
"Command: Lift the doll from the shoe rack and leave it on the warm hallway.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    warm -> hallway [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> shoe_rack [label=""from""];
    leave -> doll [label=""object""];
    leave -> hallway [label=""on""];
}","Command: Lift the doll from the shoe rack and leave it on the warm hallway.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    warm -> hallway [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> shoe_rack [label=""from""];
    leave -> doll [label=""object""];
    leave -> hallway [label=""on""];
}"
"Command: Take the shiny smooth charger from the armrest and lay it on the plastic toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> charger [label=""attribute""];
    smooth -> charger [label=""attribute""];
    plastic -> toiletry_shelf [label=""attribute""];
    take -> charger [label=""object""];
    take -> armrest [label=""from""];
    lay -> charger [label=""object""];
    lay -> toiletry_shelf [label=""on""];
}","Command: Take the shiny smooth charger from the armrest and lay it on the plastic toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> charger [label=""attribute""];
    smooth -> charger [label=""attribute""];
    plastic -> toiletry_shelf [label=""attribute""];
    take -> charger [label=""object""];
    take -> armrest [label=""from""];
    lay -> charger [label=""object""];
    lay -> toiletry_shelf [label=""on""];
}"
"Command: Pick the light square container from the wardrobe and lay it on the tidy wooden cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    light -> container [label=""attribute""];
    square -> container [label=""attribute""];
    tidy -> cutlery_drawer [label=""attribute""];
    wooden -> cutlery_drawer [label=""attribute""];
    pick -> container [label=""object""];
    pick -> wardrobe [label=""from""];
    lay -> container [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}","Command: Pick the light square container from the wardrobe and lay it on the tidy wooden cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    container [label=""container"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    light -> container [label=""attribute""];
    square -> container [label=""attribute""];
    tidy -> cutlery_drawer [label=""attribute""];
    wooden -> cutlery_drawer [label=""attribute""];
    pick -> container [label=""object""];
    pick -> wardrobe [label=""from""];
    lay -> container [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}"
"Command: Take the lamp from the balcony shelf and leave it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    take -> lamp [label=""object""];
    take -> balcony_shelf [label=""from""];
    leave -> lamp [label=""object""];
    leave -> bathtub [label=""on""];
}","Command: Take the lamp from the balcony shelf and leave it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    take -> lamp [label=""object""];
    take -> balcony_shelf [label=""from""];
    leave -> lamp [label=""object""];
    leave -> bathtub [label=""on""];
}"
"Command: Lift the black cracked glass from the makeup bag and place it on the corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> glass [label=""attribute""];
    cracked -> glass [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> makeup_bag [label=""from""];
    place -> glass [label=""object""];
    place -> corner [label=""on""];
}","Command: Lift the black cracked glass from the makeup bag and place it on the corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> glass [label=""attribute""];
    cracked -> glass [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> makeup_bag [label=""from""];
    place -> glass [label=""object""];
    place -> corner [label=""on""];
}"
"Command: Grab the tie from the side table and lay it on the wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    grab -> tie [label=""object""];
    grab -> side_table [label=""from""];
    lay -> tie [label=""object""];
    lay -> wall_hook [label=""on""];
}","Command: Grab the tie from the side table and lay it on the wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    grab -> tie [label=""object""];
    grab -> side_table [label=""from""];
    lay -> tie [label=""object""];
    lay -> wall_hook [label=""on""];
}"
"Command: Grab the marker from the wooden sturdy drawer top and place it on the empty bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wooden -> drawer_top [label=""attribute""];
    sturdy -> drawer_top [label=""attribute""];
    empty -> bench [label=""attribute""];
    grab -> marker [label=""object""];
    grab -> drawer_top [label=""from""];
    place -> marker [label=""object""];
    place -> bench [label=""on""];
}","Command: Grab the marker from the wooden sturdy drawer top and place it on the empty bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wooden -> drawer_top [label=""attribute""];
    sturdy -> drawer_top [label=""attribute""];
    empty -> bench [label=""attribute""];
    grab -> marker [label=""object""];
    grab -> drawer_top [label=""from""];
    place -> marker [label=""object""];
    place -> bench [label=""on""];
}"
"Command: Lift the white cracked envelope from the empty full mirror shelf and set it on the plastic bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    white -> envelope [label=""attribute""];
    cracked -> envelope [label=""attribute""];
    empty -> mirror_shelf [label=""attribute""];
    full -> mirror_shelf [label=""attribute""];
    plastic -> bookshelf_top [label=""attribute""];
    lift -> envelope [label=""object""];
    lift -> mirror_shelf [label=""from""];
    set -> envelope [label=""object""];
    set -> bookshelf_top [label=""on""];
}","Command: Lift the white cracked envelope from the empty full mirror shelf and set it on the plastic bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    white -> envelope [label=""attribute""];
    cracked -> envelope [label=""attribute""];
    empty -> mirror_shelf [label=""attribute""];
    full -> mirror_shelf [label=""attribute""];
    plastic -> bookshelf_top [label=""attribute""];
    lift -> envelope [label=""object""];
    lift -> mirror_shelf [label=""from""];
    set -> envelope [label=""object""];
    set -> bookshelf_top [label=""on""];
}"
"Command: Pick the sharp paper from the shaving kit and leave it on the bright warm dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> paper [label=""attribute""];
    bright -> dryer [label=""attribute""];
    warm -> dryer [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> shaving_kit [label=""from""];
    leave -> paper [label=""object""];
    leave -> dryer [label=""on""];
}","Command: Pick the sharp paper from the shaving kit and leave it on the bright warm dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sharp -> paper [label=""attribute""];
    bright -> dryer [label=""attribute""];
    warm -> dryer [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> shaving_kit [label=""from""];
    leave -> paper [label=""object""];
    leave -> dryer [label=""on""];
}"
"Command: Lift the monitor from the wooden sturdy windowsill and place it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> windowsill [label=""attribute""];
    sturdy -> windowsill [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> windowsill [label=""from""];
    place -> monitor [label=""object""];
    place -> snack_shelf [label=""on""];
}","Command: Lift the monitor from the wooden sturdy windowsill and place it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> windowsill [label=""attribute""];
    sturdy -> windowsill [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> windowsill [label=""from""];
    place -> monitor [label=""object""];
    place -> snack_shelf [label=""on""];
}"
"Command: Lift the eraser from the dry bright wall hook and put it on the dusty clean garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dry -> wall_hook [label=""attribute""];
    bright -> wall_hook [label=""attribute""];
    dusty -> garage [label=""attribute""];
    clean -> garage [label=""attribute""];
    lift -> eraser [label=""object""];
    lift -> wall_hook [label=""from""];
    put -> eraser [label=""object""];
    put -> garage [label=""on""];
}","Command: Lift the eraser from the dry bright wall hook and put it on the dusty clean garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dry -> wall_hook [label=""attribute""];
    bright -> wall_hook [label=""attribute""];
    dusty -> garage [label=""attribute""];
    clean -> garage [label=""attribute""];
    lift -> eraser [label=""object""];
    lift -> wall_hook [label=""from""];
    put -> eraser [label=""object""];
    put -> garage [label=""on""];
}"
"Command: Take the phone from the under the table and put it on the microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> phone [label=""object""];
    take -> under_the_table [label=""from""];
    put -> phone [label=""object""];
    put -> microwave [label=""on""];
}","Command: Take the phone from the under the table and put it on the microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> phone [label=""object""];
    take -> under_the_table [label=""from""];
    put -> phone [label=""object""];
    put -> microwave [label=""on""];
}"
"Command: Pick the toy from the dry wine rack and lay it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> wine_rack [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> wine_rack [label=""from""];
    lay -> toy [label=""object""];
    lay -> bookshelf_top [label=""on""];
}","Command: Pick the toy from the dry wine rack and lay it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    dry -> wine_rack [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> wine_rack [label=""from""];
    lay -> toy [label=""object""];
    lay -> bookshelf_top [label=""on""];
}"
"Command: Grab the heavy square shirt from the noisy mini fridge and place it on the bright open medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> shirt [label=""attribute""];
    square -> shirt [label=""attribute""];
    noisy -> mini_fridge [label=""attribute""];
    bright -> medicine_cabinet [label=""attribute""];
    open -> medicine_cabinet [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> mini_fridge [label=""from""];
    place -> shirt [label=""object""];
    place -> medicine_cabinet [label=""on""];
}","Command: Grab the heavy square shirt from the noisy mini fridge and place it on the bright open medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> shirt [label=""attribute""];
    square -> shirt [label=""attribute""];
    noisy -> mini_fridge [label=""attribute""];
    bright -> medicine_cabinet [label=""attribute""];
    open -> medicine_cabinet [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> mini_fridge [label=""from""];
    place -> shirt [label=""object""];
    place -> medicine_cabinet [label=""on""];
}"
"Command: Grab the tool from the noisy tool rack and lay it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    noisy -> tool_rack [label=""attribute""];
    grab -> tool [label=""object""];
    grab -> tool_rack [label=""from""];
    lay -> tool [label=""object""];
    lay -> bed [label=""on""];
}","Command: Grab the tool from the noisy tool rack and lay it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    noisy -> tool_rack [label=""attribute""];
    grab -> tool [label=""object""];
    grab -> tool_rack [label=""from""];
    lay -> tool [label=""object""];
    lay -> bed [label=""on""];
}"
"Command: Take the document from the messy storage box and set it on the wooden litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    messy -> storage_box [label=""attribute""];
    wooden -> litter_box [label=""attribute""];
    take -> document [label=""object""];
    take -> storage_box [label=""from""];
    set -> document [label=""object""];
    set -> litter_box [label=""on""];
}","Command: Take the document from the messy storage box and set it on the wooden litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    messy -> storage_box [label=""attribute""];
    wooden -> litter_box [label=""attribute""];
    take -> document [label=""object""];
    take -> storage_box [label=""from""];
    set -> document [label=""object""];
    set -> litter_box [label=""on""];
}"
"Command: Take the glossy blue umbrella from the sturdy sink and lay it on the plastic oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    glossy -> umbrella [label=""attribute""];
    blue -> umbrella [label=""attribute""];
    sturdy -> sink [label=""attribute""];
    plastic -> oven [label=""attribute""];
    take -> umbrella [label=""object""];
    take -> sink [label=""from""];
    lay -> umbrella [label=""object""];
    lay -> oven [label=""on""];
}","Command: Take the glossy blue umbrella from the sturdy sink and lay it on the plastic oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> umbrella [label=""attribute""];
    blue -> umbrella [label=""attribute""];
    sturdy -> sink [label=""attribute""];
    plastic -> oven [label=""attribute""];
    take -> umbrella [label=""object""];
    take -> sink [label=""from""];
    lay -> umbrella [label=""object""];
    lay -> oven [label=""on""];
}"
"Command: Grab the light card from the narrow wooden tv cabinet and leave it on the plastic laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    light -> card [label=""attribute""];
    narrow -> tv_cabinet [label=""attribute""];
    wooden -> tv_cabinet [label=""attribute""];
    plastic -> laundry_basket [label=""attribute""];
    grab -> card [label=""object""];
    grab -> tv_cabinet [label=""from""];
    leave -> card [label=""object""];
    leave -> laundry_basket [label=""on""];
}","Command: Grab the light card from the narrow wooden tv cabinet and leave it on the plastic laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    light -> card [label=""attribute""];
    narrow -> tv_cabinet [label=""attribute""];
    wooden -> tv_cabinet [label=""attribute""];
    plastic -> laundry_basket [label=""attribute""];
    grab -> card [label=""object""];
    grab -> tv_cabinet [label=""from""];
    leave -> card [label=""object""];
    leave -> laundry_basket [label=""on""];
}"
"Command: Take the white envelope from the noisy drawer and place it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> envelope [label=""attribute""];
    noisy -> drawer [label=""attribute""];
    take -> envelope [label=""object""];
    take -> drawer [label=""from""];
    place -> envelope [label=""object""];
    place -> file_cabinet [label=""on""];
}","Command: Take the white envelope from the noisy drawer and place it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> envelope [label=""attribute""];
    noisy -> drawer [label=""attribute""];
    take -> envelope [label=""object""];
    take -> drawer [label=""from""];
    place -> envelope [label=""object""];
    place -> file_cabinet [label=""on""];
}"
"Command: Pick the card from the balcony shelf and place it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    card [label=""card"", shape=ellipse, fillcolor=white];
    pick -> card [label=""object""];
    pick -> balcony_shelf [label=""from""];
    place -> card [label=""object""];
    place -> bed [label=""on""];
}","Command: Pick the card from the balcony shelf and place it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    card [label=""card"", shape=ellipse, fillcolor=white];
    pick -> card [label=""object""];
    pick -> balcony_shelf [label=""from""];
    place -> card [label=""object""];
    place -> bed [label=""on""];
}"
"Command: Take the jacket from the bright dusty microwave and place it on the open narrow hallway.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    bright -> microwave [label=""attribute""];
    dusty -> microwave [label=""attribute""];
    open -> hallway [label=""attribute""];
    narrow -> hallway [label=""attribute""];
    take -> jacket [label=""object""];
    take -> microwave [label=""from""];
    place -> jacket [label=""object""];
    place -> hallway [label=""on""];
}","Command: Take the jacket from the bright dusty microwave and place it on the open narrow hallway.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> microwave [label=""attribute""];
    dusty -> microwave [label=""attribute""];
    open -> hallway [label=""attribute""];
    narrow -> hallway [label=""attribute""];
    take -> jacket [label=""object""];
    take -> microwave [label=""from""];
    place -> jacket [label=""object""];
    place -> hallway [label=""on""];
}"
"Command: Lift the comb from the cupboard and set it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    lift -> comb [label=""object""];
    lift -> cupboard [label=""from""];
    set -> comb [label=""object""];
    set -> snack_shelf [label=""on""];
}","Command: Lift the comb from the cupboard and set it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    lift -> comb [label=""object""];
    lift -> cupboard [label=""from""];
    set -> comb [label=""object""];
    set -> snack_shelf [label=""on""];
}"
"Command: Lift the tablet from the step stool and set it on the fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    lift -> tablet [label=""object""];
    lift -> step_stool [label=""from""];
    set -> tablet [label=""object""];
    set -> fruit_bowl [label=""on""];
}","Command: Lift the tablet from the step stool and set it on the fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    lift -> tablet [label=""object""];
    lift -> step_stool [label=""from""];
    set -> tablet [label=""object""];
    set -> fruit_bowl [label=""on""];
}"
"Command: Pick the receipt from the coffee table and set it on the warm table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    warm -> table [label=""attribute""];
    pick -> receipt [label=""object""];
    pick -> coffee_table [label=""from""];
    set -> receipt [label=""object""];
    set -> table [label=""on""];
}","Command: Pick the receipt from the coffee table and set it on the warm table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    warm -> table [label=""attribute""];
    pick -> receipt [label=""object""];
    pick -> coffee_table [label=""from""];
    set -> receipt [label=""object""];
    set -> table [label=""on""];
}"
"Command: Lift the matte ball from the bathtub and set it on the cold plastic drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    matte -> ball [label=""attribute""];
    cold -> drawer [label=""attribute""];
    plastic -> drawer [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> bathtub [label=""from""];
    set -> ball [label=""object""];
    set -> drawer [label=""on""];
}","Command: Lift the matte ball from the bathtub and set it on the cold plastic drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    matte -> ball [label=""attribute""];
    cold -> drawer [label=""attribute""];
    plastic -> drawer [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> bathtub [label=""from""];
    set -> ball [label=""object""];
    set -> drawer [label=""on""];
}"
"Command: Pick the fuzzy wallet from the wooden nightstand and leave it on the plastic closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    fuzzy -> wallet [label=""attribute""];
    wooden -> nightstand [label=""attribute""];
    plastic -> closet [label=""attribute""];
    pick -> wallet [label=""object""];
    pick -> nightstand [label=""from""];
    leave -> wallet [label=""object""];
    leave -> closet [label=""on""];
}","Command: Pick the fuzzy wallet from the wooden nightstand and leave it on the plastic closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    fuzzy -> wallet [label=""attribute""];
    wooden -> nightstand [label=""attribute""];
    plastic -> closet [label=""attribute""];
    pick -> wallet [label=""object""];
    pick -> nightstand [label=""from""];
    leave -> wallet [label=""object""];
    leave -> closet [label=""on""];
}"
"Command: Pick the coaster from the clean first aid box and place it on the noisy tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    clean -> first_aid_box [label=""attribute""];
    noisy -> tv_cabinet [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> first_aid_box [label=""from""];
    place -> coaster [label=""object""];
    place -> tv_cabinet [label=""on""];
}","Command: Pick the coaster from the clean first aid box and place it on the noisy tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    clean -> first_aid_box [label=""attribute""];
    noisy -> tv_cabinet [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> first_aid_box [label=""from""];
    place -> coaster [label=""object""];
    place -> tv_cabinet [label=""on""];
}"
"Command: Pick the hard bowl from the entrance and set it on the warm messy fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    hard -> bowl [label=""attribute""];
    warm -> fridge [label=""attribute""];
    messy -> fridge [label=""attribute""];
    pick -> bowl [label=""object""];
    pick -> entrance [label=""from""];
    set -> bowl [label=""object""];
    set -> fridge [label=""on""];
}","Command: Pick the hard bowl from the entrance and set it on the warm messy fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    hard -> bowl [label=""attribute""];
    warm -> fridge [label=""attribute""];
    messy -> fridge [label=""attribute""];
    pick -> bowl [label=""object""];
    pick -> entrance [label=""from""];
    set -> bowl [label=""object""];
    set -> fridge [label=""on""];
}"
"Command: Pick the glossy remote from the microwave and set it on the bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    glossy -> remote [label=""attribute""];
    pick -> remote [label=""object""];
    pick -> microwave [label=""from""];
    set -> remote [label=""object""];
    set -> bin [label=""on""];
}","Command: Pick the glossy remote from the microwave and set it on the bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    glossy -> remote [label=""attribute""];
    pick -> remote [label=""object""];
    pick -> microwave [label=""from""];
    set -> remote [label=""object""];
    set -> bin [label=""on""];
}"
"Command: Pick the can from the wooden mirror shelf and leave it on the dry wet window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> mirror_shelf [label=""attribute""];
    dry -> window_ledge [label=""attribute""];
    wet -> window_ledge [label=""attribute""];
    pick -> can [label=""object""];
    pick -> mirror_shelf [label=""from""];
    leave -> can [label=""object""];
    leave -> window_ledge [label=""on""];
}","Command: Pick the can from the wooden mirror shelf and leave it on the dry wet window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> mirror_shelf [label=""attribute""];
    dry -> window_ledge [label=""attribute""];
    wet -> window_ledge [label=""attribute""];
    pick -> can [label=""object""];
    pick -> mirror_shelf [label=""from""];
    leave -> can [label=""object""];
    leave -> window_ledge [label=""on""];
}"
"Command: Lift the ruler from the armrest and place it on the litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    lift -> ruler [label=""object""];
    lift -> armrest [label=""from""];
    place -> ruler [label=""object""];
    place -> litter_box [label=""on""];
}","Command: Lift the ruler from the armrest and place it on the litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    lift -> ruler [label=""object""];
    lift -> armrest [label=""from""];
    place -> ruler [label=""object""];
    place -> litter_box [label=""on""];
}"
"Command: Take the marker from the dark wet fridge and put it on the sturdy ceramic kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> fridge [label=""attribute""];
    wet -> fridge [label=""attribute""];
    sturdy -> kitchen_island [label=""attribute""];
    ceramic -> kitchen_island [label=""attribute""];
    take -> marker [label=""object""];
    take -> fridge [label=""from""];
    put -> marker [label=""object""];
    put -> kitchen_island [label=""on""];
}","Command: Take the marker from the dark wet fridge and put it on the sturdy ceramic kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> fridge [label=""attribute""];
    wet -> fridge [label=""attribute""];
    sturdy -> kitchen_island [label=""attribute""];
    ceramic -> kitchen_island [label=""attribute""];
    take -> marker [label=""object""];
    take -> fridge [label=""from""];
    put -> marker [label=""object""];
    put -> kitchen_island [label=""on""];
}"
"Command: Pick the keyboard from the bright closed window sill and leave it on the messy magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    bright -> window_sill [label=""attribute""];
    closed -> window_sill [label=""attribute""];
    messy -> magazine_rack [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> window_sill [label=""from""];
    leave -> keyboard [label=""object""];
    leave -> magazine_rack [label=""on""];
}","Command: Pick the keyboard from the bright closed window sill and leave it on the messy magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    bright -> window_sill [label=""attribute""];
    closed -> window_sill [label=""attribute""];
    messy -> magazine_rack [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> window_sill [label=""from""];
    leave -> keyboard [label=""object""];
    leave -> magazine_rack [label=""on""];
}"
"Command: Grab the bin from the plastic bathtub and lay it on the warm coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    plastic -> bathtub [label=""attribute""];
    warm -> coffee_table [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> bathtub [label=""from""];
    lay -> bin [label=""object""];
    lay -> coffee_table [label=""on""];
}","Command: Grab the bin from the plastic bathtub and lay it on the warm coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    plastic -> bathtub [label=""attribute""];
    warm -> coffee_table [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> bathtub [label=""from""];
    lay -> bin [label=""object""];
    lay -> coffee_table [label=""on""];
}"
"Command: Pick the cracked matte magazine from the microwave and place it on the microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    cracked -> magazine [label=""attribute""];
    matte -> magazine [label=""attribute""];
    pick -> magazine [label=""object""];
    pick -> microwave [label=""from""];
    place -> magazine [label=""object""];
    place -> microwave [label=""on""];
}","Command: Pick the cracked matte magazine from the microwave and place it on the microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    cracked -> magazine [label=""attribute""];
    matte -> magazine [label=""attribute""];
    pick -> magazine [label=""object""];
    pick -> microwave [label=""from""];
    place -> magazine [label=""object""];
    place -> microwave [label=""on""];
}"
"Command: Lift the red spoon from the window sill and place it on the plastic drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    red -> spoon [label=""attribute""];
    plastic -> drawer_top [label=""attribute""];
    lift -> spoon [label=""object""];
    lift -> window_sill [label=""from""];
    place -> spoon [label=""object""];
    place -> drawer_top [label=""on""];
}","Command: Lift the red spoon from the window sill and place it on the plastic drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    plastic -> drawer_top [label=""attribute""];
    lift -> spoon [label=""object""];
    lift -> window_sill [label=""from""];
    place -> spoon [label=""object""];
    place -> drawer_top [label=""on""];
}"
"Command: Take the mug from the pantry and place it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mug [label=""object""];
    take -> pantry [label=""from""];
    place -> mug [label=""object""];
    place -> bed [label=""on""];
}","Command: Take the mug from the pantry and place it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mug [label=""object""];
    take -> pantry [label=""from""];
    place -> mug [label=""object""];
    place -> bed [label=""on""];
}"
"Command: Grab the folder from the trash can and lay it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    grab -> folder [label=""object""];
    grab -> trash_can [label=""from""];
    lay -> folder [label=""object""];
    lay -> desk_drawer [label=""on""];
}","Command: Grab the folder from the trash can and lay it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    grab -> folder [label=""object""];
    grab -> trash_can [label=""from""];
    lay -> folder [label=""object""];
    lay -> desk_drawer [label=""on""];
}"
"Command: Grab the blue remote from the empty entrance and place it on the side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    blue -> remote [label=""attribute""];
    empty -> entrance [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> entrance [label=""from""];
    place -> remote [label=""object""];
    place -> side_table [label=""on""];
}","Command: Grab the blue remote from the empty entrance and place it on the side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    blue -> remote [label=""attribute""];
    empty -> entrance [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> entrance [label=""from""];
    place -> remote [label=""object""];
    place -> side_table [label=""on""];
}"
"Command: Pick the notebook from the cabinet and leave it on the storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    pick -> notebook [label=""object""];
    pick -> cabinet [label=""from""];
    leave -> notebook [label=""object""];
    leave -> storage_box [label=""on""];
}","Command: Pick the notebook from the cabinet and leave it on the storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    pick -> notebook [label=""object""];
    pick -> cabinet [label=""from""];
    leave -> notebook [label=""object""];
    leave -> storage_box [label=""on""];
}"
"Command: Grab the belt from the full dry bathtub and lay it on the dry wet cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    full -> bathtub [label=""attribute""];
    dry -> bathtub [label=""attribute""];
    dry -> cutlery_drawer [label=""attribute""];
    wet -> cutlery_drawer [label=""attribute""];
    grab -> belt [label=""object""];
    grab -> bathtub [label=""from""];
    lay -> belt [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}","Command: Grab the belt from the full dry bathtub and lay it on the dry wet cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    full -> bathtub [label=""attribute""];
    dry -> bathtub [label=""attribute""];
    wet -> cutlery_drawer [label=""attribute""];
    grab -> belt [label=""object""];
    grab -> bathtub [label=""from""];
    lay -> belt [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}"
"Command: Grab the key from the bright first aid box and lay it on the tidy wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    bright -> first_aid_box [label=""attribute""];
    tidy -> wall_hook [label=""attribute""];
    grab -> key [label=""object""];
    grab -> first_aid_box [label=""from""];
    lay -> key [label=""object""];
    lay -> wall_hook [label=""on""];
}","Command: Grab the key from the bright first aid box and lay it on the tidy wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    bright -> first_aid_box [label=""attribute""];
    tidy -> wall_hook [label=""attribute""];
    grab -> key [label=""object""];
    grab -> first_aid_box [label=""from""];
    lay -> key [label=""object""];
    lay -> wall_hook [label=""on""];
}"
"Command: Lift the headphones from the warm bookshelf top and set it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> headphones [label=""object""];
    lift -> bookshelf_top [label=""from""];
    set -> headphones [label=""object""];
    set -> above_the_fridge [label=""on""];
}","Command: Lift the headphones from the warm bookshelf top and set it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    warm -> bookshelf_top [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> bookshelf_top [label=""from""];
    set -> headphones [label=""object""];
    set -> above_the_fridge [label=""on""];
}"
"Command: Grab the magazine from the behind the curtain and place it on the warm pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    warm -> pantry [label=""attribute""];
    grab -> magazine [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    place -> magazine [label=""object""];
    place -> pantry [label=""on""];
}","Command: Grab the magazine from the behind the curtain and place it on the warm pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    warm -> pantry [label=""attribute""];
    grab -> magazine [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    place -> magazine [label=""object""];
    place -> pantry [label=""on""];
}"
"Command: Take the soap from the desk drawer and lay it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> soap [label=""object""];
    take -> desk_drawer [label=""from""];
    lay -> soap [label=""object""];
    lay -> vacuum_base [label=""on""];
}","Command: Take the soap from the desk drawer and lay it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> soap [label=""object""];
    take -> desk_drawer [label=""from""];
    lay -> soap [label=""object""];
    lay -> vacuum_base [label=""on""];
}"
"Command: Lift the ball from the wet fridge and set it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    wet -> fridge [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> fridge [label=""from""];
    set -> ball [label=""object""];
    set -> wardrobe [label=""on""];
}","Command: Lift the ball from the wet fridge and set it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    wet -> fridge [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> fridge [label=""from""];
    set -> ball [label=""object""];
    set -> wardrobe [label=""on""];
}"
"Command: Take the fragile glossy wallet from the cold coat shelf and set it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    fragile -> wallet [label=""attribute""];
    glossy -> wallet [label=""attribute""];
    cold -> coat_shelf [label=""attribute""];
    take -> wallet [label=""object""];
    take -> coat_shelf [label=""from""];
    set -> wallet [label=""object""];
    set -> armrest [label=""on""];
}","Command: Take the fragile glossy wallet from the cold coat shelf and set it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> wallet [label=""attribute""];
    glossy -> wallet [label=""attribute""];
    cold -> coat_shelf [label=""attribute""];
    take -> wallet [label=""object""];
    take -> coat_shelf [label=""from""];
    set -> wallet [label=""object""];
    set -> armrest [label=""on""];
}"
"Command: Grab the matte helmet from the snack shelf and leave it on the heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    matte -> helmet [label=""attribute""];
    grab -> helmet [label=""object""];
    grab -> snack_shelf [label=""from""];
    leave -> helmet [label=""object""];
    leave -> heater [label=""on""];
}","Command: Grab the matte helmet from the snack shelf and leave it on the heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    matte -> helmet [label=""attribute""];
    grab -> helmet [label=""object""];
    grab -> snack_shelf [label=""from""];
    leave -> helmet [label=""object""];
    leave -> heater [label=""on""];
}"
"Command: Pick the round thermos from the sink and place it on the empty narrow bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    round -> thermos [label=""attribute""];
    empty -> bin [label=""attribute""];
    narrow -> bin [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> sink [label=""from""];
    place -> thermos [label=""object""];
    place -> bin [label=""on""];
}","Command: Pick the round thermos from the sink and place it on the empty narrow bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    round -> thermos [label=""attribute""];
    empty -> bin [label=""attribute""];
    narrow -> bin [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> sink [label=""from""];
    place -> thermos [label=""object""];
    place -> bin [label=""on""];
}"
"Command: Lift the notebook from the noisy wet desk drawer and leave it on the tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    noisy -> desk_drawer [label=""attribute""];
    wet -> desk_drawer [label=""attribute""];
    lift -> notebook [label=""object""];
    lift -> desk_drawer [label=""from""];
    leave -> notebook [label=""object""];
    leave -> tv_stand [label=""on""];
}","Command: Lift the notebook from the noisy wet desk drawer and leave it on the tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    noisy -> desk_drawer [label=""attribute""];
    wet -> desk_drawer [label=""attribute""];
    lift -> notebook [label=""object""];
    lift -> desk_drawer [label=""from""];
    leave -> notebook [label=""object""];
    leave -> tv_stand [label=""on""];
}"
"Command: Grab the sharp black tablet from the closed coat rack and place it on the dusty shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    sharp -> tablet [label=""attribute""];
    black -> tablet [label=""attribute""];
    closed -> coat_rack [label=""attribute""];
    dusty -> shaving_kit [label=""attribute""];
    grab -> tablet [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> tablet [label=""object""];
    place -> shaving_kit [label=""on""];
}","Command: Grab the sharp black tablet from the closed coat rack and place it on the dusty shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    sharp -> tablet [label=""attribute""];
    black -> tablet [label=""attribute""];
    closed -> coat_rack [label=""attribute""];
    dusty -> shaving_kit [label=""attribute""];
    grab -> tablet [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> tablet [label=""object""];
    place -> shaving_kit [label=""on""];
}"
"Command: Lift the wallet from the cupboard and place it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    lift -> wallet [label=""object""];
    lift -> cupboard [label=""from""];
    place -> wallet [label=""object""];
    place -> step_stool [label=""on""];
}","Command: Lift the wallet from the cupboard and place it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    lift -> wallet [label=""object""];
    lift -> cupboard [label=""from""];
    place -> wallet [label=""object""];
    place -> step_stool [label=""on""];
}"
"Command: Pick the shiny smooth paper from the cutlery drawer and put it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shiny -> paper [label=""attribute""];
    smooth -> paper [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    put -> paper [label=""object""];
    put -> mini_fridge [label=""on""];
}","Command: Pick the shiny smooth paper from the cutlery drawer and put it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    paper -> paper [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    put -> paper [label=""object""];
    put -> mini_fridge [label=""on""];
}"
"Command: Lift the cup from the dusty toiletry shelf and put it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dusty -> toiletry_shelf [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> toiletry_shelf [label=""from""];
    put -> cup [label=""object""];
    put -> fridge [label=""on""];
}","Command: Lift the cup from the dusty toiletry shelf and put it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dusty -> toiletry_shelf [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> toiletry_shelf [label=""from""];
    put -> cup [label=""object""];
    put -> fridge [label=""on""];
}"
"Command: Lift the sneaker from the drawer top and lay it on the corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    lift -> sneaker [label=""object""];
    lift -> drawer_top [label=""from""];
    lay -> sneaker [label=""object""];
    lay -> corner [label=""on""];
}","Command: Lift the sneaker from the drawer top and lay it on the corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    lift -> sneaker [label=""object""];
    lift -> drawer_top [label=""from""];
    lay -> sneaker [label=""object""];
    lay -> corner [label=""on""];
}"
"Command: Pick the speaker from the dry dusty under the table and set it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> under_the_table [label=""attribute""];
    dusty -> under_the_table [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> speaker [label=""object""];
    set -> rack [label=""on""];
}","Command: Pick the speaker from the dry dusty under the table and set it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> under_the_table [label=""attribute""];
    dusty -> under_the_table [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> speaker [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Grab the red bin from the empty under the bed and put it on the wet bright cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> bin [label=""attribute""];
    empty -> under_the_bed [label=""attribute""];
    wet -> cabinet [label=""attribute""];
    bright -> cabinet [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> under_the_bed [label=""from""];
    put -> bin [label=""object""];
    put -> cabinet [label=""on""];
}","Command: Grab the red bin from the empty under the bed and put it on the wet bright cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    red [label=""red"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> bin [label=""attribute""];
    empty -> under_the_bed [label=""attribute""];
    wet -> cabinet [label=""attribute""];
    bright -> cabinet [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> under_the_bed [label=""from""];
    put -> bin [label=""object""];
    put -> cabinet [label=""on""];
}"
"Command: Lift the pen from the warm ottoman and set it on the wooden cold rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    warm -> ottoman [label=""attribute""];
    wooden -> rack [label=""attribute""];
    cold -> rack [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> ottoman [label=""from""];
    set -> pen [label=""object""];
    set -> rack [label=""on""];
}","Command: Lift the pen from the warm ottoman and set it on the wooden cold rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    warm -> ottoman [label=""attribute""];
    wooden -> rack [label=""attribute""];
    cold -> rack [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> ottoman [label=""from""];
    set -> pen [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Grab the document from the bright dark behind the curtain and set it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    bright -> behind_the_curtain [label=""attribute""];
    dark -> behind_the_curtain [label=""attribute""];
    grab -> document [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    set -> document [label=""object""];
    set -> rack [label=""on""];
}","Command: Grab the document from the bright dark behind the curtain and set it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    bright -> behind_the_curtain [label=""attribute""];
    dark -> behind_the_curtain [label=""attribute""];
    grab -> document [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    set -> document [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Lift the cup from the dark sturdy basket and put it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    dark -> basket [label=""attribute""];
    sturdy -> basket [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> basket [label=""from""];
    put -> cup [label=""object""];
    put -> toiletry_shelf [label=""on""];
}","Command: Lift the cup from the dark sturdy basket and put it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dark -> basket [label=""attribute""];
    sturdy -> basket [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> basket [label=""from""];
    put -> cup [label=""object""];
    put -> toiletry_shelf [label=""on""];
}"
"Command: Lift the umbrella from the cupboard and place it on the ceramic rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    ceramic -> rack [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> cupboard [label=""from""];
    place -> umbrella [label=""object""];
    place -> rack [label=""on""];
}","Command: Lift the umbrella from the cupboard and place it on the ceramic rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    ceramic -> rack [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> cupboard [label=""from""];
    place -> umbrella [label=""object""];
    place -> rack [label=""on""];
}"
"Command: Grab the phone from the radiator and place it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    grab -> phone [label=""object""];
    grab -> radiator [label=""from""];
    place -> phone [label=""object""];
    place -> trash_can [label=""on""];
}","Command: Grab the phone from the radiator and place it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    grab -> phone [label=""object""];
    grab -> radiator [label=""from""];
    place -> phone [label=""object""];
    place -> trash_can [label=""on""];
}"
"Command: Take the fuzzy smooth lego from the bright sturdy balcony shelf and place it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> lego [label=""attribute""];
    smooth -> lego [label=""attribute""];
    bright -> balcony_shelf [label=""attribute""];
    sturdy -> balcony_shelf [label=""attribute""];
    take -> lego [label=""object""];
    take -> balcony_shelf [label=""from""];
    place -> lego [label=""object""];
    place -> step_stool [label=""on""];
}","Command: Take the fuzzy smooth lego from the bright sturdy balcony shelf and place it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> lego [label=""attribute""];
    smooth -> lego [label=""attribute""];
    bright -> balcony_shelf [label=""attribute""];
    sturdy -> balcony_shelf [label=""attribute""];
    take -> lego [label=""object""];
    take -> balcony_shelf [label=""from""];
    place -> lego [label=""object""];
    place -> step_stool [label=""on""];
}"
"Command: Grab the drill from the sturdy wet bookshelf top and place it on the dusty open tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    sturdy -> bookshelf_top [label=""attribute""];
    wet -> bookshelf_top [label=""attribute""];
    dusty -> tv_stand [label=""attribute""];
    open -> tv_stand [label=""attribute""];
    grab -> drill [label=""object""];
    grab -> bookshelf_top [label=""from""];
    place -> drill [label=""object""];
    place -> tv_stand [label=""on""];
}","Command: Grab the drill from the sturdy wet bookshelf top and place it on the dusty open tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    sturdy -> bookshelf_top [label=""attribute""];
    wet -> bookshelf_top [label=""attribute""];
    dusty -> tv_stand [label=""attribute""];
    open -> tv_stand [label=""attribute""];
    grab -> drill [label=""object""];
    grab -> bookshelf_top [label=""from""];
    place -> drill [label=""object""];
    place -> tv_stand [label=""on""];
}"
"Command: Grab the doll from the bread box and place it on the cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    grab -> doll [label=""object""];
    grab -> bread_box [label=""from""];
    place -> doll [label=""object""];
    place -> cushion [label=""on""];
}","Command: Grab the doll from the bread box and place it on the cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    grab -> doll [label=""object""];
    grab -> bread_box [label=""from""];
    place -> doll [label=""object""];
    place -> cushion [label=""on""];
}"
"Command: Take the green square envelope from the desk drawer and place it on the kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> envelope [label=""attribute""];
    square -> envelope [label=""attribute""];
    take -> envelope [label=""object""];
    take -> desk_drawer [label=""from""];
    place -> envelope [label=""object""];
    place -> kitchen_island [label=""on""];
}","Command: Take the green square envelope from the desk drawer and place it on the kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> envelope [label=""attribute""];
    square -> envelope [label=""attribute""];
    take -> envelope [label=""object""];
    take -> desk_drawer [label=""from""];
    place -> envelope [label=""object""];
    place -> kitchen_island [label=""on""];
}"
"Command: Take the letter from the wet closed coat shelf and leave it on the tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wet -> coat_shelf [label=""attribute""];
    closed -> coat_shelf [label=""attribute""];
    take -> letter [label=""object""];
    take -> coat_shelf [label=""from""];
    leave -> letter [label=""object""];
    leave -> tv_stand [label=""on""];
}","Command: Take the letter from the wet closed coat shelf and leave it on the tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wet -> coat_shelf [label=""attribute""];
    closed -> coat_shelf [label=""attribute""];
    take -> letter [label=""object""];
    take -> coat_shelf [label=""from""];
    leave -> letter [label=""object""];
    leave -> tv_stand [label=""on""];
}"
"Command: Take the smooth glossy ring from the dusty tidy under the bed and put it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> ring [label=""attribute""];
    glossy -> ring [label=""attribute""];
    dusty -> under_the_bed [label=""attribute""];
    tidy -> under_the_bed [label=""attribute""];
    take -> ring [label=""object""];
    take -> under_the_bed [label=""from""];
    put -> ring [label=""object""];
    put -> garage [label=""on""];
}","Command: Take the smooth glossy ring from the dusty tidy under the bed and put it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> ring [label=""attribute""];
    glossy -> ring [label=""attribute""];
    dusty -> under_the_bed [label=""attribute""];
    tidy -> under_the_bed [label=""attribute""];
    take -> ring [label=""object""];
    take -> under_the_bed [label=""from""];
    put -> ring [label=""object""];
    put -> garage [label=""on""];
}"
"Command: Take the sneaker from the dark warm drawer top and leave it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    warm -> drawer_top [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> drawer_top [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> under_the_table [label=""on""];
}","Command: Take the sneaker from the dark warm drawer top and leave it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> drawer_top [label=""attribute""];
    warm -> drawer_top [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> drawer_top [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> under_the_table [label=""on""];
}"
"Command: Lift the shiny matte toy from the ceramic hanger and place it on the dry narrow sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> toy [label=""attribute""];
    matte -> toy [label=""attribute""];
    ceramic -> hanger [label=""attribute""];
    dry -> sink [label=""attribute""];
    narrow -> sink [label=""attribute""];
    lift -> toy [label=""object""];
    lift -> hanger [label=""from""];
    place -> toy [label=""object""];
    place -> sink [label=""on""];
}","Command: Lift the shiny matte toy from the ceramic hanger and place it on the dry narrow sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    shiny -> toy [label=""attribute""];
    matte -> toy [label=""attribute""];
    ceramic -> hanger [label=""attribute""];
    dry -> sink [label=""attribute""];
    narrow -> sink [label=""attribute""];
    lift -> toy [label=""object""];
    lift -> hanger [label=""from""];
    place -> toy [label=""object""];
    place -> sink [label=""on""];
}"
"Command: Take the red blunt glove from the cold window ledge and leave it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> glove [label=""attribute""];
    blunt -> glove [label=""attribute""];
    cold -> window_ledge [label=""attribute""];
    take -> glove [label=""object""];
    take -> window_ledge [label=""from""];
    leave -> glove [label=""object""];
    leave -> snack_shelf [label=""on""];
}","Command: Take the red blunt glove from the cold window ledge and leave it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> glove [label=""attribute""];
    blunt -> glove [label=""attribute""];
    cold -> window_ledge [label=""attribute""];
    take -> glove [label=""object""];
    take -> window_ledge [label=""from""];
    leave -> glove [label=""object""];
    leave -> snack_shelf [label=""on""];
}"
"Command: Take the doll from the fridge and lay it on the dark balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    dark -> balcony_shelf [label=""attribute""];
    take -> doll [label=""object""];
    take -> fridge [label=""from""];
    lay -> doll [label=""object""];
    lay -> balcony_shelf [label=""on""];
}","Command: Take the doll from the fridge and lay it on the dark balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    dark -> balcony_shelf [label=""attribute""];
    take -> doll [label=""object""];
    take -> fridge [label=""from""];
    lay -> doll [label=""object""];
    lay -> balcony_shelf [label=""on""];
}"
"Command: Pick the shirt from the beside the couch and place it on the sturdy bright closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    sturdy -> closet [label=""attribute""];
    bright -> closet [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> beside_the_couch [label=""from""];
    place -> shirt [label=""object""];
    place -> closet [label=""on""];
}","Command: Pick the shirt from the beside the couch and place it on the sturdy bright closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    sturdy -> closet [label=""attribute""];
    bright -> closet [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> beside_the_couch [label=""from""];
    place -> shirt [label=""object""];
    place -> closet [label=""on""];
}"
"Command: Pick the heavy jar from the narrow laundry machine and set it on the tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    heavy -> jar [label=""attribute""];
    narrow -> laundry_machine [label=""attribute""];
    pick -> jar [label=""object""];
    pick -> laundry_machine [label=""from""];
    set -> jar [label=""object""];
    set -> tool_rack [label=""on""];
}","Command: Pick the heavy jar from the narrow laundry machine and set it on the tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    heavy -> jar [label=""attribute""];
    narrow -> laundry_machine [label=""attribute""];
    pick -> jar [label=""object""];
    pick -> laundry_machine [label=""from""];
    set -> jar [label=""object""];
    set -> tool_rack [label=""on""];
}"
"Command: Grab the white necklace from the fridge and leave it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    white -> necklace [label=""attribute""];
    grab -> necklace [label=""object""];
    grab -> fridge [label=""from""];
    leave -> necklace [label=""object""];
    leave -> window_ledge [label=""on""];
}","Command: Grab the white necklace from the fridge and leave it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    white -> necklace [label=""attribute""];
    grab -> necklace [label=""object""];
    grab -> fridge [label=""from""];
    leave -> necklace [label=""object""];
    leave -> window_ledge [label=""on""];
}"
"Command: Lift the gamepad from the dusty floor and lay it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    dusty -> floor [label=""attribute""];
    lift -> gamepad [label=""object""];
    lift -> floor [label=""from""];
    lay -> gamepad [label=""object""];
    lay -> cabinet [label=""on""];
}","Command: Lift the gamepad from the dusty floor and lay it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    dusty -> floor [label=""attribute""];
    lift -> gamepad [label=""object""];
    lift -> floor [label=""from""];
    lay -> gamepad [label=""object""];
    lay -> cabinet [label=""on""];
}"
"Command: Take the bottle from the first aid box and leave it on the noisy sturdy toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> toiletry_shelf [label=""attribute""];
    sturdy -> toiletry_shelf [label=""attribute""];
    take -> bottle [label=""object""];
    take -> first_aid_box [label=""from""];
    leave -> bottle [label=""object""];
    leave -> toiletry_shelf [label=""on""];
}","Command: Take the bottle from the first aid box and leave it on the noisy sturdy toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> toiletry_shelf [label=""attribute""];
    sturdy -> toiletry_shelf [label=""attribute""];
    take -> bottle [label=""object""];
    take -> first_aid_box [label=""from""];
    leave -> bottle [label=""object""];
    leave -> toiletry_shelf [label=""on""];
}"
"Command: Grab the tablet from the wet noisy fruit bowl and set it on the fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    wet -> fruit_bowl [label=""attribute""];
    noisy -> fruit_bowl [label=""attribute""];
    grab -> tablet [label=""object""];
    grab -> fruit_bowl [label=""from""];
    set -> tablet [label=""object""];
    set -> fridge_door [label=""on""];
}","Command: Grab the tablet from the wet noisy fruit bowl and set it on the fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    wet -> fruit_bowl [label=""attribute""];
    noisy -> fruit_bowl [label=""attribute""];
    grab -> tablet [label=""object""];
    grab -> fruit_bowl [label=""from""];
    set -> tablet [label=""object""];
    set -> fridge_door [label=""on""];
}"
"Command: Grab the lego from the wooden bathtub and set it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> lego [label=""object""];
    grab -> bathtub [label=""from""];
    set -> lego [label=""object""];
    set -> under_the_bed [label=""on""];
}","Command: Grab the lego from the wooden bathtub and set it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    wooden -> bathtub [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> bathtub [label=""from""];
    set -> lego [label=""object""];
    set -> under_the_bed [label=""on""];
}"
"Command: Lift the smooth cracked cap from the messy next to the lamp and leave it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked -> cap [label=""attribute""];
    messy -> next_to_the_lamp [label=""attribute""];
    lift -> cap [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    leave -> cap [label=""object""];
    leave -> under_the_bed [label=""on""];
}","Command: Lift the smooth cracked cap from the messy next to the lamp and leave it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked -> cap [label=""attribute""];
    messy -> next_to_the_lamp [label=""attribute""];
    lift -> cap [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    leave -> cap [label=""object""];
    leave -> under_the_bed [label=""on""];
}"
"Command: Pick the fuzzy sharp glass from the closet and leave it on the bright wet windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    fuzzy -> glass [label=""attribute""];
    sharp -> glass [label=""attribute""];
    bright -> windowsill [label=""attribute""];
    wet -> windowsill [label=""attribute""];
    pick -> glass [label=""object""];
    pick -> closet [label=""from""];
    leave -> glass [label=""object""];
    leave -> windowsill [label=""on""];
}","Command: Pick the fuzzy sharp glass from the closet and leave it on the bright wet windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    fuzzy -> glass [label=""attribute""];
    sharp -> glass [label=""attribute""];
    bright -> windowsill [label=""attribute""];
    wet -> windowsill [label=""attribute""];
    pick -> glass [label=""object""];
    pick -> closet [label=""from""];
    leave -> glass [label=""object""];
    leave -> windowsill [label=""on""];
}"
"Command: Pick the document from the open ottoman and put it on the clean bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    document [label=""document"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    open -> ottoman [label=""attribute""];
    clean -> bread_box [label=""attribute""];
    pick -> document [label=""object""];
    pick -> ottoman [label=""from""];
    put -> document [label=""object""];
    put -> bread_box [label=""on""];
}","Command: Pick the document from the open ottoman and put it on the clean bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    document [label=""document"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    clean -> ottoman [label=""attribute""];
    pick -> document [label=""object""];
    pick -> ottoman [label=""from""];
    put -> document [label=""object""];
    put -> bread_box [label=""on""];
}"
"Command: Lift the doll from the cushion and place it on the bright wooden wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    bright -> wall_shelf [label=""attribute""];
    wooden -> wall_shelf [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> cushion [label=""from""];
    place -> doll [label=""object""];
    place -> wall_shelf [label=""on""];
}","Command: Lift the doll from the cushion and place it on the bright wooden wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    bright -> wall_shelf [label=""attribute""];
    wooden -> wall_shelf [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> cushion [label=""from""];
    place -> doll [label=""object""];
    place -> wall_shelf [label=""on""];
}"
"Command: Grab the knife from the radiator and lay it on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    grab -> knife [label=""object""];
    grab -> radiator [label=""from""];
    lay -> knife [label=""object""];
    lay -> radiator [label=""on""];
}","Command: Grab the knife from the radiator and lay it on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab -> knife [label=""object""];
    grab -> radiator [label=""from""];
    lay -> knife [label=""object""];
    lay -> radiator [label=""on""];
}"
"Command: Lift the fragile green bin from the dry cutlery drawer and set it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    fragile -> bin [label=""attribute""];
    green -> bin [label=""attribute""];
    dry -> cutlery_drawer [label=""attribute""];
    lift -> bin [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    set -> bin [label=""object""];
    set -> makeup_bag [label=""on""];
}","Command: Lift the fragile green bin from the dry cutlery drawer and set it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    fragile -> bin [label=""attribute""];
    green -> bin [label=""attribute""];
    dry -> cutlery_drawer [label=""attribute""];
    lift -> bin [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    set -> bin [label=""object""];
    set -> makeup_bag [label=""on""];
}"
"Command: Lift the sweater from the shaving kit and leave it on the wooden full side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> side_table [label=""attribute""];
    full -> side_table [label=""attribute""];
    lift -> sweater [label=""object""];
    lift -> shaving_kit [label=""from""];
    leave -> sweater [label=""object""];
    leave -> side_table [label=""on""];
}","Command: Lift the sweater from the shaving kit and leave it on the wooden full side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> side_table [label=""attribute""];
    full -> side_table [label=""attribute""];
    lift -> sweater [label=""object""];
    lift -> shaving_kit [label=""from""];
    leave -> sweater [label=""object""];
    leave -> side_table [label=""on""];
}"
"Command: Lift the heavy blunt scissors from the garage and place it on the ceramic cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> scissors [label=""attribute""];
    blunt -> scissors [label=""attribute""];
    ceramic -> cabinet [label=""attribute""];
    lift -> scissors [label=""object""];
    lift -> garage [label=""from""];
    place -> scissors [label=""object""];
    place -> cabinet [label=""on""];
}","Command: Lift the heavy blunt scissors from the garage and place it on the ceramic cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> scissors [label=""attribute""];
    blunt -> scissors [label=""attribute""];
    ceramic -> cabinet [label=""attribute""];
    lift -> scissors [label=""object""];
    lift -> garage [label=""from""];
    place -> scissors [label=""object""];
    place -> cabinet [label=""on""];
}"
"Command: Pick the fragile soft jacket from the under the table and set it on the dry messy cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    fragile -> jacket [label=""attribute""];
    soft -> jacket [label=""attribute""];
    dry -> cutlery_drawer [label=""attribute""];
    messy -> cutlery_drawer [label=""attribute""];
    pick -> jacket [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> jacket [label=""object""];
    set -> cutlery_drawer [label=""on""];
}","Command: Pick the fragile soft jacket from the under the table and set it on the dry messy cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    fragile -> jacket [label=""attribute""];
    soft -> jacket [label=""attribute""];
    dry -> cutlery_drawer [label=""attribute""];
    messy -> cutlery_drawer [label=""attribute""];
    pick -> jacket [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> jacket [label=""object""];
    set -> cutlery_drawer [label=""on""];
}"
"Command: Grab the bag from the open narrow snack shelf and leave it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    open -> snack_shelf [label=""attribute""];
    narrow -> snack_shelf [label=""attribute""];
    grab -> bag [label=""object""];
    grab -> snack_shelf [label=""from""];
    leave -> bag [label=""object""];
    leave -> shaving_kit [label=""on""];
}","Command: Grab the bag from the open narrow snack shelf and leave it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    open -> snack_shelf [label=""attribute""];
    narrow -> snack_shelf [label=""attribute""];
    grab -> bag [label=""object""];
    grab -> snack_shelf [label=""from""];
    leave -> bag [label=""object""];
    leave -> shaving_kit [label=""on""];
}"
"Command: Lift the soft heavy container from the full empty cupboard and set it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    soft -> container [label=""attribute""];
    heavy -> container [label=""attribute""];
    full -> cupboard [label=""attribute""];
    empty -> cupboard [label=""attribute""];
    lift -> container [label=""object""];
    lift -> cupboard [label=""from""];
    set -> container [label=""object""];
    set -> wine_rack [label=""on""];
}","Command: Lift the soft heavy container from the full empty cupboard and set it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    soft -> container [label=""attribute""];
    heavy -> container [label=""attribute""];
    full -> cupboard [label=""attribute""];
    empty -> cupboard [label=""attribute""];
    lift -> container [label=""object""];
    lift -> cupboard [label=""from""];
    set -> container [label=""object""];
    set -> wine_rack [label=""on""];
}"
"Command: Pick the glossy eraser from the kitchen island and set it on the noisy coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    glossy -> eraser [label=""attribute""];
    noisy -> coffee_table [label=""attribute""];
    pick -> eraser [label=""object""];
    pick -> kitchen_island [label=""from""];
    set -> eraser [label=""object""];
    set -> coffee_table [label=""on""];
}","Command: Pick the glossy eraser from the kitchen island and set it on the noisy coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    glossy -> eraser [label=""attribute""];
    noisy -> coffee_table [label=""attribute""];
    pick -> eraser [label=""object""];
    pick -> kitchen_island [label=""from""];
    set -> eraser [label=""object""];
    set -> coffee_table [label=""on""];
}"
"Command: Lift the plate from the garage and set it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> garage [label=""from""];
    set -> plate [label=""object""];
    set -> behind_the_curtain [label=""on""];
}","Command: Lift the plate from the garage and set it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> garage [label=""from""];
    set -> plate [label=""object""];
    set -> behind_the_curtain [label=""on""];
}"
"Command: Take the sock from the open shaving kit and leave it on the kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> shaving_kit [label=""attribute""];
    take -> sock [label=""object""];
    take -> shaving_kit [label=""from""];
    leave -> sock [label=""object""];
    leave -> kitchen_drawer [label=""on""];
}","Command: Take the sock from the open shaving kit and leave it on the kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> shaving_kit [label=""attribute""];
    take -> sock [label=""object""];
    take -> shaving_kit [label=""from""];
    leave -> sock [label=""object""];
    leave -> kitchen_drawer [label=""on""];
}"
"Command: Lift the box from the side table and place it on the full first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    full -> first_aid_box [label=""attribute""];
    lift -> box [label=""object""];
    lift -> side_table [label=""from""];
    place -> box [label=""object""];
    place -> first_aid_box [label=""on""];
}","Command: Lift the box from the side table and place it on the full first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    full -> first_aid_box [label=""attribute""];
    lift -> box [label=""object""];
    lift -> side_table [label=""from""];
    place -> box [label=""object""];
    place -> first_aid_box [label=""on""];
}"
"Command: Lift the blue black belt from the dark dusty terrace table and place it on the noisy basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    blue -> belt [label=""attribute""];
    black -> belt [label=""attribute""];
    dark -> terrace_table [label=""attribute""];
    dusty -> terrace_table [label=""attribute""];
    noisy -> basket [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> terrace_table [label=""from""];
    place -> belt [label=""object""];
    place -> basket [label=""on""];
}","Command: Lift the blue black belt from the dark dusty terrace table and place it on the noisy basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    blue -> belt [label=""attribute""];
    black -> belt [label=""attribute""];
    dark -> terrace_table [label=""attribute""];
    dusty -> terrace_table [label=""attribute""];
    noisy -> basket [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> terrace_table [label=""from""];
    place -> belt [label=""object""];
    place -> basket [label=""on""];
}"
"Command: Grab the bat from the corner and lay it on the spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    grab -> bat [label=""object""];
    grab -> corner [label=""from""];
    lay -> bat [label=""object""];
    lay -> spice_rack [label=""on""];
}","Command: Grab the bat from the corner and lay it on the spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    grab -> bat [label=""object""];
    grab -> corner [label=""from""];
    lay -> bat [label=""object""];
    lay -> spice_rack [label=""on""];
}"
"Command: Take the hard white shirt from the dark narrow tool rack and set it on the garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    hard -> shirt [label=""attribute""];
    white -> shirt [label=""attribute""];
    dark -> tool_rack [label=""attribute""];
    narrow -> tool_rack [label=""attribute""];
    take -> shirt [label=""object""];
    take -> tool_rack [label=""from""];
    set -> shirt [label=""object""];
    set -> garden_box [label=""on""];
}","Command: Take the hard white shirt from the dark narrow tool rack and set it on the garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    hard -> shirt [label=""attribute""];
    white -> shirt [label=""attribute""];
    dark -> tool_rack [label=""attribute""];
    narrow -> tool_rack [label=""attribute""];
    take -> shirt [label=""object""];
    take -> tool_rack [label=""from""];
    set -> shirt [label=""object""];
    set -> garden_box [label=""on""];
}"
"Command: Pick the mouse from the bright snack shelf and leave it on the plant pot.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    bright -> snack_shelf [label=""attribute""];
    pick -> mouse [label=""object""];
    pick -> snack_shelf [label=""from""];
    leave -> mouse [label=""object""];
    leave -> plant_pot [label=""on""];
}","Command: Pick the mouse from the bright snack shelf and leave it on the plant pot.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    bright -> snack_shelf [label=""attribute""];
    pick -> mouse [label=""object""];
    pick -> snack_shelf [label=""from""];
    leave -> mouse [label=""object""];
    leave -> plant_pot [label=""on""];
}"
"Command: Grab the round blanket from the spice rack and leave it on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    round -> blanket [label=""attribute""];
    grab -> blanket [label=""object""];
    grab -> spice_rack [label=""from""];
    leave -> blanket [label=""object""];
    leave -> radiator [label=""on""];
}","Command: Grab the round blanket from the spice rack and leave it on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    round -> blanket [label=""attribute""];
    grab -> blanket [label=""object""];
    grab -> spice_rack [label=""from""];
    leave -> blanket [label=""object""];
    leave -> radiator [label=""on""];
}"
"Command: Lift the shiny blunt shoe from the open dry terrace table and put it on the narrow laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> shoe [label=""attribute""];
    blunt -> shoe [label=""attribute""];
    open -> terrace_table [label=""attribute""];
    dry -> terrace_table [label=""attribute""];
    narrow -> laundry_basket [label=""attribute""];
    lift -> shoe [label=""object""];
    lift -> terrace_table [label=""from""];
    put -> shoe [label=""object""];
    put -> laundry_basket [label=""on""];
}","Command: Lift the shiny blunt shoe from the open dry terrace table and put it on the narrow laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    shiny -> shoe [label=""attribute""];
    blunt -> shoe [label=""attribute""];
    open -> terrace_table [label=""attribute""];
    dry -> terrace_table [label=""attribute""];
    narrow -> laundry_basket [label=""attribute""];
    lift -> shoe [label=""object""];
    lift -> terrace_table [label=""from""];
    put -> shoe [label=""object""];
    put -> laundry_basket [label=""on""];
}"
"Command: Grab the hard document from the coat shelf and leave it on the plastic tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    hard -> document [label=""attribute""];
    plastic -> tool_rack [label=""attribute""];
    grab -> document [label=""object""];
    grab -> coat_shelf [label=""from""];
    leave -> document [label=""object""];
    leave -> tool_rack [label=""on""];
}","Command: Grab the hard document from the coat shelf and leave it on the plastic tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    hard -> document [label=""attribute""];
    plastic -> tool_rack [label=""attribute""];
    grab -> document [label=""object""];
    grab -> coat_shelf [label=""from""];
    leave -> document [label=""object""];
    leave -> tool_rack [label=""on""];
}"
"Command: Lift the fragile belt from the cabinet and lay it on the closed wet magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    fragile -> belt [label=""attribute""];
    closed -> magazine_rack [label=""attribute""];
    wet -> magazine_rack [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> cabinet [label=""from""];
    lay -> belt [label=""object""];
    lay -> magazine_rack [label=""on""];
}","Command: Lift the fragile belt from the cabinet and lay it on the closed wet magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    fragile -> belt [label=""attribute""];
    closed -> magazine_rack [label=""attribute""];
    wet -> magazine_rack [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> cabinet [label=""from""];
    lay -> belt [label=""object""];
    lay -> magazine_rack [label=""on""];
}"
"Command: Pick the hammer from the table and lay it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    pick -> hammer [label=""object""];
    pick -> table [label=""from""];
    lay -> hammer [label=""object""];
    lay -> fish_tank [label=""on""];
}","Command: Pick the hammer from the table and lay it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    pick -> hammer [label=""object""];
    pick -> table [label=""from""];
    lay -> hammer [label=""object""];
    lay -> fish_tank [label=""on""];
}"
"Command: Take the bag from the noisy sink and place it on the bright wet pet bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    noisy -> sink [label=""attribute""];
    bright -> pet_bed [label=""attribute""];
    wet -> pet_bed [label=""attribute""];
    take -> bag [label=""object""];
    take -> sink [label=""from""];
    place -> bag [label=""object""];
    place -> pet_bed [label=""on""];
}","Command: Take the bag from the noisy sink and place it on the bright wet pet bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> sink [label=""attribute""];
    bright -> pet_bed [label=""attribute""];
    wet -> pet_bed [label=""attribute""];
    take -> bag [label=""object""];
    take -> sink [label=""from""];
    place -> bag [label=""object""];
    place -> pet_bed [label=""on""];
}"
"Command: Pick the belt from the empty plastic wine rack and place it on the recycling bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> wine_rack [label=""attribute""];
    plastic -> wine_rack [label=""attribute""];
    pick -> belt [label=""object""];
    pick -> wine_rack [label=""from""];
    place -> belt [label=""object""];
    place -> recycling_bin [label=""on""];
}","Command: Pick the belt from the empty plastic wine rack and place it on the recycling bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> wine_rack [label=""attribute""];
    plastic -> wine_rack [label=""attribute""];
    pick -> belt [label=""object""];
    pick -> wine_rack [label=""from""];
    place -> belt [label=""object""];
    place -> recycling_bin [label=""on""];
}"
"Command: Pick the gamepad from the dusty wet entrance and lay it on the bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    dusty -> entrance [label=""attribute""];
    wet -> entrance [label=""attribute""];
    pick -> gamepad [label=""object""];
    pick -> entrance [label=""from""];
    lay -> gamepad [label=""object""];
    lay -> bench [label=""on""];
}","Command: Pick the gamepad from the dusty wet entrance and lay it on the bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    dusty -> entrance [label=""attribute""];
    wet -> entrance [label=""attribute""];
    pick -> gamepad [label=""object""];
    pick -> entrance [label=""from""];
    lay -> gamepad [label=""object""];
    lay -> bench [label=""on""];
}"
"Command: Take the mirror from the armrest and leave it on the plant pot.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    take -> mirror [label=""object""];
    take -> armrest [label=""from""];
    leave -> mirror [label=""object""];
    leave -> plant_pot [label=""on""];
}","Command: Take the mirror from the armrest and leave it on the plant pot.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    take -> mirror [label=""object""];
    take -> armrest [label=""from""];
    leave -> mirror [label=""object""];
    leave -> plant_pot [label=""on""];
}"
"Command: Take the matte green toothbrush from the cold clean bread box and lay it on the dusty basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    matte -> toothbrush [label=""attribute""];
    green -> toothbrush [label=""attribute""];
    cold -> bread_box [label=""attribute""];
    clean -> bread_box [label=""attribute""];
    dusty -> basket [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> bread_box [label=""from""];
    lay -> toothbrush [label=""object""];
    lay -> basket [label=""on""];
}","Command: Take the matte green toothbrush from the cold clean bread box and lay it on the dusty basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    matte -> toothbrush [label=""attribute""];
    green -> toothbrush [label=""attribute""];
    cold -> bread_box [label=""attribute""];
    clean -> bread_box [label=""attribute""];
    dusty -> basket [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> bread_box [label=""from""];
    lay -> toothbrush [label=""object""];
    lay -> basket [label=""on""];
}"
"Command: Grab the pen from the mirror shelf and put it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> pen [label=""object""];
    grab -> mirror_shelf [label=""from""];
    put -> pen [label=""object""];
    put -> drawer [label=""on""];
}","Command: Grab the pen from the mirror shelf and put it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> pen [label=""object""];
    grab -> mirror_shelf [label=""from""];
    put -> pen [label=""object""];
    put -> drawer [label=""on""];
}"
"Command: Grab the letter from the kitchen drawer and leave it on the messy warm cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    messy -> cabinet [label=""attribute""];
    warm -> cabinet [label=""attribute""];
    grab -> letter [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    leave -> letter [label=""object""];
    leave -> cabinet [label=""on""];
}","Command: Grab the letter from the kitchen drawer and leave it on the messy warm cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    messy -> cabinet [label=""attribute""];
    warm -> cabinet [label=""attribute""];
    grab -> letter [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    leave -> letter [label=""object""];
    leave -> cabinet [label=""on""];
}"
"Command: Pick the broom from the cold wall shelf and place it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    cold -> wall_shelf [label=""attribute""];
    pick -> broom [label=""object""];
    pick -> wall_shelf [label=""from""];
    place -> broom [label=""object""];
    place -> bathtub [label=""on""];
}","Command: Pick the broom from the cold wall shelf and place it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    cold -> wall_shelf [label=""attribute""];
    pick -> broom [label=""object""];
    pick -> wall_shelf [label=""from""];
    place -> broom [label=""object""];
    place -> bathtub [label=""on""];
}"
"Command: Pick the hard sneaker from the snack shelf and put it on the wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    hard -> sneaker [label=""attribute""];
    pick -> sneaker [label=""object""];
    pick -> snack_shelf [label=""from""];
    put -> sneaker [label=""object""];
    put -> wall_hook [label=""on""];
}","Command: Pick the hard sneaker from the snack shelf and put it on the wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    hard -> sneaker [label=""attribute""];
    pick -> sneaker [label=""object""];
    pick -> snack_shelf [label=""from""];
    put -> sneaker [label=""object""];
    put -> wall_hook [label=""on""];
}"
"Command: Pick the smooth hard letter from the dark narrow vacuum base and set it on the open safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    smooth -> letter [label=""attribute""];
    hard -> letter [label=""attribute""];
    dark -> vacuum_base [label=""attribute""];
    narrow -> vacuum_base [label=""attribute""];
    open -> safe [label=""attribute""];
    pick -> letter [label=""object""];
    pick -> vacuum_base [label=""from""];
    set -> letter [label=""object""];
    set -> safe [label=""on""];
}","Command: Pick the smooth hard letter from the dark narrow vacuum base and set it on the open safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    smooth -> letter [label=""attribute""];
    hard -> letter [label=""attribute""];
    dark -> vacuum_base [label=""attribute""];
    narrow -> vacuum_base [label=""attribute""];
    open -> safe [label=""attribute""];
    pick -> letter [label=""object""];
    pick -> vacuum_base [label=""from""];
    set -> letter [label=""object""];
    set -> safe [label=""on""];
}"
"Command: Take the heavy round coaster from the pantry and place it on the hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> coaster [label=""attribute""];
    round -> coaster [label=""attribute""];
    take -> coaster [label=""object""];
    take -> pantry [label=""from""];
    place -> coaster [label=""object""];
    place -> hanger [label=""on""];
}","Command: Take the heavy round coaster from the pantry and place it on the hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> coaster [label=""attribute""];
    round -> coaster [label=""attribute""];
    take -> coaster [label=""object""];
    take -> pantry [label=""from""];
    place -> coaster [label=""object""];
    place -> hanger [label=""on""];
}"
"Command: Take the puzzle from the closed cold safe and put it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    closed -> safe [label=""attribute""];
    cold -> safe [label=""attribute""];
    take -> puzzle [label=""object""];
    take -> safe [label=""from""];
    put -> puzzle [label=""object""];
    put -> toiletry_shelf [label=""on""];
}","Command: Take the puzzle from the closed cold safe and put it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    closed -> safe [label=""attribute""];
    cold -> safe [label=""attribute""];
    take -> puzzle [label=""object""];
    take -> safe [label=""from""];
    put -> puzzle [label=""object""];
    put -> toiletry_shelf [label=""on""];
}"
"Command: Pick the square black coin from the open dark bookshelf and place it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    square -> coin [label=""attribute""];
    black -> coin [label=""attribute""];
    open -> bookshelf [label=""attribute""];
    dark -> bookshelf [label=""attribute""];
    pick -> coin [label=""object""];
    pick -> bookshelf [label=""from""];
    place -> coin [label=""object""];
    place -> garage [label=""on""];
}","Command: Pick the square black coin from the open dark bookshelf and place it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    square -> coin [label=""attribute""];
    black -> coin [label=""attribute""];
    open -> bookshelf [label=""attribute""];
    dark -> bookshelf [label=""attribute""];
    pick -> coin [label=""object""];
    pick -> bookshelf [label=""from""];
    place -> coin [label=""object""];
    place -> garage [label=""on""];
}"
"Command: Lift the keyboard from the dusty coffee table and leave it on the mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    dusty -> coffee_table [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> keyboard [label=""object""];
    leave -> mirror_shelf [label=""on""];
}","Command: Lift the keyboard from the dusty coffee table and leave it on the mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    dusty -> coffee_table [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> keyboard [label=""object""];
    leave -> mirror_shelf [label=""on""];
}"
"Command: Lift the blue green marker from the noisy clean vacuum base and lay it on the cold bright heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    blue -> marker [label=""attribute""];
    green -> marker [label=""attribute""];
    noisy -> vacuum_base [label=""attribute""];
    clean -> vacuum_base [label=""attribute""];
    cold -> heater [label=""attribute""];
    bright -> heater [label=""attribute""];
    lift -> marker [label=""object""];
    lift -> vacuum_base [label=""from""];
    lay -> marker [label=""object""];
    lay -> heater [label=""on""];
}","Command: Lift the blue green marker from the noisy clean vacuum base and lay it on the cold bright heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    blue -> marker [label=""attribute""];
    green -> marker [label=""attribute""];
    noisy -> vacuum_base [label=""attribute""];
    clean -> vacuum_base [label=""attribute""];
    cold -> heater [label=""attribute""];
    bright [label=""attribute""];
    lift -> marker [label=""object""];
    lift -> vacuum_base [label=""from""];
    lay -> marker [label=""object""];
    lay -> heater [label=""on""];
}"
"Command: Take the jacket from the next to the lamp and lay it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> jacket [label=""object""];
    take -> next_to_the_lamp [label=""from""];
    lay -> jacket [label=""object""];
    lay -> ottoman [label=""on""];
}","Command: Take the jacket from the next to the lamp and lay it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> jacket [label=""object""];
    take -> next_to_the_lamp [label=""from""];
    lay -> jacket [label=""object""];
    lay -> ottoman [label=""on""];
}"
"Command: Lift the pillow from the first aid box and lay it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> first_aid_box [label=""from""];
    lay -> pillow [label=""object""];
    lay -> under_the_bed [label=""on""];
}","Command: Lift the pillow from the first aid box and lay it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> first_aid_box [label=""from""];
    lay -> pillow [label=""object""];
    lay -> under_the_bed [label=""on""];
}"
"Command: Pick the knife from the garage and place it on the plastic laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    plastic -> laundry_basket [label=""attribute""];
    pick -> knife [label=""object""];
    pick -> garage [label=""from""];
    place -> knife [label=""object""];
    place -> laundry_basket [label=""on""];
}","Command: Pick the knife from the garage and place it on the plastic laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    plastic -> laundry_basket [label=""attribute""];
    pick -> knife [label=""object""];
    pick -> garage [label=""from""];
    place -> knife [label=""object""];
    place -> laundry_basket [label=""on""];
}"
"Command: Pick the key from the full nightstand and place it on the dusty oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    full -> nightstand [label=""attribute""];
    dusty -> oven [label=""attribute""];
    pick -> key [label=""object""];
    pick -> nightstand [label=""from""];
    place -> key [label=""object""];
    place -> oven [label=""on""];
}","Command: Pick the key from the full nightstand and place it on the dusty oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    full -> nightstand [label=""attribute""];
    dusty -> oven [label=""attribute""];
    pick -> key [label=""object""];
    pick -> nightstand [label=""from""];
    place -> key [label=""object""];
    place -> oven [label=""on""];
}"
"Command: Grab the glossy shoe from the rack and leave it on the empty wooden basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    glossy -> shoe [label=""attribute""];
    empty -> basket [label=""attribute""];
    wooden -> basket [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> rack [label=""from""];
    leave -> shoe [label=""object""];
    leave -> basket [label=""on""];
}","Command: Grab the glossy shoe from the rack and leave it on the empty wooden basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    glossy -> shoe [label=""attribute""];
    empty -> basket [label=""attribute""];
    wooden -> basket [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> rack [label=""from""];
    leave -> shoe [label=""object""];
    leave -> basket [label=""on""];
}"
"Command: Lift the blunt smooth charger from the empty snack shelf and lay it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth -> charger [label=""attribute""];
    empty -> snack_shelf [label=""attribute""];
    lift -> charger [label=""object""];
    lift -> snack_shelf [label=""from""];
    lay -> charger [label=""object""];
    lay -> next_to_the_lamp [label=""on""];
}","Command: Lift the blunt smooth charger from the empty snack shelf and lay it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth -> charger [label=""attribute""];
    lift -> charger [label=""object""];
    lift -> snack_shelf [label=""from""];
    lay -> charger [label=""object""];
    lay -> next_to_the_lamp [label=""on""];
}"
"Command: Grab the heavy hammer from the pantry and set it on the entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> hammer [label=""attribute""];
    grab -> hammer [label=""object""];
    grab -> pantry [label=""from""];
    set -> hammer [label=""object""];
    set -> entrance [label=""on""];
}","Command: Grab the heavy hammer from the pantry and set it on the entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> hammer [label=""attribute""];
    grab -> hammer [label=""object""];
    grab -> pantry [label=""from""];
    set -> hammer [label=""object""];
    set -> entrance [label=""on""];
}"
"Command: Pick the pillow from the corner and place it on the shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    pick -> pillow [label=""object""];
    pick -> corner [label=""from""];
    place -> pillow [label=""object""];
    place -> shoe_rack [label=""on""];
}","Command: Pick the pillow from the corner and place it on the shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    pick -> pillow [label=""object""];
    pick -> corner [label=""from""];
    place -> pillow [label=""object""];
    place -> shoe_rack [label=""on""];
}"
"Command: Pick the hard headphones from the oven and leave it on the wet sturdy wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    hard -> headphones [label=""attribute""];
    wet -> wall_hook [label=""attribute""];
    sturdy -> wall_hook [label=""attribute""];
    pick -> headphones [label=""object""];
    pick -> oven [label=""from""];
    leave -> headphones [label=""object""];
    leave -> wall_hook [label=""on""];
}","Command: Pick the hard headphones from the oven and leave it on the wet sturdy wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    hard -> headphones [label=""attribute""];
    wet -> wall_hook [label=""attribute""];
    sturdy -> wall_hook [label=""attribute""];
    pick -> headphones [label=""object""];
    pick -> oven [label=""from""];
    leave -> headphones [label=""object""];
    leave -> wall_hook [label=""on""];
}"
"Command: Take the red envelope from the open locker and leave it on the ceramic narrow hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    red -> envelope [label=""attribute""];
    open -> locker [label=""attribute""];
    ceramic -> hanger [label=""attribute""];
    narrow -> hanger [label=""attribute""];
    take -> envelope [label=""object""];
    take -> locker [label=""from""];
    leave -> envelope [label=""object""];
    leave -> hanger [label=""on""];
}","Command: Take the red envelope from the open locker and leave it on the ceramic narrow hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    red -> envelope [label=""attribute""];
    open -> locker [label=""attribute""];
    ceramic -> hanger [label=""attribute""];
    narrow -> hanger [label=""attribute""];
    take -> envelope [label=""object""];
    take -> locker [label=""from""];
    leave -> envelope [label=""object""];
    leave -> hanger [label=""on""];
}"
"Command: Lift the plant from the dusty empty recycling bin and put it on the dark tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dusty -> recycling_bin [label=""attribute""];
    empty -> recycling_bin [label=""attribute""];
    dark -> tv_stand [label=""attribute""];
    lift -> plant [label=""object""];
    lift -> recycling_bin [label=""from""];
    put -> plant [label=""object""];
    put -> tv_stand [label=""on""];
}","Command: Lift the plant from the dusty empty recycling bin and put it on the dark tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    recycling_stand [label=""recycling stand"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dusty -> recycling_bin [label=""attribute""];
    empty -> recycling_bin [label=""attribute""];
    dark -> tv_stand [label=""attribute""];
    lift -> plant [label=""object""];
    lift -> recycling_bin [label=""from""];
    put -> plant [label=""object""];
    put -> tv_stand [label=""on""];
}"
"Command: Take the bag from the step stool and leave it on the closed full toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    closed -> toolbox [label=""attribute""];
    full -> toolbox [label=""attribute""];
    take -> bag [label=""object""];
    take -> step_stool [label=""from""];
    leave -> bag [label=""object""];
    leave -> toolbox [label=""on""];
}","Command: Take the bag from the step stool and leave it on the closed full toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    closed -> toolbox [label=""attribute""];
    full -> toolbox [label=""attribute""];
    take -> bag [label=""object""];
    take -> step_stool [label=""from""];
    leave -> bag [label=""object""];
    leave -> toolbox [label=""on""];
}"
"Command: Grab the round tissue from the corner and leave it on the dry spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> tissue [label=""attribute""];
    dry -> spice_rack [label=""attribute""];
    grab -> tissue [label=""object""];
    grab -> corner [label=""from""];
    leave -> tissue [label=""object""];
    leave -> spice_rack [label=""on""];
}","Command: Grab the round tissue from the corner and leave it on the dry spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> tissue [label=""attribute""];
    dry -> spice_rack [label=""attribute""];
    grab -> tissue [label=""object""];
    grab -> corner [label=""from""];
    leave -> tissue [label=""object""];
    leave -> spice_rack [label=""on""];
}"
"Command: Take the ball from the warm mini fridge and leave it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    warm -> mini_fridge [label=""attribute""];
    take -> ball [label=""object""];
    take -> mini_fridge [label=""from""];
    leave -> ball [label=""object""];
    leave -> shelf [label=""on""];
}","Command: Take the ball from the warm mini fridge and leave it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    warm -> mini_fridge [label=""attribute""];
    take -> ball [label=""object""];
    take -> mini_fridge [label=""from""];
    leave -> ball [label=""object""];
    leave -> shelf [label=""on""];
}"
"Command: Take the belt from the cold narrow toiletry shelf and place it on the storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    cold -> toiletry_shelf [label=""attribute""];
    narrow -> toiletry_shelf [label=""attribute""];
    take -> belt [label=""object""];
    take -> toiletry_shelf [label=""from""];
    place -> belt [label=""object""];
    place -> storage_box [label=""on""];
}","Command: Take the belt from the cold narrow toiletry shelf and place it on the storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    cold -> toiletry_shelf [label=""attribute""];
    narrow -> toiletry_shelf [label=""attribute""];
    take -> belt [label=""object""];
    take -> toiletry_shelf [label=""from""];
    place -> belt [label=""object""];
    place -> storage_box [label=""on""];
}"
"Command: Lift the blue coin from the vacuum base and lay it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    blue -> coin [label=""attribute""];
    lift -> coin [label=""object""];
    lift -> vacuum_base [label=""from""];
    lay -> coin [label=""object""];
    lay -> shelf [label=""on""];
}","Command: Lift the blue coin from the vacuum base and lay it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    blue -> coin [label=""attribute""];
    lift -> coin [label=""object""];
    lift -> vacuum_base [label=""from""];
    lay -> coin [label=""object""];
    lay -> shelf [label=""on""];
}"
"Command: Lift the blue pencil from the dark window ledge and leave it on the clean tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    blue -> pencil [label=""attribute""];
    dark -> window_ledge [label=""attribute""];
    clean -> tv_stand [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> window_ledge [label=""from""];
    leave -> pencil [label=""object""];
    leave -> tv_stand [label=""on""];
}","Command: Lift the blue pencil from the dark window ledge and leave it on the clean tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    blue -> pencil [label=""attribute""];
    dark -> window_ledge [label=""attribute""];
    clean -> tv_stand [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> window_ledge [label=""from""];
    leave -> pencil [label=""object""];
    leave -> tv_stand [label=""on""];
}"
"Command: Take the fuzzy book from the tidy dusty file cabinet and set it on the closed drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> book [label=""attribute""];
    tidy -> file_cabinet [label=""attribute""];
    dusty -> file_cabinet [label=""attribute""];
    closed -> drawer [label=""attribute""];
    take -> book [label=""object""];
    take -> file_cabinet [label=""from""];
    set -> book [label=""object""];
    set -> drawer [label=""on""];
}","Command: Take the fuzzy book from the tidy dusty file cabinet and set it on the closed drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> book [label=""attribute""];
    tidy -> file_cabinet [label=""attribute""];
    dusty -> file_cabinet [label=""attribute""];
    closed -> drawer [label=""attribute""];
    take -> book [label=""object""];
    take -> file_cabinet [label=""from""];
    set -> book [label=""object""];
    set -> drawer [label=""on""];
}"
"Command: Pick the fragile smooth charger from the dark closed wall shelf and leave it on the clean wet bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    fragile -> charger [label=""attribute""];
    smooth -> charger [label=""attribute""];
    dark -> wall_shelf [label=""attribute""];
    closed -> wall_shelf [label=""attribute""];
    clean -> bookshelf_top [label=""attribute""];
    wet -> bookshelf_top [label=""attribute""];
    pick -> charger [label=""object""];
    pick -> wall_shelf [label=""from""];
    leave -> charger [label=""object""];
    leave -> bookshelf_top [label=""on""];
}","Command: Pick the fragile smooth charger from the dark closed wall shelf and leave it on the clean wet bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    fragile -> charger [label=""attribute""];
    smooth -> charger [label=""attribute""];
    dark -> wall_shelf [label=""attribute""];
    clean -> bookshelf_top [label=""attribute""];
    wet -> bookshelf_top [label=""attribute""];
    pick -> charger [label=""object""];
    pick -> wall_shelf [label=""from""];
    leave -> charger [label=""object""];
    leave -> bookshelf_top [label=""on""];
}"
"Command: Lift the soft red hammer from the tool rack and lay it on the dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    soft -> hammer [label=""attribute""];
    red -> hammer [label=""attribute""];
    lift -> hammer [label=""object""];
    lift -> tool_rack [label=""from""];
    lay -> hammer [label=""object""];
    lay -> dryer [label=""on""];
}","Command: Lift the soft red hammer from the tool rack and lay it on the dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    soft -> hammer [label=""attribute""];
    red -> hammer [label=""attribute""];
    lift -> hammer [label=""object""];
    lift -> tool_rack [label=""from""];
    lay -> hammer [label=""object""];
    lay -> dryer [label=""on""];
}"
"Command: Take the square cracked bill from the balcony shelf and place it on the bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> bill [label=""attribute""];
    cracked -> bill [label=""attribute""];
    take -> bill [label=""object""];
    take -> balcony_shelf [label=""from""];
    place -> bill [label=""object""];
    place -> bench [label=""on""];
}","Command: Take the square cracked bill from the balcony shelf and place it on the bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    square -> bill [label=""attribute""];
    cracked -> bill [label=""attribute""];
    take -> bill [label=""object""];
    take -> balcony_shelf [label=""from""];
    place -> bill [label=""object""];
    place -> bench [label=""on""];
}"
"Command: Grab the round light pen from the sink and lay it on the tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    round -> pen [label=""attribute""];
    light -> pen [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> sink [label=""from""];
    lay -> pen [label=""object""];
    lay -> tool_rack [label=""on""];
}","Command: Grab the round light pen from the sink and lay it on the tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    round -> pen [label=""attribute""];
    light -> pen [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> sink [label=""from""];
    lay -> pen [label=""object""];
    lay -> tool_rack [label=""on""];
}"
"Command: Take the fuzzy black container from the cushion and set it on the pet bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    container [label=""container"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> container [label=""attribute""];
    black -> container [label=""attribute""];
    take -> container [label=""object""];
    take -> cushion [label=""from""];
    set -> container [label=""object""];
    set -> pet_bed [label=""on""];
}","Command: Take the fuzzy black container from the cushion and set it on the pet bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    container [label=""container"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> container [label=""attribute""];
    black -> container [label=""attribute""];
    take -> container [label=""object""];
    take -> cushion [label=""from""];
    set -> container [label=""object""];
    set -> pet_bed [label=""on""];
}"
"Command: Take the soft vase from the wet noisy entrance and leave it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> vase [label=""attribute""];
    wet -> entrance [label=""attribute""];
    noisy -> entrance [label=""attribute""];
    take -> vase [label=""object""];
    take -> entrance [label=""from""];
    leave -> vase [label=""object""];
    leave -> drawer [label=""on""];
}","Command: Take the soft vase from the wet noisy entrance and leave it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> vase [label=""attribute""];
    wet -> entrance [label=""attribute""];
    noisy -> entrance [label=""attribute""];
    take -> vase [label=""object""];
    take -> entrance [label=""from""];
    leave -> vase [label=""object""];
    leave -> drawer [label=""on""];
}"
"Command: Take the letter from the cold coffee table and put it on the plastic dry fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> coffee_table [label=""attribute""];
    plastic -> fruit_bowl [label=""attribute""];
    dry -> fruit_bowl [label=""attribute""];
    take -> letter [label=""object""];
    take -> coffee_table [label=""from""];
    put -> letter [label=""object""];
    put -> fruit_bowl [label=""on""];
}","Command: Take the letter from the cold coffee table and put it on the plastic dry fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> coffee_table [label=""attribute""];
    plastic -> fruit_bowl [label=""attribute""];
    dry -> fruit_bowl [label=""attribute""];
    take -> letter [label=""object""];
    take -> coffee_table [label=""from""];
    put -> letter [label=""object""];
    put -> fruit_bowl [label=""on""];
}"
"Command: Lift the blunt fragile wallet from the wet bright garden box and lay it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    blunt -> wallet [label=""attribute""];
    fragile -> wallet [label=""attribute""];
    wet -> garden_box [label=""attribute""];
    bright -> garden_box [label=""attribute""];
    lift -> wallet [label=""object""];
    lift -> garden_box [label=""from""];
    lay -> wallet [label=""object""];
    lay -> bookshelf_top [label=""on""];
}","Command: Lift the blunt fragile wallet from the wet bright garden box and lay it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> wallet [label=""attribute""];
    fragile -> wallet [label=""attribute""];
    wet -> garden_box [label=""attribute""];
    bright -> garden_box [label=""attribute""];
    lift -> wallet [label=""object""];
    lift -> garden_box [label=""from""];
    lay -> wallet [label=""object""];
    lay -> bookshelf_top [label=""on""];
}"
"Command: Grab the cracked glossy clock from the armrest and set it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    cracked -> clock [label=""attribute""];
    glossy -> clock [label=""attribute""];
    grab -> clock [label=""object""];
    grab -> armrest [label=""from""];
    set -> clock [label=""object""];
    set -> bathtub [label=""on""];
}","Command: Grab the cracked glossy clock from the armrest and set it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    cracked -> clock [label=""attribute""];
    glossy -> clock [label=""attribute""];
    grab -> clock [label=""object""];
    grab -> armrest [label=""from""];
    set -> clock [label=""object""];
    set -> bathtub [label=""on""];
}"
"Command: Lift the square smooth helmet from the recycling bin and place it on the window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    square -> helmet [label=""attribute""];
    smooth -> helmet [label=""attribute""];
    lift -> helmet [label=""object""];
    lift -> recycling_bin [label=""from""];
    place -> helmet [label=""object""];
    place -> window_sill [label=""on""];
}","Command: Lift the square smooth helmet from the recycling bin and place it on the window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> helmet [label=""attribute""];
    smooth -> helmet [label=""attribute""];
    lift -> helmet [label=""object""];
    lift -> recycling_bin [label=""from""];
    place -> helmet [label=""object""];
    place -> window_sill [label=""on""];
}"
"Command: Pick the mug from the ottoman and place it on the medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    pick -> mug [label=""object""];
    pick -> ottoman [label=""from""];
    place -> mug [label=""object""];
    place -> medicine_cabinet [label=""on""];
}","Command: Pick the mug from the ottoman and place it on the medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    pick -> mug [label=""object""];
    pick -> ottoman [label=""from""];
    place -> mug [label=""object""];
    place -> medicine_cabinet [label=""on""];
}"
"Command: Lift the red square backpack from the bookshelf and place it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    square -> backpack [label=""attribute""];
    lift -> backpack [label=""object""];
    lift -> bookshelf [label=""from""];
    place -> backpack [label=""object""];
    place -> above_the_fridge [label=""on""];
}","Command: Lift the red square backpack from the bookshelf and place it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    red -> backpack [label=""attribute""];
    square -> backpack [label=""attribute""];
    lift -> backpack [label=""object""];
    lift -> bookshelf [label=""from""];
    place -> backpack [label=""object""];
    place -> above_the_fridge [label=""on""];
}"
"Command: Pick the wallet from the wardrobe and put it on the pet bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    pick -> wallet [label=""object""];
    pick -> wardrobe [label=""from""];
    put -> wallet [label=""object""];
    put -> pet_bed [label=""on""];
}","Command: Pick the wallet from the wardrobe and put it on the pet bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    pick -> wallet [label=""object""];
    pick -> wardrobe [label=""from""];
    put -> wallet [label=""object""];
    put -> pet_bed [label=""on""];
}"
"Command: Take the smooth square pencil from the bookshelf top and lay it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> pencil [label=""attribute""];
    square -> pencil [label=""attribute""];
    take -> pencil [label=""object""];
    take -> bookshelf_top [label=""from""];
    lay -> pencil [label=""object""];
    lay -> desk_drawer [label=""on""];
}","Command: Take the smooth square pencil from the bookshelf top and lay it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> pencil [label=""attribute""];
    square -> pencil [label=""attribute""];
    take -> pencil [label=""object""];
    take -> bookshelf_top [label=""from""];
    lay -> pencil [label=""object""];
    lay -> desk_drawer [label=""on""];
}"
"Command: Grab the white boot from the coat rack and place it on the open storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    white -> boot [label=""attribute""];
    open -> storage_box [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> boot [label=""object""];
    place -> storage_box [label=""on""];
}","Command: Grab the white boot from the coat rack and place it on the open storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    white -> boot [label=""attribute""];
    open -> storage_box [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> boot [label=""object""];
    place -> storage_box [label=""on""];
}"
"Command: Pick the shiny round helmet from the on the radiator and leave it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    shiny -> helmet [label=""attribute""];
    round -> helmet [label=""attribute""];
    pick -> helmet [label=""object""];
    pick -> on_the_radiator [label=""from""];
    leave -> helmet [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Pick the shiny round helmet from the on the radiator and leave it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    shiny -> helmet [label=""attribute""];
    round -> helmet [label=""attribute""];
    pick -> helmet [label=""object""];
    pick -> on_the_radiator [label=""from""];
    leave -> helmet [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Lift the spoon from the balcony shelf and put it on the laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift -> spoon [label=""object""];
    lift -> balcony_shelf [label=""from""];
    put -> spoon [label=""object""];
    put -> laundry_basket [label=""on""];
}","Command: Lift the spoon from the balcony shelf and put it on the laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift -> spoon [label=""object""];
    lift -> balcony_shelf [label=""from""];
    put -> spoon [label=""object""];
    put -> laundry_basket [label=""on""];
}"
"Command: Lift the shiny square bowl from the laundry basket and leave it on the cold wooden oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    shiny -> bowl [label=""attribute""];
    square -> bowl [label=""attribute""];
    cold -> oven [label=""attribute""];
    wooden -> oven [label=""attribute""];
    lift -> bowl [label=""object""];
    lift -> laundry_basket [label=""from""];
    leave -> bowl [label=""object""];
    leave -> oven [label=""on""];
}","Command: Lift the shiny square bowl from the laundry basket and leave it on the cold wooden oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    shiny -> bowl [label=""attribute""];
    square -> bowl [label=""attribute""];
    cold -> oven [label=""attribute""];
    wooden -> oven [label=""attribute""];
    lift -> bowl [label=""object""];
    lift -> laundry_basket [label=""from""];
    leave -> bowl [label=""object""];
    leave -> oven [label=""on""];
}"
"Command: Grab the green jacket from the full window sill and put it on the desk.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    green -> jacket [label=""attribute""];
    full -> window_sill [label=""attribute""];
    grab -> jacket [label=""object""];
    grab -> window_sill [label=""from""];
    put -> jacket [label=""object""];
    put -> desk [label=""on""];
}","Command: Grab the green jacket from the full window sill and put it on the desk.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    green -> jacket [label=""attribute""];
    full -> window_sill [label=""attribute""];
    grab -> jacket [label=""object""];
    grab -> window_sill [label=""from""];
    put -> jacket [label=""object""];
    put -> desk [label=""on""];
}"
"Command: Pick the green blunt speaker from the window ledge and set it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blunt -> speaker [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> window_ledge [label=""from""];
    set -> speaker [label=""object""];
    set -> next_to_the_lamp [label=""on""];
}","Command: Pick the green blunt speaker from the window ledge and set it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> speaker [label=""object""];
    pick -> window_ledge [label=""from""];
    set -> speaker [label=""object""];
    set -> next_to_the_lamp [label=""on""];
}"
"Command: Lift the plant from the fish tank and place it on the basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    lift -> plant [label=""object""];
    lift -> fish_tank [label=""from""];
    place -> plant [label=""object""];
    place -> basket [label=""on""];
}","Command: Lift the plant from the fish tank and place it on the basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    lift -> plant [label=""object""];
    lift -> fish_tank [label=""from""];
    place -> plant [label=""object""];
    place -> basket [label=""on""];
}"
"Command: Lift the comb from the sturdy wet cupboard and lay it on the cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    sturdy -> cupboard [label=""attribute""];
    wet -> cupboard [label=""attribute""];
    lift -> comb [label=""object""];
    lift -> cupboard [label=""from""];
    lay -> comb [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}","Command: Lift the comb from the sturdy wet cupboard and lay it on the cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    sturdy -> cupboard [label=""attribute""];
    wet -> cupboard [label=""attribute""];
    lift -> comb [label=""object""];
    lift -> cupboard [label=""from""];
    lay -> comb [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}"
"Command: Lift the white fuzzy glove from the armrest and lay it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    white -> glove [label=""attribute""];
    fuzzy -> glove [label=""attribute""];
    lift -> glove [label=""object""];
    lift -> armrest [label=""from""];
    lay -> glove [label=""object""];
    lay -> step_stool [label=""on""];
}","Command: Lift the white fuzzy glove from the armrest and lay it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    white -> glove [label=""attribute""];
    fuzzy -> glove [label=""attribute""];
    lift -> glove [label=""object""];
    lift -> armrest [label=""from""];
    lay -> glove [label=""object""];
    lay -> step_stool [label=""on""];
}"
"Command: Take the monitor from the desk drawer and set it on the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> monitor [label=""object""];
    take -> desk_drawer [label=""from""];
    set -> monitor [label=""object""];
    set -> table [label=""on""];
}","Command: Take the monitor from the desk drawer and set it on the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    take -> monitor [label=""object""];
    take -> desk_drawer [label=""from""];
    set -> monitor [label=""object""];
    set -> table [label=""on""];
}"
"Command: Grab the smooth jar from the beside the couch and lay it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    smooth -> jar [label=""attribute""];
    grab -> jar [label=""object""];
    grab -> beside_the_couch [label=""from""];
    lay -> jar [label=""object""];
    lay -> garage [label=""on""];
}","Command: Grab the smooth jar from the beside the couch and lay it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    smooth -> jar [label=""attribute""];
    grab -> jar [label=""object""];
    grab -> beside_the_couch [label=""from""];
    lay -> jar [label=""object""];
    lay -> garage [label=""on""];
}"
"Command: Lift the heavy notebook from the wooden storage box and place it on the plastic cold closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> notebook [label=""attribute""];
    wooden -> storage_box [label=""attribute""];
    plastic -> closet [label=""attribute""];
    cold -> closet [label=""attribute""];
    lift -> notebook [label=""object""];
    lift -> storage_box [label=""from""];
    place -> notebook [label=""object""];
    place -> closet [label=""on""];
}","Command: Lift the heavy notebook from the wooden storage box and place it on the plastic cold closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> notebook [label=""attribute""];
    wooden -> storage_box [label=""attribute""];
    plastic -> closet [label=""attribute""];
    cold -> closet [label=""attribute""];
    lift -> notebook [label=""object""];
    lift -> storage_box [label=""from""];
    place -> notebook [label=""object""];
    place -> closet [label=""on""];
}"
"Command: Lift the key from the clean closet and put it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> key [label=""object""];
    lift -> closet [label=""from""];
    put -> key [label=""object""];
    put -> above_the_fridge [label=""on""];
}","Command: Lift the key from the clean closet and put it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    clean -> closet [label=""attribute""];
    lift -> key [label=""object""];
    lift -> closet [label=""from""];
    put -> key [label=""object""];
    put -> above_the_fridge [label=""on""];
}"
"Command: Take the fuzzy sweater from the bookshelf top and lay it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    fuzzy -> sweater [label=""attribute""];
    take -> sweater [label=""object""];
    take -> bookshelf_top [label=""from""];
    lay -> sweater [label=""object""];
    lay -> shelf [label=""on""];
}","Command: Take the fuzzy sweater from the bookshelf top and lay it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    fuzzy -> sweater [label=""attribute""];
    take -> sweater [label=""object""];
    take -> bookshelf_top [label=""from""];
    lay -> sweater [label=""object""];
    lay -> shelf [label=""on""];
}"
"Command: Take the blunt doll from the bread box and leave it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    blunt -> doll [label=""attribute""];
    take -> doll [label=""object""];
    take -> bread_box [label=""from""];
    leave -> doll [label=""object""];
    leave -> garage [label=""on""];
}","Command: Take the blunt doll from the bread box and leave it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> doll [label=""attribute""];
    take -> doll [label=""object""];
    take -> bread_box [label=""from""];
    leave -> doll [label=""object""];
    leave -> garage [label=""on""];
}"
"Command: Lift the speaker from the kitchen island and leave it on the wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    lift -> speaker [label=""object""];
    lift -> kitchen_island [label=""from""];
    leave -> speaker [label=""object""];
    leave -> wall_hook [label=""on""];
}","Command: Lift the speaker from the kitchen island and leave it on the wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    lift -> speaker [label=""object""];
    lift -> kitchen_island [label=""from""];
    leave -> speaker [label=""object""];
    leave -> wall_hook [label=""on""];
}"
"Command: Take the shiny broom from the bright hallway and place it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> broom [label=""attribute""];
    bright -> hallway [label=""attribute""];
    take -> broom [label=""object""];
    take -> hallway [label=""from""];
    place -> broom [label=""object""];
    place -> window_ledge [label=""on""];
}","Command: Take the shiny broom from the bright hallway and place it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> broom [label=""attribute""];
    bright -> hallway [label=""attribute""];
    take -> broom [label=""object""];
    take -> hallway [label=""from""];
    place -> broom [label=""object""];
    place -> window_ledge [label=""on""];
}"
"Command: Take the soft boot from the dry cold hanger and set it on the window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> boot [label=""attribute""];
    dry -> hanger [label=""attribute""];
    cold -> hanger [label=""attribute""];
    take -> boot [label=""object""];
    take -> hanger [label=""from""];
    set -> boot [label=""object""];
    set -> window_sill [label=""on""];
}","Command: Take the soft boot from the dry cold hanger and set it on the window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> boot [label=""attribute""];
    dry -> hanger [label=""attribute""];
    cold -> hanger [label=""attribute""];
    take -> boot [label=""object""];
    take -> hanger [label=""from""];
    set -> boot [label=""object""];
    set -> window_sill [label=""on""];
}"
"Command: Take the comb from the cold fruit bowl and lay it on the sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> fruit_bowl [label=""attribute""];
    take -> comb [label=""object""];
    take -> fruit_bowl [label=""from""];
    lay -> comb [label=""object""];
    lay -> sink [label=""on""];
}","Command: Take the comb from the cold fruit bowl and lay it on the sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> fruit_bowl [label=""attribute""];
    take -> comb [label=""object""];
    take -> fruit_bowl [label=""from""];
    lay -> comb [label=""object""];
    lay -> sink [label=""on""];
}"
"Command: Grab the phone from the full cold litter box and lay it on the bright full wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    full -> litter_box [label=""attribute""];
    cold -> litter_box [label=""attribute""];
    bright -> wardrobe [label=""attribute""];
    full -> wardrobe [label=""attribute""];
    grab -> phone [label=""object""];
    grab -> litter_box [label=""from""];
    lay -> phone [label=""object""];
    lay -> wardrobe [label=""on""];
}","Command: Grab the phone from the full cold litter box and lay it on the bright full wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    full -> litter_box [label=""attribute""];
    cold -> litter_box [label=""attribute""];
    bright -> wardrobe [label=""attribute""];
    full -> wardrobe [label=""attribute""];
    grab -> phone [label=""object""];
    grab -> litter_box [label=""from""];
    lay -> phone [label=""object""];
    lay -> wardrobe [label=""on""];
}"
"Command: Pick the red light shirt from the stove and put it on the hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> shirt [label=""attribute""];
    light -> shirt [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> stove [label=""from""];
    put -> shirt [label=""object""];
    put -> hanger [label=""on""];
}","Command: Pick the red light shirt from the stove and put it on the hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> shirt [label=""attribute""];
    light -> shirt [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> stove [label=""from""];
    put -> shirt [label=""object""];
    put -> hanger [label=""on""];
}"
"Command: Pick the blue sharp controller from the messy radiator and leave it on the dry wet bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    blue -> controller [label=""attribute""];
    sharp -> controller [label=""attribute""];
    messy -> radiator [label=""attribute""];
    dry -> bread_box [label=""attribute""];
    wet -> bread_box [label=""attribute""];
    pick -> controller [label=""object""];
    pick -> radiator [label=""from""];
    leave -> controller [label=""object""];
    leave -> bread_box [label=""on""];
}","Command: Pick the blue sharp controller from the messy radiator and leave it on the dry wet bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blue -> controller [label=""attribute""];
    sharp -> controller [label=""attribute""];
    messy -> radiator [label=""attribute""];
    dry -> bread_box [label=""attribute""];
    wet -> bread_box [label=""attribute""];
    pick -> controller [label=""object""];
    pick -> radiator [label=""from""];
    leave -> controller [label=""object""];
    leave -> bread_box [label=""on""];
}"
"Command: Lift the red keyboard from the shaving kit and lay it on the wooden terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    red -> keyboard [label=""attribute""];
    wooden -> terrace_table [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> shaving_kit [label=""from""];
    lay -> keyboard [label=""object""];
    lay -> terrace_table [label=""on""];
}","Command: Lift the red keyboard from the shaving kit and lay it on the wooden terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    red -> keyboard [label=""attribute""];
    wooden -> terrace_table [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> shaving_kit [label=""from""];
    lay -> keyboard [label=""object""];
    lay -> terrace_table [label=""on""];
}"
"Command: Grab the sharp jar from the dry trash can and set it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> jar [label=""attribute""];
    dry -> trash_can [label=""attribute""];
    grab -> jar [label=""object""];
    grab -> trash_can [label=""from""];
    set -> jar [label=""object""];
    set -> bed [label=""on""];
}","Command: Grab the sharp jar from the dry trash can and set it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp -> jar [label=""attribute""];
    dry -> trash_can [label=""attribute""];
    grab -> jar [label=""object""];
    grab -> trash_can [label=""from""];
    set -> jar [label=""object""];
    set -> bed [label=""on""];
}"
"Command: Grab the hard glossy toy from the narrow bed and leave it on the full wet floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    hard -> toy [label=""attribute""];
    glossy -> toy [label=""attribute""];
    narrow -> bed [label=""attribute""];
    full -> floor [label=""attribute""];
    wet -> floor [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> bed [label=""from""];
    leave -> toy [label=""object""];
    leave -> floor [label=""on""];
}","Command: Grab the hard glossy toy from the narrow bed and leave it on the full wet floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    glossy -> toy [label=""attribute""];
    narrow [label=""attribute""];
    full -> floor [label=""attribute""];
    wet -> floor [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> bed [label=""from""];
    leave -> toy [label=""object""];
    leave -> floor [label=""on""];
}"
"Command: Lift the slipper from the narrow bright wall shelf and lay it on the dry open counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> wall_shelf [label=""attribute""];
    bright -> wall_shelf [label=""attribute""];
    dry -> counter [label=""attribute""];
    open -> counter [label=""attribute""];
    lift -> slipper [label=""object""];
    lift -> wall_shelf [label=""from""];
    lay -> slipper [label=""object""];
    lay -> counter [label=""on""];
}","Command: Lift the slipper from the narrow bright wall shelf and lay it on the dry open counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> wall_shelf [label=""attribute""];
    bright -> wall_shelf [label=""attribute""];
    dry -> counter [label=""attribute""];
    open -> counter [label=""attribute""];
    lift -> slipper [label=""object""];
    lift -> wall_shelf [label=""from""];
    lay -> slipper [label=""object""];
    lay -> counter [label=""on""];
}"
"Command: Take the heavy brush from the cupboard and put it on the windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> brush [label=""attribute""];
    take -> brush [label=""object""];
    take -> cupboard [label=""from""];
    put -> brush [label=""object""];
    put -> windowsill [label=""on""];
}","Command: Take the heavy brush from the cupboard and put it on the windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> brush [label=""attribute""];
    take -> brush [label=""object""];
    take -> cupboard [label=""from""];
    put -> brush [label=""object""];
    put -> windowsill [label=""on""];
}"
"Command: Grab the receipt from the coat rack and place it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    grab -> receipt [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> receipt [label=""object""];
    place -> bookshelf_top [label=""on""];
}","Command: Grab the receipt from the coat rack and place it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    grab -> receipt [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> receipt [label=""object""];
    place -> bookshelf_top [label=""on""];
}"
"Command: Take the glove from the bookshelf top and set it on the bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> glove [label=""object""];
    take -> bookshelf_top [label=""from""];
    set -> glove [label=""object""];
    set -> bread_box [label=""on""];
}","Command: Take the glove from the bookshelf top and set it on the bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> glove [label=""object""];
    take -> bookshelf_top [label=""from""];
    set -> glove [label=""object""];
    set -> bread_box [label=""on""];
}"
"Command: Grab the gamepad from the file cabinet and place it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    grab -> gamepad [label=""object""];
    grab -> file_cabinet [label=""from""];
    place -> gamepad [label=""object""];
    place -> fridge [label=""on""];
}","Command: Grab the gamepad from the file cabinet and place it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    grab -> gamepad [label=""object""];
    grab -> file_cabinet [label=""from""];
    place -> gamepad [label=""object""];
    place -> fridge [label=""on""];
}"
"Command: Grab the drill from the wardrobe and lay it on the drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab -> drill [label=""object""];
    grab -> wardrobe [label=""from""];
    lay -> drill [label=""object""];
    lay -> drawer_top [label=""on""];
}","Command: Grab the drill from the wardrobe and lay it on the drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    grab -> drill [label=""object""];
    grab -> wardrobe [label=""from""];
    lay -> drill [label=""object""];
    lay -> drawer_top [label=""on""];
}"
"Command: Pick the folder from the toiletry shelf and leave it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick -> folder [label=""object""];
    pick -> toiletry_shelf [label=""from""];
    leave -> folder [label=""object""];
    leave -> file_cabinet [label=""on""];
}","Command: Pick the folder from the toiletry shelf and leave it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick -> folder [label=""object""];
    pick -> toiletry_shelf [label=""from""];
    leave -> folder [label=""object""];
    leave -> file_cabinet [label=""on""];
}"
"Command: Lift the shoe from the first aid box and lay it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> first_aid_box [label=""from""];
    lay -> shoe [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}","Command: Lift the shoe from the first aid box and lay it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> shoe [label=""object""];
    lift -> first_aid_box [label=""from""];
    lay -> shoe [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}"
"Command: Lift the blunt fragile umbrella from the kitchen drawer and put it on the microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    blunt -> umbrella [label=""attribute""];
    fragile -> umbrella [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> kitchen_drawer [label=""from""];
    put -> umbrella [label=""object""];
    put -> microwave [label=""on""];
}","Command: Lift the blunt fragile umbrella from the kitchen drawer and put it on the microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    blunt -> umbrella [label=""attribute""];
    fragile -> umbrella [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> kitchen_drawer [label=""from""];
    put -> umbrella [label=""object""];
    put -> microwave [label=""on""];
}"
"Command: Take the card from the recycling bin and lay it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> recycling_bin [label=""from""];
    lay -> card [label=""object""];
    lay -> next_to_the_lamp [label=""on""];
}","Command: Take the card from the recycling bin and lay it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> recycling_bin [label=""from""];
    lay -> card [label=""object""];
    lay -> next_to_the_lamp [label=""on""];
}"
"Command: Pick the bat from the sturdy cold file cabinet and lay it on the open step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    sturdy -> file_cabinet [label=""attribute""];
    cold -> file_cabinet [label=""attribute""];
    open -> step_stool [label=""attribute""];
    pick -> bat [label=""object""];
    pick -> file_cabinet [label=""from""];
    lay -> bat [label=""object""];
    lay -> step_stool [label=""on""];
}","Command: Pick the bat from the sturdy cold file cabinet and lay it on the open step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    sturdy -> file_cabinet [label=""attribute""];
    cold -> file_cabinet [label=""attribute""];
    open -> step_stool [label=""attribute""];
    pick -> bat [label=""object""];
    pick -> file_cabinet [label=""from""];
    lay -> bat [label=""object""];
    lay -> step_stool [label=""on""];
}"
"Command: Pick the heavy cap from the warm bright fish tank and place it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> cap [label=""attribute""];
    warm -> fish_tank [label=""attribute""];
    bright -> fish_tank [label=""attribute""];
    pick -> cap [label=""object""];
    pick -> fish_tank [label=""from""];
    place -> cap [label=""object""];
    place -> step_stool [label=""on""];
}","Command: Pick the heavy cap from the warm bright fish tank and place it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> cap [label=""attribute""];
    warm -> fish_tank [label=""attribute""];
    bright -> fish_tank [label=""attribute""];
    pick -> cap [label=""object""];
    pick -> fish_tank [label=""from""];
    place -> cap [label=""object""];
    place -> step_stool [label=""on""];
}"
"Command: Take the container from the dusty full sink and lay it on the kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dusty -> sink [label=""attribute""];
    full -> sink [label=""attribute""];
    take -> container [label=""object""];
    take -> sink [label=""from""];
    lay -> container [label=""object""];
    lay -> kitchen_drawer [label=""on""];
}","Command: Take the container from the dusty full sink and lay it on the kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    container [label=""container"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dusty -> sink [label=""attribute""];
    full -> sink [label=""attribute""];
    take -> container [label=""object""];
    take -> sink [label=""from""];
    lay -> container [label=""object""];
    lay -> kitchen_drawer [label=""on""];
}"
"Command: Pick the square cracked clock from the noisy wall shelf and place it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> clock [label=""attribute""];
    cracked -> clock [label=""attribute""];
    noisy -> wall_shelf [label=""attribute""];
    pick -> clock [label=""object""];
    pick -> wall_shelf [label=""from""];
    place -> clock [label=""object""];
    place -> vacuum_base [label=""on""];
}","Command: Pick the square cracked clock from the noisy wall shelf and place it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> clock [label=""attribute""];
    cracked -> clock [label=""attribute""];
    noisy -> wall_shelf [label=""attribute""];
    pick -> clock [label=""object""];
    pick -> wall_shelf [label=""from""];
    place -> clock [label=""object""];
    place -> vacuum_base [label=""on""];
}"
"Command: Take the round fuzzy shirt from the dark noisy spice rack and put it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> shirt [label=""attribute""];
    dark -> spice_rack [label=""attribute""];
    noisy -> spice_rack [label=""attribute""];
    take -> shirt [label=""object""];
    take -> spice_rack [label=""from""];
    put -> shirt [label=""object""];
    put -> next_to_the_lamp [label=""on""];
}","Command: Take the round fuzzy shirt from the dark noisy spice rack and put it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> spice_rack [label=""attribute""];
    dark -> spice_rack [label=""attribute""];
    take -> shirt [label=""object""];
    take -> spice_rack [label=""from""];
    put -> shirt [label=""object""];
    put -> next_to_the_lamp [label=""on""];
}"
"Command: Grab the gamepad from the mirror shelf and leave it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    grab -> gamepad [label=""object""];
    grab -> mirror_shelf [label=""from""];
    leave -> gamepad [label=""object""];
    leave -> wall_shelf [label=""on""];
}","Command: Grab the gamepad from the mirror shelf and leave it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    grab -> gamepad [label=""object""];
    grab -> mirror_shelf [label=""from""];
    leave -> gamepad [label=""object""];
    leave -> wall_shelf [label=""on""];
}"
"Command: Take the fuzzy glossy backpack from the terrace table and leave it on the tidy cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> backpack [label=""attribute""];
    glossy -> backpack [label=""attribute""];
    tidy -> cupboard [label=""attribute""];
    take -> backpack [label=""object""];
    take -> terrace_table [label=""from""];
    leave -> backpack [label=""object""];
    leave -> cupboard [label=""on""];
}","Command: Take the fuzzy glossy backpack from the terrace table and leave it on the tidy cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> backpack [label=""attribute""];
    glossy -> backpack [label=""attribute""];
    tidy -> cupboard [label=""attribute""];
    take -> backpack [label=""object""];
    take -> terrace_table [label=""from""];
    leave -> backpack [label=""object""];
    leave -> cupboard [label=""on""];
}"
"Command: Take the ruler from the window ledge and set it on the noisy stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> stove [label=""attribute""];
    take -> ruler [label=""object""];
    take -> window_ledge [label=""from""];
    set -> ruler [label=""object""];
    set -> stove [label=""on""];
}","Command: Take the ruler from the window ledge and set it on the noisy stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> stove [label=""attribute""];
    take -> ruler [label=""object""];
    take -> window_ledge [label=""from""];
    set -> ruler [label=""object""];
    set -> stove [label=""on""];
}"
"Command: Take the heavy shiny headphones from the magazine rack and set it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    heavy -> headphones [label=""attribute""];
    shiny -> headphones [label=""attribute""];
    take -> headphones [label=""object""];
    take -> magazine_rack [label=""from""];
    set -> headphones [label=""object""];
    set -> desk_drawer [label=""on""];
}","Command: Take the heavy shiny headphones from the magazine rack and set it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> headphones [label=""attribute""];
    shiny -> headphones [label=""attribute""];
    take -> headphones [label=""object""];
    take -> magazine_rack [label=""from""];
    set -> headphones [label=""object""];
    set -> desk_drawer [label=""on""];
}"
"Command: Grab the bottle opener from the coat shelf and set it on the messy open garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> garden_box [label=""attribute""];
    open -> garden_box [label=""attribute""];
    grab -> bottle_opener [label=""object""];
    grab -> coat_shelf [label=""from""];
    set -> bottle_opener [label=""object""];
    set -> garden_box [label=""on""];
}","Command: Grab the bottle opener from the coat shelf and set it on the messy open garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> garden_box [label=""attribute""];
    open -> garden_box [label=""attribute""];
    grab -> bottle_opener [label=""object""];
    grab -> coat_shelf [label=""from""];
    set -> bottle_opener [label=""object""];
    set -> garden_box [label=""on""];
}"
"Command: Grab the shiny pen from the under the bed and set it on the dusty plastic toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shiny -> pen [label=""attribute""];
    dusty -> toiletry_shelf [label=""attribute""];
    plastic -> toiletry_shelf [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> under_the_bed [label=""from""];
    set -> pen [label=""object""];
    set -> toiletry_shelf [label=""on""];
}","Command: Grab the shiny pen from the under the bed and set it on the dusty plastic toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shiny -> pen [label=""attribute""];
    dusty -> toiletry_shelf [label=""attribute""];
    plastic -> toiletry_shelf [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> under_the_bed [label=""from""];
    set -> pen [label=""object""];
    set -> toiletry_shelf [label=""on""];
}"
"Command: Pick the fuzzy thermos from the shoe rack and leave it on the corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    fuzzy -> thermos [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> shoe_rack [label=""from""];
    leave -> thermos [label=""object""];
    leave -> corner [label=""on""];
}","Command: Pick the fuzzy thermos from the shoe rack and leave it on the corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    fuzzy -> thermos [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> shoe_rack [label=""from""];
    leave -> thermos [label=""object""];
    leave -> corner [label=""on""];
}"
"Command: Take the necklace from the counter and lay it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> necklace [label=""object""];
    take -> counter [label=""from""];
    lay -> necklace [label=""object""];
    lay -> fridge [label=""on""];
}","Command: Take the necklace from the counter and lay it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> necklace [label=""object""];
    take -> counter [label=""from""];
    lay -> necklace [label=""object""];
    lay -> fridge [label=""on""];
}"
"Command: Pick the black bowl from the makeup bag and put it on the heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> bowl [label=""attribute""];
    pick -> bowl [label=""object""];
    pick -> makeup_bag [label=""from""];
    put -> bowl [label=""object""];
    put -> heater [label=""on""];
}","Command: Pick the black bowl from the makeup bag and put it on the heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    black -> bowl [label=""attribute""];
    pick -> bowl [label=""object""];
    pick -> makeup_bag [label=""from""];
    put -> bowl [label=""object""];
    put -> heater [label=""on""];
}"
"Command: Pick the belt from the tool rack and place it on the storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    pick -> belt [label=""object""];
    pick -> tool_rack [label=""from""];
    place -> belt [label=""object""];
    place -> storage_box [label=""on""];
}","Command: Pick the belt from the tool rack and place it on the storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    pick -> belt [label=""object""];
    pick -> tool_rack [label=""from""];
    place -> belt [label=""object""];
    place -> storage_box [label=""on""];
}"
"Command: Pick the smooth necklace from the under the table and set it on the open kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    smooth -> necklace [label=""attribute""];
    open -> kitchen_drawer [label=""attribute""];
    pick -> necklace [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> necklace [label=""object""];
    set -> kitchen_drawer [label=""on""];
}","Command: Pick the smooth necklace from the under the table and set it on the open kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    smooth -> necklace [label=""attribute""];
    open -> kitchen_drawer [label=""attribute""];
    pick -> necklace [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> necklace [label=""object""];
    set -> kitchen_drawer [label=""on""];
}"
"Command: Lift the receipt from the plastic first aid box and put it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plastic -> first_aid_box [label=""attribute""];
    lift -> receipt [label=""object""];
    lift -> first_aid_box [label=""from""];
    put -> receipt [label=""object""];
    put -> fish_tank [label=""on""];
}","Command: Lift the receipt from the plastic first aid box and put it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plastic -> first_aid_box [label=""attribute""];
    lift -> receipt [label=""object""];
    lift -> first_aid_box [label=""from""];
    put -> receipt [label=""object""];
    put -> fish_tank [label=""on""];
}"
"Command: Lift the scissors from the trash can and set it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> trash_can [label=""from""];
    set -> scissors [label=""object""];
    set -> under_the_bed [label=""on""];
}","Command: Lift the scissors from the trash can and set it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> trash_can [label=""from""];
    set -> scissors [label=""object""];
    set -> under_the_bed [label=""on""];
}"
"Command: Lift the blunt umbrella from the full clean storage box and place it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    blunt -> umbrella [label=""attribute""];
    full -> storage_box [label=""attribute""];
    clean -> storage_box [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> storage_box [label=""from""];
    place -> umbrella [label=""object""];
    place -> file_cabinet [label=""on""];
}","Command: Lift the blunt umbrella from the full clean storage box and place it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    blunt -> umbrella [label=""attribute""];
    full -> storage_box [label=""attribute""];
    clean -> storage_box [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> storage_box [label=""from""];
    place -> umbrella [label=""object""];
    place -> file_cabinet [label=""on""];
}"
"Command: Pick the marker from the wine rack and place it on the drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    pick -> marker [label=""object""];
    pick -> wine_rack [label=""from""];
    place -> marker [label=""object""];
    place -> drawer_top [label=""on""];
}","Command: Pick the marker from the wine rack and place it on the drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    pick -> marker [label=""object""];
    pick -> wine_rack [label=""from""];
    place -> marker [label=""object""];
    place -> drawer_top [label=""on""];
}"
"Command: Take the black sharp scissors from the wardrobe and place it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    black -> scissors [label=""attribute""];
    sharp -> scissors [label=""attribute""];
    take -> scissors [label=""object""];
    take -> wardrobe [label=""from""];
    place -> scissors [label=""object""];
    place -> armrest [label=""on""];
}","Command: Take the black sharp scissors from the wardrobe and place it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    black -> scissors [label=""attribute""];
    sharp -> scissors [label=""attribute""];
    take -> scissors [label=""object""];
    take -> wardrobe [label=""from""];
    place -> scissors [label=""object""];
    place -> armrest [label=""on""];
}"
"Command: Pick the matte soft toy from the window ledge and place it on the dusty garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    matte -> toy [label=""attribute""];
    soft -> toy [label=""attribute""];
    dusty -> garden_box [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> window_ledge [label=""from""];
    place -> toy [label=""object""];
    place -> garden_box [label=""on""];
}","Command: Pick the matte soft toy from the window ledge and place it on the dusty garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    matte -> toy [label=""attribute""];
    soft -> toy [label=""attribute""];
    dusty -> garden_box [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> window_ledge [label=""from""];
    place -> toy [label=""object""];
    place -> garden_box [label=""on""];
}"
"Command: Lift the comb from the bright plant pot and put it on the bright cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    bright -> plant_pot [label=""attribute""];
    bright -> cushion [label=""attribute""];
    lift -> comb [label=""object""];
    lift -> plant_pot [label=""from""];
    put -> comb [label=""object""];
    put -> cushion [label=""on""];
}","Command: Lift the comb from the bright plant pot and put it on the bright cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    bright -> plant_pot [label=""attribute""];
    bright -> cushion [label=""attribute""];
    lift -> comb [label=""object""];
    lift -> plant_pot [label=""from""];
    put -> comb [label=""object""];
    put -> cushion [label=""on""];
}"
"Command: Pick the round square umbrella from the sturdy warm cushion and leave it on the dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    round -> umbrella [label=""attribute""];
    square -> umbrella [label=""attribute""];
    sturdy -> cushion [label=""attribute""];
    warm -> cushion [label=""attribute""];
    pick -> umbrella [label=""object""];
    pick -> cushion [label=""from""];
    leave -> umbrella [label=""object""];
    leave -> dryer [label=""on""];
}","Command: Pick the round square umbrella from the sturdy warm cushion and leave it on the dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    round -> umbrella [label=""attribute""];
    square -> umbrella [label=""attribute""];
    sturdy -> cushion [label=""attribute""];
    warm -> cushion [label=""attribute""];
    dryer [label=""attribute""];
    pick -> umbrella [label=""object""];
    pick -> cushion [label=""from""];
    leave -> umbrella [label=""object""];
    leave -> dryer [label=""on""];
}"
"Command: Take the bag from the warm fridge and leave it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bag [label=""object""];
    take -> fridge [label=""from""];
    leave -> bag [label=""object""];
    leave -> on_the_radiator [label=""on""];
}","Command: Take the bag from the warm fridge and leave it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    warm -> fridge [label=""attribute""];
    take -> bag [label=""object""];
    take -> fridge [label=""from""];
    leave -> bag [label=""object""];
    leave -> on_the_radiator [label=""on""];
}"
"Command: Lift the cup from the counter and lay it on the dry kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> kitchen_island [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> counter [label=""from""];
    lay -> cup [label=""object""];
    lay -> kitchen_island [label=""on""];
}","Command: Lift the cup from the counter and lay it on the dry kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    dry -> kitchen_island [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> counter [label=""from""];
    lay -> cup [label=""object""];
    lay -> kitchen_island [label=""on""];
}"
"Command: Pick the key from the narrow full fruit bowl and set it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> fruit_bowl [label=""attribute""];
    full -> fruit_bowl [label=""attribute""];
    pick -> key [label=""object""];
    pick -> fruit_bowl [label=""from""];
    set -> key [label=""object""];
    set -> drawer [label=""on""];
}","Command: Pick the key from the narrow full fruit bowl and set it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> fruit_bowl [label=""attribute""];
    full -> fruit_bowl [label=""attribute""];
    pick -> key [label=""object""];
    pick -> fruit_bowl [label=""from""];
    set -> key [label=""object""];
    set -> drawer [label=""on""];
}"
"Command: Lift the blunt green controller from the bread box and put it on the tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    blunt -> controller [label=""attribute""];
    green -> controller [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> bread_box [label=""from""];
    put -> controller [label=""object""];
    put -> tv_cabinet [label=""on""];
}","Command: Lift the blunt green controller from the bread box and put it on the tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> controller [label=""attribute""];
    green -> controller [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> bread_box [label=""from""];
    put -> controller [label=""object""];
    put -> tv_cabinet [label=""on""];
}"
"Command: Take the bin from the noisy side table and place it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> side_table [label=""attribute""];
    take -> bin [label=""object""];
    take -> side_table [label=""from""];
    place -> bin [label=""object""];
    place -> coat_rack [label=""on""];
}","Command: Take the bin from the noisy side table and place it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> side_table [label=""attribute""];
    take -> bin [label=""object""];
    take -> side_table [label=""from""];
    place -> bin [label=""object""];
    place -> coat_rack [label=""on""];
}"
"Command: Pick the sharp keyboard from the on the radiator and put it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp -> keyboard [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> on_the_radiator [label=""from""];
    put -> keyboard [label=""object""];
    put -> drawer [label=""on""];
}","Command: Pick the sharp keyboard from the on the radiator and put it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp -> keyboard [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> on_the_radiator [label=""from""];
    put -> keyboard [label=""object""];
    put -> drawer [label=""on""];
}"
"Command: Lift the light pen from the toilet and place it on the clean tidy dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    light -> pen [label=""attribute""];
    clean -> dryer [label=""attribute""];
    tidy -> dryer [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> toilet [label=""from""];
    place -> pen [label=""object""];
    place -> dryer [label=""on""];
}","Command: Lift the light pen from the toilet and place it on the clean tidy dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    light -> pen [label=""attribute""];
    clean -> dryer [label=""attribute""];
    tidy -> dryer [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> toilet [label=""from""];
    place -> pen [label=""object""];
    place -> dryer [label=""on""];
}"
"Command: Lift the pen from the vacuum base and put it on the bright stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bright -> stove [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> vacuum_base [label=""from""];
    put -> pen [label=""object""];
    put -> stove [label=""on""];
}","Command: Lift the pen from the vacuum base and put it on the bright stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bright -> stove [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> vacuum_base [label=""from""];
    put -> pen [label=""object""];
    put -> stove [label=""on""];
}"
"Command: Lift the toothbrush from the safe and set it on the dusty clean nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    dusty -> nightstand [label=""attribute""];
    clean -> nightstand [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> safe [label=""from""];
    set -> toothbrush [label=""object""];
    set -> nightstand [label=""on""];
}","Command: Lift the toothbrush from the safe and set it on the dusty clean nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    dusty -> nightstand [label=""attribute""];
    clean -> nightstand [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> safe [label=""from""];
    set -> toothbrush [label=""object""];
    set -> nightstand [label=""on""];
}"
"Command: Grab the shiny glossy sock from the shelf and lay it on the mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    shiny -> sock [label=""attribute""];
    glossy -> sock [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> shelf [label=""from""];
    lay -> sock [label=""object""];
    lay -> mirror_shelf [label=""on""];
}","Command: Grab the shiny glossy sock from the shelf and lay it on the mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    shiny -> sock [label=""attribute""];
    glossy -> sock [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> shelf [label=""from""];
    lay -> sock [label=""object""];
    lay -> mirror_shelf [label=""on""];
}"
"Command: Lift the fuzzy soft stapler from the messy hallway and put it on the bright fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> stapler [label=""attribute""];
    soft -> stapler [label=""attribute""];
    messy -> hallway [label=""attribute""];
    bright -> fridge_door [label=""attribute""];
    lift -> stapler [label=""object""];
    lift -> hallway [label=""from""];
    put -> stapler [label=""object""];
    put -> fridge_door [label=""on""];
}","Command: Lift the fuzzy soft stapler from the messy hallway and put it on the bright fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> stapler [label=""attribute""];
    soft -> stapler [label=""attribute""];
    messy -> hallway [label=""attribute""];
    bright -> fridge_door [label=""attribute""];
    lift -> stapler [label=""object""];
    lift -> hallway [label=""from""];
    put -> stapler [label=""object""];
    put -> fridge_door [label=""on""];
}"
"Command: Grab the key from the dusty warm makeup bag and put it on the stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dusty -> makeup_bag [label=""attribute""];
    warm -> makeup_bag [label=""attribute""];
    grab -> key [label=""object""];
    grab -> makeup_bag [label=""from""];
    put -> key [label=""object""];
    put -> stand [label=""on""];
}","Command: Grab the key from the dusty warm makeup bag and put it on the stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dusty -> makeup_bag [label=""attribute""];
    warm -> makeup_bag [label=""attribute""];
    grab -> key [label=""object""];
    grab -> makeup_bag [label=""from""];
    put -> key [label=""object""];
    put -> stand [label=""on""];
}"
"Command: Lift the fragile blue jar from the dark behind the curtain and lay it on the cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    fragile -> jar [label=""attribute""];
    blue -> jar [label=""attribute""];
    dark -> behind_the_curtain [label=""attribute""];
    lift -> jar [label=""object""];
    lift -> behind_the_curtain [label=""from""];
    lay -> jar [label=""object""];
    lay -> cupboard [label=""on""];
}","Command: Lift the fragile blue jar from the dark behind the curtain and lay it on the cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    fragile -> jar [label=""attribute""];
    blue -> jar [label=""attribute""];
    dark -> behind_the_curtain [label=""attribute""];
    lift -> jar [label=""object""];
    lift -> behind_the_curtain [label=""from""];
    lay -> jar [label=""object""];
    lay -> cupboard [label=""on""];
}"
"Command: Take the book from the armrest and lay it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> book [label=""object""];
    take -> armrest [label=""from""];
    lay -> book [label=""object""];
    lay -> nightstand [label=""on""];
}","Command: Take the book from the armrest and lay it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> book [label=""object""];
    take -> armrest [label=""from""];
    lay -> book [label=""object""];
    lay -> nightstand [label=""on""];
}"
"Command: Grab the blue shiny marker from the dry full under the bed and lay it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blue -> marker [label=""attribute""];
    shiny -> marker [label=""attribute""];
    dry -> under_the_bed [label=""attribute""];
    full -> under_the_bed [label=""attribute""];
    grab -> marker [label=""object""];
    grab -> under_the_bed [label=""from""];
    lay -> marker [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Grab the blue shiny marker from the dry full under the bed and lay it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blue -> marker [label=""attribute""];
    shiny -> marker [label=""attribute""];
    dry -> under_the_bed [label=""attribute""];
    full -> under_the_bed [label=""attribute""];
    grab -> marker [label=""object""];
    grab -> under_the_bed [label=""from""];
    lay -> marker [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Grab the heavy helmet from the radiator and leave it on the ceramic step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> helmet [label=""attribute""];
    ceramic -> step_stool [label=""attribute""];
    grab -> helmet [label=""object""];
    grab -> radiator [label=""from""];
    leave -> helmet [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Grab the heavy helmet from the radiator and leave it on the ceramic step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> helmet [label=""attribute""];
    ceramic -> step_stool [label=""attribute""];
    grab -> helmet [label=""object""];
    grab -> radiator [label=""from""];
    leave -> helmet [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Pick the jacket from the drawer top and place it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> drawer_top [label=""from""];
    place -> jacket [label=""object""];
    place -> next_to_the_lamp [label=""on""];
}","Command: Pick the jacket from the drawer top and place it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> drawer_top [label=""from""];
    place -> jacket [label=""object""];
    place -> next_to_the_lamp [label=""on""];
}"
"Command: Pick the blue drill from the wet narrow radiator and put it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> drill [label=""attribute""];
    wet -> radiator [label=""attribute""];
    narrow -> radiator [label=""attribute""];
    pick -> drill [label=""object""];
    pick -> radiator [label=""from""];
    put -> drill [label=""object""];
    put -> floor [label=""on""];
}","Command: Pick the blue drill from the wet narrow radiator and put it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> drill [label=""attribute""];
    wet -> radiator [label=""attribute""];
    narrow -> radiator [label=""attribute""];
    pick -> drill [label=""object""];
    pick -> radiator [label=""from""];
    put -> drill [label=""object""];
    put -> floor [label=""on""];
}"
"Command: Lift the fragile case from the litter box and leave it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    fragile -> case [label=""attribute""];
    lift -> case [label=""object""];
    lift -> litter_box [label=""from""];
    leave -> case [label=""object""];
    leave -> window_ledge [label=""on""];
}","Command: Lift the fragile case from the litter box and leave it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    fragile -> case [label=""attribute""];
    lift -> case [label=""object""];
    lift -> litter_box [label=""from""];
    leave -> case [label=""object""];
    leave -> window_ledge [label=""on""];
}"
"Command: Pick the backpack from the plant pot and leave it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    pick -> backpack [label=""object""];
    pick -> plant_pot [label=""from""];
    leave -> backpack [label=""object""];
    leave -> makeup_bag [label=""on""];
}","Command: Pick the backpack from the plant pot and leave it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    pick -> backpack [label=""object""];
    pick -> plant_pot [label=""from""];
    leave -> backpack [label=""object""];
    leave -> makeup_bag [label=""on""];
}"
"Command: Grab the matte book from the trash can and put it on the plastic messy wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    matte -> book [label=""attribute""];
    plastic -> wall_hook [label=""attribute""];
    messy -> wall_hook [label=""attribute""];
    grab -> book [label=""object""];
    grab -> trash_can [label=""from""];
    put -> book [label=""object""];
    put -> wall_hook [label=""on""];
}","Command: Grab the matte book from the trash can and put it on the plastic messy wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    matte -> book [label=""attribute""];
    plastic -> wall_hook [label=""attribute""];
    messy -> wall_hook [label=""attribute""];
    grab -> book [label=""object""];
    grab -> trash_can [label=""from""];
    put -> book [label=""object""];
    put -> wall_hook [label=""on""];
}"
"Command: Pick the shirt from the ceramic tidy radiator and set it on the drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    ceramic -> radiator [label=""attribute""];
    tidy -> radiator [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> radiator [label=""from""];
    set -> shirt [label=""object""];
    set -> drawer_top [label=""on""];
}","Command: Pick the shirt from the ceramic tidy radiator and set it on the drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    ceramic -> radiator [label=""attribute""];
    tidy -> radiator [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> radiator [label=""from""];
    set -> shirt [label=""object""];
    set -> drawer_top [label=""on""];
}"
"Command: Pick the tissue from the closed bright entrance and leave it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> entrance [label=""attribute""];
    bright -> entrance [label=""attribute""];
    pick -> tissue [label=""object""];
    pick -> entrance [label=""from""];
    leave -> tissue [label=""object""];
    leave -> ottoman [label=""on""];
}","Command: Pick the tissue from the closed bright entrance and leave it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> entrance [label=""attribute""];
    bright -> entrance [label=""attribute""];
    pick -> tissue [label=""object""];
    pick -> entrance [label=""from""];
    leave -> tissue [label=""object""];
    leave -> ottoman [label=""on""];
}"
"Command: Pick the matte thermos from the laundry basket and place it on the drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    matte -> thermos [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> laundry_basket [label=""from""];
    place -> thermos [label=""object""];
    place -> drawer_top [label=""on""];
}","Command: Pick the matte thermos from the laundry basket and place it on the drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    matte -> thermos [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> laundry_basket [label=""from""];
    place -> thermos [label=""object""];
    place -> drawer_top [label=""on""];
}"
"Command: Lift the umbrella from the bookshelf top and leave it on the first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    lift -> umbrella [label=""object""];
    lift -> bookshelf_top [label=""from""];
    leave -> umbrella [label=""object""];
    leave -> first_aid_box [label=""on""];
}","Command: Lift the umbrella from the bookshelf top and leave it on the first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    lift -> umbrella [label=""object""];
    lift -> bookshelf_top [label=""from""];
    leave -> umbrella [label=""object""];
    leave -> first_aid_box [label=""on""];
}"
"Command: Grab the red bag from the shaving kit and put it on the wet shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> bag [label=""attribute""];
    wet -> shaving_kit [label=""attribute""];
    grab -> bag [label=""object""];
    grab -> shaving_kit [label=""from""];
    put -> bag [label=""object""];
    put -> shaving_kit [label=""on""];
}","Command: Grab the red bag from the shaving kit and put it on the wet shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    red [label=""red"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> bag [label=""attribute""];
    wet -> shaving_kit [label=""attribute""];
    grab -> bag [label=""object""];
    grab -> shaving_kit [label=""from""];
    put -> bag [label=""object""];
    put -> shaving_kit [label=""on""];
}"
"Command: Lift the round glossy frame from the bright clean nightstand and place it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    round -> frame [label=""attribute""];
    glossy -> frame [label=""attribute""];
    bright -> nightstand [label=""attribute""];
    clean -> nightstand [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> nightstand [label=""from""];
    place -> frame [label=""object""];
    place -> wine_rack [label=""on""];
}","Command: Lift the round glossy frame from the bright clean nightstand and place it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    round -> frame [label=""attribute""];
    glossy -> frame [label=""attribute""];
    bright -> nightstand [label=""attribute""];
    clean -> nightstand [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> nightstand [label=""from""];
    place -> frame [label=""object""];
    place -> wine_rack [label=""on""];
}"
"Command: Lift the glossy cracked paper from the first aid box and lay it on the spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    glossy -> paper [label=""attribute""];
    cracked -> paper [label=""attribute""];
    lift -> paper [label=""object""];
    lift -> first_aid_box [label=""from""];
    lay -> paper [label=""object""];
    lay -> spice_rack [label=""on""];
}","Command: Lift the glossy cracked paper from the first aid box and lay it on the spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    glossy -> paper [label=""attribute""];
    cracked -> paper [label=""attribute""];
    lift -> paper [label=""object""];
    lift -> first_aid_box [label=""from""];
    lay -> paper [label=""object""];
    lay -> spice_rack [label=""on""];
}"
"Command: Take the fuzzy soft bracelet from the fish tank and set it on the plastic clean desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> bracelet [label=""attribute""];
    soft -> bracelet [label=""attribute""];
    plastic -> desk_drawer [label=""attribute""];
    clean -> desk_drawer [label=""attribute""];
    take -> bracelet [label=""object""];
    take -> fish_tank [label=""from""];
    set -> bracelet [label=""object""];
    set -> desk_drawer [label=""on""];
}","Command: Take the fuzzy soft bracelet from the fish tank and set it on the plastic clean desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> bracelet [label=""attribute""];
    soft -> bracelet [label=""attribute""];
    plastic -> desk_drawer [label=""attribute""];
    clean -> desk_drawer [label=""attribute""];
    take -> bracelet [label=""object""];
    take -> fish_tank [label=""from""];
    set -> bracelet [label=""object""];
    set -> desk_drawer [label=""on""];
}"
"Command: Take the sharp blue boot from the dusty dark closet and put it on the kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> boot [label=""attribute""];
    blue -> boot [label=""attribute""];
    dusty -> closet [label=""attribute""];
    dark -> closet [label=""attribute""];
    take -> boot [label=""object""];
    take -> closet [label=""from""];
    put -> boot [label=""object""];
    put -> kitchen_island [label=""on""];
}","Command: Take the sharp blue boot from the dusty dark closet and put it on the kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> boot [label=""attribute""];
    blue -> boot [label=""attribute""];
    dusty -> closet [label=""attribute""];
    dark -> closet [label=""attribute""];
    take -> boot [label=""object""];
    take -> closet [label=""from""];
    put -> boot [label=""object""];
    put -> kitchen_island [label=""on""];
}"
"Command: Take the shiny square box from the stand and lay it on the open cold medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> box [label=""attribute""];
    square -> box [label=""attribute""];
    open -> medicine_cabinet [label=""attribute""];
    cold -> medicine_cabinet [label=""attribute""];
    take -> box [label=""object""];
    take -> stand [label=""from""];
    lay -> box [label=""object""];
    lay -> medicine_cabinet [label=""on""];
}","Command: Take the shiny square box from the stand and lay it on the open cold medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> box [label=""attribute""];
    square -> box [label=""attribute""];
    open -> medicine_cabinet [label=""attribute""];
    cold -> medicine_cabinet [label=""attribute""];
    take -> box [label=""object""];
    take -> stand [label=""from""];
    lay -> box [label=""object""];
    lay -> medicine_cabinet [label=""on""];
}"
"Command: Take the white wallet from the open wall hook and place it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> wall_hook [label=""attribute""];
    take -> wallet [label=""object""];
    take -> wall_hook [label=""from""];
    place -> wallet [label=""object""];
    place -> under_the_bed [label=""on""];
}","Command: Take the white wallet from the open wall hook and place it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> wall_hook [label=""attribute""];
    take -> wallet [label=""object""];
    take -> wall_hook [label=""from""];
    place -> wallet [label=""object""];
    place -> under_the_bed [label=""on""];
}"
"Command: Lift the white necklace from the wet wooden vacuum base and place it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    white -> necklace [label=""attribute""];
    wet -> vacuum_base [label=""attribute""];
    wooden -> vacuum_base [label=""attribute""];
    lift -> necklace [label=""object""];
    lift -> vacuum_base [label=""from""];
    place -> necklace [label=""object""];
    place -> ottoman [label=""on""];
}","Command: Lift the white necklace from the wet wooden vacuum base and place it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    white -> necklace [label=""attribute""];
    wet -> vacuum_base [label=""attribute""];
    wooden -> vacuum_base [label=""attribute""];
    lift -> necklace [label=""object""];
    lift -> vacuum_base [label=""from""];
    place -> necklace [label=""object""];
    place -> ottoman [label=""on""];
}"
"Command: Grab the fuzzy coaster from the bed and put it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> coaster [label=""object""];
    grab -> bed [label=""from""];
    put -> coaster [label=""object""];
    put -> behind_the_curtain [label=""on""];
}","Command: Grab the fuzzy coaster from the bed and put it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> bed [label=""from""];
    put -> coaster [label=""object""];
    put -> behind_the_curtain [label=""on""];
}"
"Command: Take the soap from the wooden above the fridge and set it on the sturdy laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    wooden -> above_the_fridge [label=""attribute""];
    sturdy -> laundry_machine [label=""attribute""];
    take -> soap [label=""object""];
    take -> above_the_fridge [label=""from""];
    set -> soap [label=""object""];
    set -> laundry_machine [label=""on""];
}","Command: Take the soap from the wooden above the fridge and set it on the sturdy laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    wooden -> above_the_fridge [label=""attribute""];
    sturdy -> laundry_machine [label=""attribute""];
    take -> soap [label=""object""];
    take -> above_the_fridge [label=""from""];
    set -> soap [label=""object""];
    set -> laundry_machine [label=""on""];
}"
"Command: Grab the red jar from the messy open fridge door and lay it on the cold vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    red -> jar [label=""attribute""];
    messy -> fridge_door [label=""attribute""];
    open -> fridge_door [label=""attribute""];
    cold -> vacuum_base [label=""attribute""];
    grab -> jar [label=""object""];
    grab -> fridge_door [label=""from""];
    lay -> jar [label=""object""];
    lay -> vacuum_base [label=""on""];
}","Command: Grab the red jar from the messy open fridge door and lay it on the cold vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    red -> jar [label=""attribute""];
    messy -> fridge_door [label=""attribute""];
    open -> fridge_door [label=""attribute""];
    cold -> vacuum_base [label=""attribute""];
    grab -> jar [label=""object""];
    grab -> fridge_door [label=""from""];
    lay -> jar [label=""object""];
    lay -> vacuum_base [label=""on""];
}"
"Command: Lift the glass from the tv cabinet and set it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    lift -> glass [label=""object""];
    lift -> tv_cabinet [label=""from""];
    set -> glass [label=""object""];
    set -> cabinet [label=""on""];
}","Command: Lift the glass from the tv cabinet and set it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    lift -> glass [label=""object""];
    lift -> tv_cabinet [label=""from""];
    set -> glass [label=""object""];
    set -> cabinet [label=""on""];
}"
"Command: Pick the fragile green bracelet from the heater and set it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fragile -> bracelet [label=""attribute""];
    green -> bracelet [label=""attribute""];
    pick -> bracelet [label=""object""];
    pick -> heater [label=""from""];
    set -> bracelet [label=""object""];
    set -> file_cabinet [label=""on""];
}","Command: Pick the fragile green bracelet from the heater and set it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fragile -> bracelet [label=""attribute""];
    green -> bracelet [label=""attribute""];
    pick -> bracelet [label=""object""];
    pick -> heater [label=""from""];
    set -> bracelet [label=""object""];
    set -> file_cabinet [label=""on""];
}"
"Command: Take the frame from the first aid box and leave it on the dry empty toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dry -> toolbox [label=""attribute""];
    empty -> toolbox [label=""attribute""];
    take -> frame [label=""object""];
    take -> first_aid_box [label=""from""];
    leave -> frame [label=""object""];
    leave -> toolbox [label=""on""];
}","Command: Take the frame from the first aid box and leave it on the dry empty toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dry -> toolbox [label=""attribute""];
    empty -> toolbox [label=""attribute""];
    take -> frame [label=""object""];
    take -> first_aid_box [label=""from""];
    leave -> frame [label=""object""];
    leave -> toolbox [label=""on""];
}"
"Command: Lift the slipper from the bookshelf top and lay it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> bookshelf_top [label=""from""];
    lay -> slipper [label=""object""];
    lay -> on_the_radiator [label=""on""];
}","Command: Lift the slipper from the bookshelf top and lay it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> bookshelf_top [label=""from""];
    lay -> slipper [label=""object""];
    lay -> on_the_radiator [label=""on""];
}"
"Command: Grab the matte smooth bowl from the bookshelf top and leave it on the ceramic windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    matte -> bowl [label=""attribute""];
    smooth -> bowl [label=""attribute""];
    ceramic -> windowsill [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> bookshelf_top [label=""from""];
    leave -> bowl [label=""object""];
    leave -> windowsill [label=""on""];
}","Command: Grab the matte smooth bowl from the bookshelf top and leave it on the ceramic windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    matte -> bowl [label=""attribute""];
    smooth -> bowl [label=""attribute""];
    ceramic -> windowsill [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> bookshelf_top [label=""from""];
    leave -> bowl [label=""object""];
    leave -> windowsill [label=""on""];
}"
"Command: Pick the bottle opener from the plastic sturdy pantry and leave it on the tidy bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    plastic -> pantry [label=""attribute""];
    sturdy -> pantry [label=""attribute""];
    tidy -> bread_box [label=""attribute""];
    pick -> bottle_opener [label=""object""];
    pick -> pantry [label=""from""];
    leave -> bottle_opener [label=""object""];
    leave -> bread_box [label=""on""];
}","Command: Pick the bottle opener from the plastic sturdy pantry and leave it on the tidy bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    plastic -> pantry [label=""attribute""];
    sturdy -> pantry [label=""attribute""];
    tidy -> bread_box [label=""attribute""];
    pick -> bottle_opener [label=""object""];
    pick -> pantry [label=""from""];
    leave -> bottle_opener [label=""object""];
    leave -> bread_box [label=""on""];
}"
"Command: Grab the watch from the open warm plant pot and lay it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    open -> plant_pot [label=""attribute""];
    warm -> plant_pot [label=""attribute""];
    grab -> watch [label=""object""];
    grab -> plant_pot [label=""from""];
    lay -> watch [label=""object""];
    lay -> mini_fridge [label=""on""];
}","Command: Grab the watch from the open warm plant pot and lay it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    open -> plant_pot [label=""attribute""];
    warm -> plant_pot [label=""attribute""];
    grab -> watch [label=""object""];
    grab -> plant_pot [label=""from""];
    lay -> watch [label=""object""];
    lay -> mini_fridge [label=""on""];
}"
"Command: Take the belt from the fish tank and set it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> belt [label=""object""];
    take -> fish_tank [label=""from""];
    set -> belt [label=""object""];
    set -> makeup_bag [label=""on""];
}","Command: Take the belt from the fish tank and set it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> belt [label=""object""];
    take -> fish_tank [label=""from""];
    set -> belt [label=""object""];
    set -> makeup_bag [label=""on""];
}"
"Command: Take the matte remote from the dark ceramic terrace table and leave it on the cold balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte -> remote [label=""attribute""];
    dark -> terrace_table [label=""attribute""];
    ceramic -> terrace_table [label=""attribute""];
    cold -> balcony_shelf [label=""attribute""];
    take -> remote [label=""object""];
    take -> terrace_table [label=""from""];
    leave -> remote [label=""object""];
    leave -> balcony_shelf [label=""on""];
}","Command: Take the matte remote from the dark ceramic terrace table and leave it on the cold balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte -> remote [label=""attribute""];
    dark -> terrace_table [label=""attribute""];
    ceramic -> terrace_table [label=""attribute""];
    cold -> balcony_shelf [label=""attribute""];
    take -> remote [label=""object""];
    take -> terrace_table [label=""from""];
    leave -> remote [label=""object""];
    leave -> balcony_shelf [label=""on""];
}"
"Command: Grab the glossy coaster from the empty mirror shelf and set it on the tidy drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    glossy -> coaster [label=""attribute""];
    empty -> mirror_shelf [label=""attribute""];
    tidy -> drawer [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> mirror_shelf [label=""from""];
    set -> coaster [label=""object""];
    set -> drawer [label=""on""];
}","Command: Grab the glossy coaster from the empty mirror shelf and set it on the tidy drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    glossy -> coaster [label=""attribute""];
    empty -> mirror_shelf [label=""attribute""];
    tidy -> drawer [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> mirror_shelf [label=""from""];
    set -> coaster [label=""object""];
    set -> drawer [label=""on""];
}"
"Command: Grab the blue matte glass from the shelf and place it on the bright warm radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    blue -> glass [label=""attribute""];
    matte -> glass [label=""attribute""];
    bright -> radiator [label=""attribute""];
    warm -> radiator [label=""attribute""];
    grab -> glass [label=""object""];
    grab -> shelf [label=""from""];
    place -> glass [label=""object""];
    place -> radiator [label=""on""];
}","Command: Grab the blue matte glass from the shelf and place it on the bright warm radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    blue -> glass [label=""attribute""];
    matte -> glass [label=""attribute""];
    bright -> radiator [label=""attribute""];
    warm -> radiator [label=""attribute""];
    grab -> glass [label=""object""];
    grab -> shelf [label=""from""];
    place -> glass [label=""object""];
    place -> radiator [label=""on""];
}"
"Command: Pick the toy from the plastic empty laundry machine and lay it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    empty -> laundry_machine [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> laundry_machine [label=""from""];
    lay -> toy [label=""object""];
    lay -> on_the_radiator [label=""on""];
}","Command: Pick the toy from the plastic empty laundry machine and lay it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plastic -> laundry_machine [label=""attribute""];
    empty -> laundry_machine [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> laundry_machine [label=""from""];
    lay -> toy [label=""object""];
    lay -> on_the_radiator [label=""on""];
}"
"Command: Grab the lego from the closet and lay it on the bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    grab -> lego [label=""object""];
    grab -> closet [label=""from""];
    lay -> lego [label=""object""];
    lay -> bin [label=""on""];
}","Command: Grab the lego from the closet and lay it on the bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    grab -> lego [label=""object""];
    grab -> closet [label=""from""];
    lay -> lego [label=""object""];
    lay -> bin [label=""on""];
}"
"Command: Grab the heavy headphones from the toolbox and lay it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> headphones [label=""attribute""];
    grab -> headphones [label=""object""];
    grab -> toolbox [label=""from""];
    lay -> headphones [label=""object""];
    lay -> trash_can [label=""on""];
}","Command: Grab the heavy headphones from the toolbox and lay it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> headphones [label=""attribute""];
    grab -> headphones [label=""object""];
    grab -> toolbox [label=""from""];
    lay -> headphones [label=""object""];
    lay -> trash_can [label=""on""];
}"
"Command: Lift the square key from the pantry and put it on the dry tidy laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> key [label=""attribute""];
    dry -> laundry_machine [label=""attribute""];
    tidy -> laundry_machine [label=""attribute""];
    lift -> key [label=""object""];
    lift -> pantry [label=""from""];
    put -> key [label=""object""];
    put -> laundry_machine [label=""on""];
}","Command: Lift the square key from the pantry and put it on the dry tidy laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> key [label=""attribute""];
    dry -> laundry_machine [label=""attribute""];
    tidy -> laundry_machine [label=""attribute""];
    lift -> key [label=""object""];
    lift -> pantry [label=""from""];
    put -> key [label=""object""];
    put -> laundry_machine [label=""on""];
}"
"Command: Take the watch from the shaving kit and put it on the laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> watch [label=""object""];
    take -> shaving_kit [label=""from""];
    put -> watch [label=""object""];
    put -> laundry_basket [label=""on""];
}","Command: Take the watch from the shaving kit and put it on the laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> watch [label=""object""];
    take -> shaving_kit [label=""from""];
    put -> watch [label=""object""];
    put -> laundry_basket [label=""on""];
}"
"Command: Lift the fragile square scissors from the pet bed and lay it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    fragile -> scissors [label=""attribute""];
    square -> scissors [label=""attribute""];
    lift -> scissors [label=""object""];
    lift -> pet_bed [label=""from""];
    lay -> scissors [label=""object""];
    lay -> fridge [label=""on""];
}","Command: Lift the fragile square scissors from the pet bed and lay it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    fragile -> scissors [label=""attribute""];
    square -> scissors [label=""attribute""];
    lift -> scissors [label=""object""];
    lift -> pet_bed [label=""from""];
    lay -> scissors [label=""object""];
    lay -> fridge [label=""on""];
}"
"Command: Lift the smooth green monitor from the dark fridge door and leave it on the toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    smooth -> monitor [label=""attribute""];
    green -> monitor [label=""attribute""];
    dark -> fridge_door [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> monitor [label=""object""];
    leave -> toolbox [label=""on""];
}","Command: Lift the smooth green monitor from the dark fridge door and leave it on the toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    smooth -> monitor [label=""attribute""];
    green -> monitor [label=""attribute""];
    dark -> fridge_door [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> monitor [label=""object""];
    leave -> toolbox [label=""on""];
}"
"Command: Take the watch from the bread box and set it on the counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> watch [label=""object""];
    take -> bread_box [label=""from""];
    set -> watch [label=""object""];
    set -> counter [label=""on""];
}","Command: Take the watch from the bread box and set it on the counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> watch [label=""object""];
    take -> bread_box [label=""from""];
    set -> watch [label=""object""];
    set -> counter [label=""on""];
}"
"Command: Lift the book from the empty locker and lay it on the window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> locker [label=""attribute""];
    lift -> book [label=""object""];
    lift -> locker [label=""from""];
    lay -> book [label=""object""];
    lay -> window_sill [label=""on""];
}","Command: Lift the book from the empty locker and lay it on the window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> locker [label=""attribute""];
    lift -> book [label=""object""];
    lift -> locker [label=""from""];
    lay -> book [label=""object""];
    lay -> window_sill [label=""on""];
}"
"Command: Pick the speaker from the hanger and put it on the messy coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    messy -> coffee_table [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> hanger [label=""from""];
    put -> speaker [label=""object""];
    put -> coffee_table [label=""on""];
}","Command: Pick the speaker from the hanger and put it on the messy coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    messy -> coffee_table [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> hanger [label=""from""];
    put -> speaker [label=""object""];
    put -> coffee_table [label=""on""];
}"
"Command: Grab the fuzzy backpack from the bread box and put it on the closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> backpack [label=""attribute""];
    grab -> backpack [label=""object""];
    grab -> bread_box [label=""from""];
    put -> backpack [label=""object""];
    put -> closet [label=""on""];
}","Command: Grab the fuzzy backpack from the bread box and put it on the closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    fuzzy -> backpack [label=""attribute""];
    grab -> backpack [label=""object""];
    grab -> bread_box [label=""from""];
    put -> backpack [label=""object""];
    put -> closet [label=""on""];
}"
"Command: Grab the soft mouse from the wardrobe and set it on the warm dry fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    soft -> mouse [label=""attribute""];
    warm -> fish_tank [label=""attribute""];
    dry -> fish_tank [label=""attribute""];
    grab -> mouse [label=""object""];
    grab -> wardrobe [label=""from""];
    set -> mouse [label=""object""];
    set -> fish_tank [label=""on""];
}","Command: Grab the soft mouse from the wardrobe and set it on the warm dry fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    soft -> mouse [label=""attribute""];
    warm -> fish_tank [label=""attribute""];
    dry -> fish_tank [label=""attribute""];
    grab -> mouse [label=""object""];
    grab -> wardrobe [label=""from""];
    set -> mouse [label=""object""];
    set -> fish_tank [label=""on""];
}"
"Command: Take the shiny controller from the fridge door and put it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> controller [label=""attribute""];
    take -> controller [label=""object""];
    take -> fridge_door [label=""from""];
    put -> controller [label=""object""];
    put -> laundry_machine [label=""on""];
}","Command: Take the shiny controller from the fridge door and put it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> controller [label=""attribute""];
    take -> controller [label=""object""];
    take -> fridge_door [label=""from""];
    put -> controller [label=""object""];
    put -> laundry_machine [label=""on""];
}"
"Command: Lift the umbrella from the ceramic fridge door and lay it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    ceramic -> fridge_door [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> fridge_door [label=""from""];
    lay -> umbrella [label=""object""];
    lay -> window_ledge [label=""on""];
}","Command: Lift the umbrella from the ceramic fridge door and lay it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    ceramic -> fridge_door [label=""attribute""];
    lift -> umbrella [label=""object""];
    lift -> fridge_door [label=""from""];
    lay -> umbrella [label=""object""];
    lay -> window_ledge [label=""on""];
}"
"Command: Take the mug from the shoe rack and lay it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mug [label=""object""];
    take -> shoe_rack [label=""from""];
    lay -> mug [label=""object""];
    lay -> trash_can [label=""on""];
}","Command: Take the mug from the shoe rack and lay it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mug [label=""object""];
    take -> shoe_rack [label=""from""];
    lay -> mug [label=""object""];
    lay -> trash_can [label=""on""];
}"
"Command: Grab the cracked blue sneaker from the dusty ceramic floor and leave it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    cracked -> sneaker [label=""attribute""];
    blue -> sneaker [label=""attribute""];
    dusty -> floor [label=""attribute""];
    ceramic -> floor [label=""attribute""];
    grab -> sneaker [label=""object""];
    grab -> floor [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> vacuum_base [label=""on""];
}","Command: Grab the cracked blue sneaker from the dusty ceramic floor and leave it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    cracked -> sneaker [label=""attribute""];
    blue -> sneaker [label=""attribute""];
    dusty -> floor [label=""attribute""];
    ceramic -> floor [label=""attribute""];
    grab -> sneaker [label=""object""];
    grab -> floor [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> vacuum_base [label=""on""];
}"
"Command: Grab the smooth green key from the messy closed litter box and lay it on the garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    smooth -> key [label=""attribute""];
    green -> key [label=""attribute""];
    messy -> litter_box [label=""attribute""];
    closed -> litter_box [label=""attribute""];
    grab -> key [label=""object""];
    grab -> litter_box [label=""from""];
    lay -> key [label=""object""];
    lay -> garden_box [label=""on""];
}","Command: Grab the smooth green key from the messy closed litter box and lay it on the garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    smooth -> key [label=""attribute""];
    green -> key [label=""attribute""];
    messy -> litter_box [label=""attribute""];
    closed -> litter_box [label=""attribute""];
    grab -> key [label=""object""];
    grab -> litter_box [label=""from""];
    lay -> key [label=""object""];
    lay -> garden_box [label=""on""];
}"
"Command: Take the bin from the file cabinet and lay it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> file_cabinet [label=""from""];
    lay -> bin [label=""object""];
    lay -> under_the_bed [label=""on""];
}","Command: Take the bin from the file cabinet and lay it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> file_cabinet [label=""from""];
    lay -> bin [label=""object""];
    lay -> under_the_bed [label=""on""];
}"
"Command: Lift the cable from the bright open shoe rack and leave it on the tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    bright -> shoe_rack [label=""attribute""];
    open -> shoe_rack [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> shoe_rack [label=""from""];
    leave -> cable [label=""object""];
    leave -> tv_stand [label=""on""];
}","Command: Lift the cable from the bright open shoe rack and leave it on the tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    bright -> shoe_rack [label=""attribute""];
    open -> shoe_rack [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> shoe_rack [label=""from""];
    leave -> cable [label=""object""];
    leave -> tv_stand [label=""on""];
}"
"Command: Lift the scissors from the kitchen island and place it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    lift -> scissors [label=""object""];
    lift -> kitchen_island [label=""from""];
    place -> scissors [label=""object""];
    place -> fridge [label=""on""];
}","Command: Lift the scissors from the kitchen island and place it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    lift -> scissors [label=""object""];
    lift -> kitchen_island [label=""from""];
    place -> scissors [label=""object""];
    place -> fridge [label=""on""];
}"
"Command: Pick the doll from the open dry fridge and leave it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dry -> fridge [label=""attribute""];
    pick -> doll [label=""object""];
    pick -> fridge [label=""from""];
    leave -> doll [label=""object""];
    leave -> on_the_radiator [label=""on""];
}","Command: Pick the doll from the open dry fridge and leave it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    open -> fridge [label=""attribute""];
    dry -> fridge [label=""attribute""];
    pick -> doll [label=""object""];
    pick -> fridge [label=""from""];
    leave -> doll [label=""object""];
    leave -> on_the_radiator [label=""on""];
}"
"Command: Take the heavy fragile coin from the wall hook and lay it on the cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> coin [label=""attribute""];
    fragile -> coin [label=""attribute""];
    take -> coin [label=""object""];
    take -> wall_hook [label=""from""];
    lay -> coin [label=""object""];
    lay -> cupboard [label=""on""];
}","Command: Take the heavy fragile coin from the wall hook and lay it on the cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> coin [label=""attribute""];
    fragile -> coin [label=""attribute""];
    take -> coin [label=""object""];
    take -> wall_hook [label=""from""];
    lay -> coin [label=""object""];
    lay -> cupboard [label=""on""];
}"
"Command: Lift the bag from the clean basket and put it on the closed narrow pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    clean -> basket [label=""attribute""];
    closed -> pantry [label=""attribute""];
    narrow -> pantry [label=""attribute""];
    lift -> bag [label=""object""];
    lift -> basket [label=""from""];
    put -> bag [label=""object""];
    put -> pantry [label=""on""];
}","Command: Lift the bag from the clean basket and put it on the closed narrow pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    clean -> basket [label=""attribute""];
    closed -> pantry [label=""attribute""];
    lift -> bag [label=""object""];
    lift -> basket [label=""from""];
    put -> bag [label=""object""];
    put -> pantry [label=""on""];
}"
"Command: Pick the brush from the dusty tv stand and place it on the clean cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    dusty -> tv_stand [label=""attribute""];
    clean -> cupboard [label=""attribute""];
    pick -> brush [label=""object""];
    pick -> tv_stand [label=""from""];
    place -> brush [label=""object""];
    place -> cupboard [label=""on""];
}","Command: Pick the brush from the dusty tv stand and place it on the clean cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    dusty -> tv_stand [label=""attribute""];
    clean -> cupboard [label=""attribute""];
    pick -> brush [label=""object""];
    pick -> tv_stand [label=""from""];
    place -> brush [label=""object""];
    place -> cupboard [label=""on""];
}"
"Command: Grab the square blunt hat from the closet and leave it on the pet bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    square -> hat [label=""attribute""];
    blunt -> hat [label=""attribute""];
    grab -> hat [label=""object""];
    grab -> closet [label=""from""];
    leave -> hat [label=""object""];
    leave -> pet_bed [label=""on""];
}","Command: Grab the square blunt hat from the closet and leave it on the pet bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    square -> hat [label=""attribute""];
    blunt -> hat [label=""attribute""];
    grab -> hat [label=""object""];
    grab -> closet [label=""from""];
    leave -> hat [label=""object""];
    leave -> pet_bed [label=""on""];
}"
"Command: Take the toy from the sofa and put it on the toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> toy [label=""object""];
    take -> sofa [label=""from""];
    put -> toy [label=""object""];
    put -> toolbox [label=""on""];
}","Command: Take the toy from the sofa and put it on the toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> toy [label=""object""];
    take -> sofa [label=""from""];
    put -> toy [label=""object""];
    put -> toolbox [label=""on""];
}"
"Command: Lift the towel from the bright toolbox and set it on the kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bright -> toolbox [label=""attribute""];
    lift -> towel [label=""object""];
    lift -> toolbox [label=""from""];
    set -> towel [label=""object""];
    set -> kitchen_island [label=""on""];
}","Command: Lift the towel from the bright toolbox and set it on the kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    bright -> toolbox [label=""attribute""];
    lift -> towel [label=""object""];
    lift -> toolbox [label=""from""];
    set -> towel [label=""object""];
    set -> kitchen_island [label=""on""];
}"
"Command: Take the controller from the cold microwave and put it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> microwave [label=""attribute""];
    take -> controller [label=""object""];
    take -> microwave [label=""from""];
    put -> controller [label=""object""];
    put -> pantry [label=""on""];
}","Command: Take the controller from the cold microwave and put it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> microwave [label=""attribute""];
    take -> controller [label=""object""];
    take -> microwave [label=""from""];
    put -> controller [label=""object""];
    put -> pantry [label=""on""];
}"
"Command: Pick the bracelet from the hanger and lay it on the tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    pick -> bracelet [label=""object""];
    pick -> hanger [label=""from""];
    lay -> bracelet [label=""object""];
    lay -> tv_cabinet [label=""on""];
}","Command: Pick the bracelet from the hanger and lay it on the tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    pick -> bracelet [label=""object""];
    pick -> hanger [label=""from""];
    lay -> bracelet [label=""object""];
    lay -> tv_cabinet [label=""on""];
}"
"Command: Lift the cracked keyboard from the wine rack and put it on the bright toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cracked -> keyboard [label=""attribute""];
    bright -> toilet [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> wine_rack [label=""from""];
    put -> keyboard [label=""object""];
    put -> toilet [label=""on""];
}","Command: Lift the cracked keyboard from the wine rack and put it on the bright toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cracked -> keyboard [label=""attribute""];
    bright -> toilet [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> wine_rack [label=""from""];
    put -> keyboard [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Lift the blunt bin from the bright dry step stool and lay it on the pet bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    blunt -> bin [label=""attribute""];
    bright -> step_stool [label=""attribute""];
    dry -> step_stool [label=""attribute""];
    lift -> bin [label=""object""];
    lift -> step_stool [label=""from""];
    lay -> bin [label=""object""];
    lay -> pet_bed [label=""on""];
}","Command: Lift the blunt bin from the bright dry step stool and lay it on the pet bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    blunt -> bin [label=""attribute""];
    bright -> step_stool [label=""attribute""];
    dry -> step_stool [label=""attribute""];
    lift -> bin [label=""object""];
    lift -> step_stool [label=""from""];
    lay -> bin [label=""object""];
    lay -> pet_bed [label=""on""];
}"
"Command: Lift the lego from the tv cabinet and put it on the wet vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wet -> vacuum_base [label=""attribute""];
    lift -> lego [label=""object""];
    lift -> tv_cabinet [label=""from""];
    put -> lego [label=""object""];
    put -> vacuum_base [label=""on""];
}","Command: Lift the lego from the tv cabinet and put it on the wet vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wet -> vacuum_base [label=""attribute""];
    lift -> lego [label=""object""];
    lift -> tv_cabinet [label=""from""];
    put -> lego [label=""object""];
    put -> vacuum_base [label=""on""];
}"
"Command: Take the toothbrush from the noisy wine rack and put it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> wine_rack [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> wine_rack [label=""from""];
    put -> toothbrush [label=""object""];
    put -> pantry [label=""on""];
}","Command: Take the toothbrush from the noisy wine rack and put it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    noisy -> wine_rack [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> wine_rack [label=""from""];
    put -> toothbrush [label=""object""];
    put -> pantry [label=""on""];
}"
"Command: Pick the clock from the dry shaving kit and lay it on the cold shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> shaving_kit [label=""attribute""];
    cold -> shoe_rack [label=""attribute""];
    pick -> clock [label=""object""];
    pick -> shaving_kit [label=""from""];
    lay -> clock [label=""object""];
    lay -> shoe_rack [label=""on""];
}","Command: Pick the clock from the dry shaving kit and lay it on the cold shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> shaving_kit [label=""attribute""];
    cold -> shoe_rack [label=""attribute""];
    pick -> clock [label=""object""];
    pick -> shaving_kit [label=""from""];
    lay -> clock [label=""object""];
    lay -> shoe_rack [label=""on""];
}"
"Command: Lift the mirror from the wooden bookshelf and lay it on the clean mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    wooden -> bookshelf [label=""attribute""];
    clean -> mini_fridge [label=""attribute""];
    lift -> mirror [label=""object""];
    lift -> bookshelf [label=""from""];
    lay -> mirror [label=""object""];
    lay -> mini_fridge [label=""on""];
}","Command: Lift the mirror from the wooden bookshelf and lay it on the clean mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> bookshelf [label=""attribute""];
    clean -> mini_fridge [label=""attribute""];
    lift -> mirror [label=""object""];
    lift -> bookshelf [label=""from""];
    lay -> mirror [label=""object""];
    lay -> mini_fridge [label=""on""];
}"
"Command: Pick the mug from the drawer and put it on the medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick -> mug [label=""object""];
    pick -> drawer [label=""from""];
    put -> mug [label=""object""];
    put -> medicine_cabinet [label=""on""];
}","Command: Pick the mug from the drawer and put it on the medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick -> mug [label=""object""];
    pick -> drawer [label=""from""];
    put -> mug [label=""object""];
    put -> medicine_cabinet [label=""on""];
}"
"Command: Lift the stapler from the hanger and lay it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> hanger [label=""from""];
    lay -> stapler [label=""object""];
    lay -> under_the_bed [label=""on""];
}","Command: Lift the stapler from the hanger and lay it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> stapler [label=""object""];
    lift -> hanger [label=""from""];
    lay -> stapler [label=""object""];
    lay -> under_the_bed [label=""on""];
}"
"Command: Pick the heavy round monitor from the bathtub and set it on the dark sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    heavy -> monitor [label=""attribute""];
    round -> monitor [label=""attribute""];
    dark -> sofa [label=""attribute""];
    pick -> monitor [label=""object""];
    pick -> bathtub [label=""from""];
    set -> monitor [label=""object""];
    set -> sofa [label=""on""];
}","Command: Pick the heavy round monitor from the bathtub and set it on the dark sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> monitor [label=""attribute""];
    round -> monitor [label=""attribute""];
    dark -> sofa [label=""attribute""];
    pick -> monitor [label=""object""];
    pick -> bathtub [label=""from""];
    set -> monitor [label=""object""];
    set -> sofa [label=""on""];
}"
"Command: Take the hard cable from the messy coat shelf and set it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> cable [label=""attribute""];
    messy -> coat_shelf [label=""attribute""];
    take -> cable [label=""object""];
    take -> coat_shelf [label=""from""];
    set -> cable [label=""object""];
    set -> wall_shelf [label=""on""];
}","Command: Take the hard cable from the messy coat shelf and set it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> cable [label=""attribute""];
    messy -> coat_shelf [label=""attribute""];
    take -> cable [label=""object""];
    take -> coat_shelf [label=""from""];
    set -> cable [label=""object""];
    set -> wall_shelf [label=""on""];
}"
"Command: Pick the fuzzy blunt shoe from the sofa and put it on the ottoman.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> shoe [label=""attribute""];
    blunt -> shoe [label=""attribute""];
    pick -> shoe [label=""object""];
    pick -> sofa [label=""from""];
    put -> shoe [label=""object""];
    put -> ottoman [label=""on""];
}","Command: Pick the fuzzy blunt shoe from the sofa and put it on the ottoman.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> shoe [label=""attribute""];
    blunt -> shoe [label=""attribute""];
    pick -> shoe [label=""object""];
    pick -> sofa [label=""from""];
    put -> shoe [label=""object""];
    put -> ottoman [label=""on""];
}"
"Command: Grab the square container from the wine rack and put it on the closed warm locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> container [label=""attribute""];
    closed -> locker [label=""attribute""];
    warm -> locker [label=""attribute""];
    grab -> container [label=""object""];
    grab -> wine_rack [label=""from""];
    put -> container [label=""object""];
    put -> locker [label=""on""];
}","Command: Grab the square container from the wine rack and put it on the closed warm locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> container [label=""attribute""];
    closed -> locker [label=""attribute""];
    warm -> locker [label=""attribute""];
    grab -> container [label=""object""];
    grab -> wine_rack [label=""from""];
    put -> container [label=""object""];
    put -> locker [label=""on""];
}"
"Command: Pick the coaster from the shaving kit and set it on the ceramic cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    ceramic -> cabinet [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> shaving_kit [label=""from""];
    set -> coaster [label=""object""];
    set -> cabinet [label=""on""];
}","Command: Pick the coaster from the shaving kit and set it on the ceramic cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    ceramic -> cabinet [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> shaving_kit [label=""from""];
    set -> coaster [label=""object""];
    set -> cabinet [label=""on""];
}"
"Command: Grab the glossy soft comb from the snack shelf and place it on the stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    glossy -> comb [label=""attribute""];
    soft -> comb [label=""attribute""];
    grab -> comb [label=""object""];
    grab -> snack_shelf [label=""from""];
    place -> comb [label=""object""];
    place -> stove [label=""on""];
}","Command: Grab the glossy soft comb from the snack shelf and place it on the stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    glossy -> comb [label=""attribute""];
    soft -> comb [label=""attribute""];
    grab -> comb [label=""object""];
    grab -> snack_shelf [label=""from""];
    place -> comb [label=""object""];
    place -> stove [label=""on""];
}"
"Command: Grab the pencil from the bookshelf and leave it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    grab -> pencil [label=""object""];
    grab -> bookshelf [label=""from""];
    leave -> pencil [label=""object""];
    leave -> snack_shelf [label=""on""];
}","Command: Grab the pencil from the bookshelf and leave it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    grab -> pencil [label=""object""];
    grab -> bookshelf [label=""from""];
    leave -> pencil [label=""object""];
    leave -> snack_shelf [label=""on""];
}"
"Command: Take the mouse from the heater and put it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mouse [label=""object""];
    take -> heater [label=""from""];
    put -> mouse [label=""object""];
    put -> wardrobe [label=""on""];
}","Command: Take the mouse from the heater and put it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mouse [label=""object""];
    take -> heater [label=""from""];
    put -> mouse [label=""object""];
    put -> wardrobe [label=""on""];
}"
"Command: Lift the fragile hard tie from the ceramic shaving kit and place it on the bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    fragile -> tie [label=""attribute""];
    hard -> tie [label=""attribute""];
    ceramic -> shaving_kit [label=""attribute""];
    lift -> tie [label=""object""];
    lift -> shaving_kit [label=""from""];
    place -> tie [label=""object""];
    place -> bread_box [label=""on""];
}","Command: Lift the fragile hard tie from the ceramic shaving kit and place it on the bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    fragile -> tie [label=""attribute""];
    hard -> tie [label=""attribute""];
    ceramic -> shaving_kit [label=""attribute""];
    lift -> tie [label=""object""];
    lift -> shaving_kit [label=""from""];
    place -> tie [label=""object""];
    place -> bread_box [label=""on""];
}"
"Command: Take the cap from the full microwave and put it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    full -> microwave [label=""attribute""];
    take -> cap [label=""object""];
    take -> microwave [label=""from""];
    put -> cap [label=""object""];
    put -> bathtub [label=""on""];
}","Command: Take the cap from the full microwave and put it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    full -> microwave [label=""attribute""];
    take -> cap [label=""object""];
    take -> microwave [label=""from""];
    put -> cap [label=""object""];
    put -> bathtub [label=""on""];
}"
"Command: Lift the smooth shiny necklace from the file cabinet and place it on the spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    smooth -> necklace [label=""attribute""];
    shiny -> necklace [label=""attribute""];
    lift -> necklace [label=""object""];
    lift -> file_cabinet [label=""from""];
    place -> necklace [label=""object""];
    place -> spice_rack [label=""on""];
}","Command: Lift the smooth shiny necklace from the file cabinet and place it on the spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    smooth -> necklace [label=""attribute""];
    shiny -> necklace [label=""attribute""];
    lift -> necklace [label=""object""];
    lift -> file_cabinet [label=""from""];
    place -> necklace [label=""object""];
    place -> spice_rack [label=""on""];
}"
"Command: Pick the clock from the bread box and place it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    pick -> clock [label=""object""];
    pick -> bread_box [label=""from""];
    place -> clock [label=""object""];
    place -> bathtub [label=""on""];
}","Command: Pick the clock from the bread box and place it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    pick -> clock [label=""object""];
    pick -> bread_box [label=""from""];
    place -> clock [label=""object""];
    place -> bathtub [label=""on""];
}"
"Command: Lift the fuzzy frame from the messy sink and set it on the sturdy dark corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    fuzzy -> frame [label=""attribute""];
    messy -> sink [label=""attribute""];
    sturdy -> corner [label=""attribute""];
    dark -> corner [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> sink [label=""from""];
    set -> frame [label=""object""];
    set -> corner [label=""on""];
}","Command: Lift the fuzzy frame from the messy sink and set it on the sturdy dark corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    fuzzy -> frame [label=""attribute""];
    messy -> sink [label=""attribute""];
    sturdy -> corner [label=""attribute""];
    dark -> corner [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> sink [label=""from""];
    set -> frame [label=""object""];
    set -> corner [label=""on""];
}"
"Command: Grab the can from the dusty full cupboard and lay it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    dusty -> cupboard [label=""attribute""];
    full -> cupboard [label=""attribute""];
    grab -> can [label=""object""];
    grab -> cupboard [label=""from""];
    lay -> can [label=""object""];
    lay -> wall_shelf [label=""on""];
}","Command: Grab the can from the dusty full cupboard and lay it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    dusty -> cupboard [label=""attribute""];
    full -> cupboard [label=""attribute""];
    grab -> can [label=""object""];
    grab -> cupboard [label=""from""];
    lay -> can [label=""object""];
    lay -> wall_shelf [label=""on""];
}"
"Command: Take the book from the wardrobe and set it on the window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    book [label=""book"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> book [label=""object""];
    take -> wardrobe [label=""from""];
    set -> book [label=""object""];
    set -> window_sill [label=""on""];
}","Command: Take the book from the wardrobe and set it on the window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    book [label=""book"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> book [label=""object""];
    take -> wardrobe [label=""from""];
    set -> book [label=""object""];
    set -> window_sill [label=""on""];
}"
"Command: Grab the belt from the noisy under the table and lay it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    noisy -> under_the_table [label=""attribute""];
    grab -> belt [label=""object""];
    grab -> under_the_table [label=""from""];
    lay -> belt [label=""object""];
    lay -> locker [label=""on""];
}","Command: Grab the belt from the noisy under the table and lay it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    noisy -> under_the_table [label=""attribute""];
    grab -> belt [label=""object""];
    grab -> under_the_table [label=""from""];
    lay -> belt [label=""object""];
    lay -> locker [label=""on""];
}"
"Command: Lift the smooth black mouse from the plant pot and leave it on the dry file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    smooth -> mouse [label=""attribute""];
    black -> mouse [label=""attribute""];
    dry -> file_cabinet [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> plant_pot [label=""from""];
    leave -> mouse [label=""object""];
    leave -> file_cabinet [label=""on""];
}","Command: Lift the smooth black mouse from the plant pot and leave it on the dry file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    smooth -> mouse [label=""attribute""];
    black -> mouse [label=""attribute""];
    dry -> file_cabinet [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> plant_pot [label=""from""];
    leave -> mouse [label=""object""];
    leave -> file_cabinet [label=""on""];
}"
"Command: Grab the soap from the open wet shaving kit and lay it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    wet -> shaving_kit [label=""attribute""];
    grab -> soap [label=""object""];
    grab -> shaving_kit [label=""from""];
    lay -> soap [label=""object""];
    lay -> on_the_radiator [label=""on""];
}","Command: Grab the soap from the open wet shaving kit and lay it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    wet -> shaving_kit [label=""attribute""];
    grab -> soap [label=""object""];
    grab -> shaving_kit [label=""from""];
    lay -> soap [label=""object""];
    lay -> on_the_radiator [label=""on""];
}"
"Command: Lift the green square ring from the narrow bread box and place it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    square -> ring [label=""attribute""];
    narrow -> bread_box [label=""attribute""];
    lift -> ring [label=""object""];
    lift -> bread_box [label=""from""];
    place -> ring [label=""object""];
    place -> above_the_fridge [label=""on""];
}","Command: Lift the green square ring from the narrow bread box and place it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    square -> ring [label=""attribute""];
    narrow -> bread_box [label=""attribute""];
    lift -> ring [label=""object""];
    lift -> bread_box [label=""from""];
    place -> ring [label=""object""];
    place -> above_the_fridge [label=""on""];
}"
"Command: Take the remote from the plant pot and place it on the oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    take -> remote [label=""object""];
    take -> plant_pot [label=""from""];
    place -> remote [label=""object""];
    place -> oven [label=""on""];
}","Command: Take the remote from the plant pot and place it on the oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> remote [label=""object""];
    take -> plant_pot [label=""from""];
    place -> remote [label=""object""];
    place -> oven [label=""on""];
}"
"Command: Lift the heavy frame from the empty shaving kit and put it on the garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    heavy -> frame [label=""attribute""];
    empty -> shaving_kit [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> shaving_kit [label=""from""];
    put -> frame [label=""object""];
    put -> garden_box [label=""on""];
}","Command: Lift the heavy frame from the empty shaving kit and put it on the garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> frame [label=""attribute""];
    empty -> shaving_kit [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> shaving_kit [label=""from""];
    put -> frame [label=""object""];
    put -> garden_box [label=""on""];
}"
"Command: Pick the smooth bag from the wine rack and set it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> bag [label=""object""];
    pick -> wine_rack [label=""from""];
    set -> bag [label=""object""];
    set -> under_the_table [label=""on""];
}","Command: Pick the smooth bag from the wine rack and set it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> bag [label=""object""];
    pick -> wine_rack [label=""from""];
    set -> bag [label=""object""];
    set -> under_the_table [label=""on""];
}"
"Command: Take the white soft letter from the dry nightstand and set it on the full dark toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> letter [label=""attribute""];
    soft -> letter [label=""attribute""];
    dry -> nightstand [label=""attribute""];
    full -> toiletry_shelf [label=""attribute""];
    dark -> toiletry_shelf [label=""attribute""];
    take -> letter [label=""object""];
    take -> nightstand [label=""from""];
    set -> letter [label=""object""];
    set -> toiletry_shelf [label=""on""];
}","Command: Take the white soft letter from the dry nightstand and set it on the full dark toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> letter [label=""attribute""];
    soft -> letter [label=""attribute""];
    dry -> nightstand [label=""attribute""];
    full -> toiletry_shelf [label=""attribute""];
    dark -> toiletry_shelf [label=""attribute""];
    take -> letter [label=""object""];
    take -> nightstand [label=""from""];
    set -> letter [label=""object""];
    set -> toiletry_shelf [label=""on""];
}"
"Command: Grab the book from the behind the curtain and leave it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    grab -> book [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    leave -> book [label=""object""];
    leave -> bookshelf_top [label=""on""];
}","Command: Grab the book from the behind the curtain and leave it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    grab -> book [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    leave -> book [label=""object""];
    leave -> bookshelf_top [label=""on""];
}"
"Command: Take the soft green pencil from the noisy desk drawer and leave it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> pencil [label=""attribute""];
    noisy -> desk_drawer [label=""attribute""];
    take -> pencil [label=""object""];
    take -> desk_drawer [label=""from""];
    leave -> pencil [label=""object""];
    leave -> beside_the_couch [label=""on""];
}","Command: Take the soft green pencil from the noisy desk drawer and leave it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> pencil [label=""attribute""];
    noisy -> desk_drawer [label=""attribute""];
    take -> pencil [label=""object""];
    take -> desk_drawer [label=""from""];
    leave -> pencil [label=""object""];
    leave -> beside_the_couch [label=""on""];
}"
"Command: Lift the blue square soap from the messy locker and put it on the dusty tidy wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blue -> soap [label=""attribute""];
    square -> soap [label=""attribute""];
    messy -> locker [label=""attribute""];
    dusty -> wall_hook [label=""attribute""];
    tidy -> wall_hook [label=""attribute""];
    lift -> soap [label=""object""];
    lift -> locker [label=""from""];
    put -> soap [label=""object""];
    put -> wall_hook [label=""on""];
}","Command: Lift the blue square soap from the messy locker and put it on the dusty tidy wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blue -> soap [label=""attribute""];
    square -> soap [label=""attribute""];
    messy -> locker [label=""attribute""];
    dusty -> wall_hook [label=""attribute""];
    tidy -> wall_hook [label=""attribute""];
    lift -> soap [label=""object""];
    lift -> locker [label=""from""];
    put -> soap [label=""object""];
    put -> wall_hook [label=""on""];
}"
"Command: Lift the boot from the vacuum base and place it on the full narrow first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    full -> first_aid_box [label=""attribute""];
    narrow -> first_aid_box [label=""attribute""];
    lift -> boot [label=""object""];
    lift -> vacuum_base [label=""from""];
    place -> boot [label=""object""];
    place -> first_aid_box [label=""on""];
}","Command: Lift the boot from the vacuum base and place it on the full narrow first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    full -> first_aid_box [label=""attribute""];
    narrow -> first_aid_box [label=""attribute""];
    lift -> boot [label=""object""];
    lift -> vacuum_base [label=""from""];
    place -> boot [label=""object""];
    place -> first_aid_box [label=""on""];
}"
"Command: Grab the fuzzy spoon from the tidy clean shaving kit and leave it on the hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    fuzzy -> spoon [label=""attribute""];
    tidy -> shaving_kit [label=""attribute""];
    clean -> shaving_kit [label=""attribute""];
    grab -> spoon [label=""object""];
    grab -> shaving_kit [label=""from""];
    leave -> spoon [label=""object""];
    leave -> hanger [label=""on""];
}","Command: Grab the fuzzy spoon from the tidy clean shaving kit and leave it on the hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    fuzzy -> spoon [label=""attribute""];
    tidy -> shaving_kit [label=""attribute""];
    clean -> shaving_kit [label=""attribute""];
    grab -> spoon [label=""object""];
    grab -> shaving_kit [label=""from""];
    leave -> spoon [label=""object""];
    leave -> hanger [label=""on""];
}"
"Command: Grab the sharp container from the mirror shelf and lay it on the closed empty cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    sharp -> container [label=""attribute""];
    closed -> cutlery_drawer [label=""attribute""];
    empty -> cutlery_drawer [label=""attribute""];
    grab -> container [label=""object""];
    grab -> mirror_shelf [label=""from""];
    lay -> container [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}","Command: Grab the sharp container from the mirror shelf and lay it on the closed empty cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    sharp -> container [label=""attribute""];
    closed -> cutlery_drawer [label=""attribute""];
    empty -> cutlery_drawer [label=""attribute""];
    grab -> container [label=""object""];
    grab -> mirror_shelf [label=""from""];
    lay -> container [label=""object""];
    lay -> cutlery_drawer [label=""on""];
}"
"Command: Grab the fuzzy smooth bottle opener from the sturdy messy oven and put it on the clean vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> bottle_opener [label=""attribute""];
    smooth -> bottle_opener [label=""attribute""];
    sturdy -> oven [label=""attribute""];
    messy -> oven [label=""attribute""];
    clean -> vacuum_base [label=""attribute""];
    grab -> bottle_opener [label=""object""];
    grab -> oven [label=""from""];
    put -> bottle_opener [label=""object""];
    put -> vacuum_base [label=""on""];
}","Command: Grab the fuzzy smooth bottle opener from the sturdy messy oven and put it on the clean vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> bottle_opener [label=""attribute""];
    smooth -> bottle_opener [label=""attribute""];
    sturdy -> oven [label=""attribute""];
    messy -> oven [label=""attribute""];
    clean -> vacuum_base [label=""attribute""];
    grab -> bottle_opener [label=""object""];
    grab -> oven [label=""from""];
    put -> bottle_opener [label=""object""];
    put -> vacuum_base [label=""on""];
}"
"Command: Pick the smooth puzzle from the hallway and lay it on the dry warm garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    smooth -> puzzle [label=""attribute""];
    dry -> garage [label=""attribute""];
    warm -> garage [label=""attribute""];
    pick -> puzzle [label=""object""];
    pick -> hallway [label=""from""];
    lay -> puzzle [label=""object""];
    lay -> garage [label=""on""];
}","Command: Pick the smooth puzzle from the hallway and lay it on the dry warm garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    smooth -> puzzle [label=""attribute""];
    dry -> garage [label=""attribute""];
    warm -> garage [label=""attribute""];
    pick -> puzzle [label=""object""];
    pick -> hallway [label=""from""];
    lay -> puzzle [label=""object""];
    lay -> garage [label=""on""];
}"
"Command: Pick the blunt white watch from the tidy dusty closet and set it on the open spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    blunt -> watch [label=""attribute""];
    white -> watch [label=""attribute""];
    tidy -> closet [label=""attribute""];
    dusty -> closet [label=""attribute""];
    open -> spice_rack [label=""attribute""];
    pick -> watch [label=""object""];
    pick -> closet [label=""from""];
    set -> watch [label=""object""];
    set -> spice_rack [label=""on""];
}","Command: Pick the blunt white watch from the tidy dusty closet and set it on the open spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    watch [label=""watch"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> watch [label=""attribute""];
    white -> watch [label=""attribute""];
    tidy -> closet [label=""attribute""];
    dusty -> closet [label=""attribute""];
    open -> spice_rack [label=""attribute""];
    pick -> watch [label=""object""];
    pick -> closet [label=""from""];
    set -> watch [label=""object""];
    set -> spice_rack [label=""on""];
}"
"Command: Lift the blue ball from the dark cold storage box and place it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    blue -> ball [label=""attribute""];
    dark -> storage_box [label=""attribute""];
    cold -> storage_box [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> storage_box [label=""from""];
    place -> ball [label=""object""];
    place -> floor [label=""on""];
}","Command: Lift the blue ball from the dark cold storage box and place it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    blue -> ball [label=""attribute""];
    dark -> storage_box [label=""attribute""];
    cold -> storage_box [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> storage_box [label=""from""];
    place -> ball [label=""object""];
    place -> floor [label=""on""];
}"
"Command: Grab the fuzzy box from the under the table and leave it on the hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    fuzzy -> box [label=""attribute""];
    grab -> box [label=""object""];
    grab -> under_the_table [label=""from""];
    leave -> box [label=""object""];
    leave -> hanger [label=""on""];
}","Command: Grab the fuzzy box from the under the table and leave it on the hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    box [label=""box"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    fuzzy -> box [label=""attribute""];
    grab -> box [label=""object""];
    grab -> under_the_table [label=""from""];
    leave -> box [label=""object""];
    leave -> hanger [label=""on""];
}"
"Command: Grab the broom from the stand and leave it on the ceramic heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    ceramic -> heater [label=""attribute""];
    grab -> broom [label=""object""];
    grab -> stand [label=""from""];
    leave -> broom [label=""object""];
    leave -> heater [label=""on""];
}","Command: Grab the broom from the stand and leave it on the ceramic heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    ceramic -> heater [label=""attribute""];
    grab -> broom [label=""object""];
    grab -> stand [label=""from""];
    leave -> broom [label=""object""];
    leave -> heater [label=""on""];
}"
"Command: Lift the heavy hard cup from the closed full garden box and leave it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    hard -> cup [label=""attribute""];
    closed -> garden_box [label=""attribute""];
    full -> garden_box [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> garden_box [label=""from""];
    leave -> cup [label=""object""];
    leave -> behind_the_curtain [label=""on""];
}","Command: Lift the heavy hard cup from the closed full garden box and leave it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    hard -> cup [label=""attribute""];
    full -> garden_box [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> garden_box [label=""from""];
    leave -> cup [label=""object""];
    leave -> behind_the_curtain [label=""on""];
}"
"Command: Lift the green white wallet from the desk and lay it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    green -> wallet [label=""attribute""];
    white -> wallet [label=""attribute""];
    lift -> wallet [label=""object""];
    lift -> desk [label=""from""];
    lay -> wallet [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Lift the green white wallet from the desk and lay it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    green -> wallet [label=""attribute""];
    white -> wallet [label=""attribute""];
    lift -> wallet [label=""object""];
    lift -> desk [label=""from""];
    lay -> wallet [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Grab the bill from the windowsill and put it on the cold dusty fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cold -> fridge [label=""attribute""];
    dusty -> fridge [label=""attribute""];
    grab -> bill [label=""object""];
    grab -> windowsill [label=""from""];
    put -> bill [label=""object""];
    put -> fridge [label=""on""];
}","Command: Grab the bill from the windowsill and put it on the cold dusty fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cold -> fridge [label=""attribute""];
    dusty -> fridge [label=""attribute""];
    grab -> bill [label=""object""];
    grab -> windowsill [label=""from""];
    put -> bill [label=""object""];
    put -> fridge [label=""on""];
}"
"Command: Pick the glass from the under the table and set it on the bookshelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick -> glass [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> glass [label=""object""];
    set -> bookshelf [label=""on""];
}","Command: Pick the glass from the under the table and set it on the bookshelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    pick -> glass [label=""object""];
    pick -> under_the_table [label=""from""];
    set -> glass [label=""object""];
    set -> bookshelf [label=""on""];
}"
"Command: Pick the soft can from the shelf and lay it on the empty dry heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    soft -> can [label=""attribute""];
    empty -> heater [label=""attribute""];
    dry -> heater [label=""attribute""];
    pick -> can [label=""object""];
    pick -> shelf [label=""from""];
    lay -> can [label=""object""];
    lay -> heater [label=""on""];
}","Command: Pick the soft can from the shelf and lay it on the empty dry heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    soft -> can [label=""attribute""];
    empty -> heater [label=""attribute""];
    dry -> heater [label=""attribute""];
    pick -> can [label=""object""];
    pick -> shelf [label=""from""];
    lay -> can [label=""object""];
    lay -> heater [label=""on""];
}"
"Command: Take the coaster from the floor and leave it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> coaster [label=""object""];
    take -> floor [label=""from""];
    leave -> coaster [label=""object""];
    leave -> armrest [label=""on""];
}","Command: Take the coaster from the floor and leave it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> coaster [label=""object""];
    take -> floor [label=""from""];
    leave -> coaster [label=""object""];
    leave -> armrest [label=""on""];
}"
"Command: Grab the mouse from the bright cold bookshelf top and leave it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    bright -> bookshelf_top [label=""attribute""];
    cold -> bookshelf_top [label=""attribute""];
    grab -> mouse [label=""object""];
    grab -> bookshelf_top [label=""from""];
    leave -> mouse [label=""object""];
    leave -> fish_tank [label=""on""];
}","Command: Grab the mouse from the bright cold bookshelf top and leave it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    bright -> bookshelf_top [label=""attribute""];
    cold -> bookshelf_top [label=""attribute""];
    grab -> mouse [label=""object""];
    grab -> bookshelf_top [label=""from""];
    leave -> mouse [label=""object""];
    leave -> fish_tank [label=""on""];
}"
"Command: Take the red soft knife from the cupboard and lay it on the clean closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> knife [label=""attribute""];
    soft -> knife [label=""attribute""];
    clean -> closet [label=""attribute""];
    take -> knife [label=""object""];
    take -> cupboard [label=""from""];
    lay -> knife [label=""object""];
    lay -> closet [label=""on""];
}","Command: Take the red soft knife from the cupboard and lay it on the clean closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> knife [label=""attribute""];
    soft -> knife [label=""attribute""];
    clean -> closet [label=""attribute""];
    take -> knife [label=""object""];
    take -> cupboard [label=""from""];
    lay -> knife [label=""object""];
    lay -> closet [label=""on""];
}"
"Command: Take the pencil from the shoe rack and place it on the clean closed stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    clean -> stove [label=""attribute""];
    closed -> stove [label=""attribute""];
    take -> pencil [label=""object""];
    take -> shoe_rack [label=""from""];
    place -> pencil [label=""object""];
    place -> stove [label=""on""];
}","Command: Take the pencil from the shoe rack and place it on the clean closed stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    pencil [label=""pencil"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    clean -> stove [label=""attribute""];
    closed -> stove [label=""attribute""];
    take -> pencil [label=""object""];
    take -> shoe_rack [label=""from""];
    place -> pencil [label=""object""];
    place -> stove [label=""on""];
}"
"Command: Pick the sharp hammer from the kitchen drawer and place it on the sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    sharp -> hammer [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> kitchen_drawer [label=""from""];
    place -> hammer [label=""object""];
    place -> sink [label=""on""];
}","Command: Pick the sharp hammer from the kitchen drawer and place it on the sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    sharp -> hammer [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> kitchen_drawer [label=""from""];
    place -> hammer [label=""object""];
    place -> sink [label=""on""];
}"
"Command: Pick the smooth bill from the cold warm table and leave it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    smooth -> bill [label=""attribute""];
    cold -> table [label=""attribute""];
    warm -> table [label=""attribute""];
    pick -> bill [label=""object""];
    pick -> table [label=""from""];
    leave -> bill [label=""object""];
    leave -> window_ledge [label=""on""];
}","Command: Pick the smooth bill from the cold warm table and leave it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    smooth -> bill [label=""attribute""];
    cold -> table [label=""attribute""];
    warm -> table [label=""attribute""];
    pick -> bill [label=""object""];
    pick -> table [label=""from""];
    leave -> bill [label=""object""];
    leave -> window_ledge [label=""on""];
}"
"Command: Lift the red headphones from the on the radiator and place it on the dusty closed shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    red -> headphones [label=""attribute""];
    dusty -> shoe_rack [label=""attribute""];
    closed -> shoe_rack [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> on_the_radiator [label=""from""];
    place -> headphones [label=""object""];
    place -> shoe_rack [label=""on""];
}","Command: Lift the red headphones from the on the radiator and place it on the dusty closed shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    red -> headphones [label=""attribute""];
    dusty -> shoe_rack [label=""attribute""];
    closed -> shoe_rack [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> on_the_radiator [label=""from""];
    place -> headphones [label=""object""];
    place -> shoe_rack [label=""on""];
}"
"Command: Lift the monitor from the messy wooden table and place it on the basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    messy -> table [label=""attribute""];
    wooden -> table [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> table [label=""from""];
    place -> monitor [label=""object""];
    place -> basket [label=""on""];
}","Command: Lift the monitor from the messy wooden table and place it on the basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    messy -> table [label=""attribute""];
    wooden -> table [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> table [label=""from""];
    place -> monitor [label=""object""];
    place -> basket [label=""on""];
}"
"Command: Pick the heavy container from the open dark table and leave it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    open -> table [label=""attribute""];
    dark -> table [label=""attribute""];
    pick -> container [label=""object""];
    pick -> table [label=""from""];
    leave -> container [label=""object""];
    leave -> beside_the_couch [label=""on""];
}","Command: Pick the heavy container from the open dark table and leave it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dark -> table [label=""attribute""];
    pick -> container [label=""object""];
    pick -> table [label=""from""];
    leave -> container [label=""object""];
    leave -> beside_the_couch [label=""on""];
}"
"Command: Lift the light cracked container from the cupboard and set it on the ceramic noisy dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    light -> container [label=""attribute""];
    cracked -> container [label=""attribute""];
    ceramic -> dryer [label=""attribute""];
    noisy -> dryer [label=""attribute""];
    lift -> container [label=""object""];
    lift -> cupboard [label=""from""];
    set -> container [label=""object""];
    set -> dryer [label=""on""];
}","Command: Lift the light cracked container from the cupboard and set it on the ceramic noisy dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    light -> container [label=""attribute""];
    cracked -> container [label=""attribute""];
    ceramic -> dryer [label=""attribute""];
    noisy -> dryer [label=""attribute""];
    lift -> container [label=""object""];
    lift -> cupboard [label=""from""];
    set -> container [label=""object""];
    set -> dryer [label=""on""];
}"
"Command: Lift the green monitor from the storage box and place it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    green -> monitor [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> storage_box [label=""from""];
    place -> monitor [label=""object""];
    place -> drawer [label=""on""];
}","Command: Lift the green monitor from the storage box and place it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    green -> monitor [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> storage_box [label=""from""];
    place -> monitor [label=""object""];
    place -> drawer [label=""on""];
}"
"Command: Grab the square heavy marker from the dusty warm snack shelf and leave it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    heavy -> marker [label=""attribute""];
    dusty -> snack_shelf [label=""attribute""];
    warm -> snack_shelf [label=""attribute""];
    grab -> marker [label=""object""];
    grab -> snack_shelf [label=""from""];
    leave -> marker [label=""object""];
    leave -> next_to_the_lamp [label=""on""];
}","Command: Grab the square heavy marker from the dusty warm snack shelf and leave it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    dusty -> snack_shelf [label=""attribute""];
    warm -> snack_shelf [label=""attribute""];
    grab -> marker [label=""object""];
    grab -> snack_shelf [label=""from""];
    leave -> marker [label=""object""];
    leave -> next_to_the_lamp [label=""on""];
}"
"Command: Take the green heavy wallet from the dark corner and put it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    green -> wallet [label=""attribute""];
    heavy -> wallet [label=""attribute""];
    dark -> corner [label=""attribute""];
    take -> wallet [label=""object""];
    take -> corner [label=""from""];
    put -> wallet [label=""object""];
    put -> toiletry_shelf [label=""on""];
}","Command: Take the green heavy wallet from the dark corner and put it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    heavy -> wallet [label=""attribute""];
    dark -> corner [label=""attribute""];
    take -> wallet [label=""object""];
    take -> corner [label=""from""];
    put -> wallet [label=""object""];
    put -> toiletry_shelf [label=""on""];
}"
"Command: Pick the jacket from the stove and leave it on the shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    pick -> jacket [label=""object""];
    pick -> stove [label=""from""];
    leave -> jacket [label=""object""];
    leave -> shoe_rack [label=""on""];
}","Command: Pick the jacket from the stove and leave it on the shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    pick -> jacket [label=""object""];
    pick -> stove [label=""from""];
    leave -> jacket [label=""object""];
    leave -> shoe_rack [label=""on""];
}"
"Command: Take the smooth fuzzy clock from the drawer and lay it on the bright coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> clock [label=""attribute""];
    fuzzy -> clock [label=""attribute""];
    bright -> coat_shelf [label=""attribute""];
    take -> clock [label=""object""];
    take -> drawer [label=""from""];
    lay -> clock [label=""object""];
    lay -> coat_shelf [label=""on""];
}","Command: Take the smooth fuzzy clock from the drawer and lay it on the bright coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> clock [label=""attribute""];
    fuzzy -> clock [label=""attribute""];
    bright -> coat_shelf [label=""attribute""];
    take -> clock [label=""object""];
    take -> drawer [label=""from""];
    lay -> clock [label=""object""];
    lay -> coat_shelf [label=""on""];
}"
"Command: Grab the comb from the garage and lay it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    grab -> comb [label=""object""];
    grab -> garage [label=""from""];
    lay -> comb [label=""object""];
    lay -> window_ledge [label=""on""];
}","Command: Grab the comb from the garage and lay it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    grab -> comb [label=""object""];
    grab -> garage [label=""from""];
    lay -> comb [label=""object""];
    lay -> window_ledge [label=""on""];
}"
"Command: Pick the gamepad from the trash can and set it on the full plastic spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    full -> spice_rack [label=""attribute""];
    plastic -> spice_rack [label=""attribute""];
    pick -> gamepad [label=""object""];
    pick -> trash_can [label=""from""];
    set -> gamepad [label=""object""];
    set -> spice_rack [label=""on""];
}","Command: Pick the gamepad from the trash can and set it on the full plastic spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    full -> spice_rack [label=""attribute""];
    plastic -> spice_rack [label=""attribute""];
    pick -> gamepad [label=""object""];
    pick -> trash_can [label=""from""];
    set -> gamepad [label=""object""];
    set -> spice_rack [label=""on""];
}"
"Command: Pick the round square plant from the bed and lay it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    square -> plant [label=""attribute""];
    pick -> plant [label=""object""];
    pick -> bed [label=""from""];
    lay -> plant [label=""object""];
    lay -> on_the_radiator [label=""on""];
}","Command: Pick the round square plant from the bed and lay it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    round -> plant [label=""attribute""];
    square -> plant [label=""attribute""];
    pick -> plant [label=""object""];
    pick -> bed [label=""from""];
    lay -> plant [label=""object""];
    lay -> on_the_radiator [label=""on""];
}"
"Command: Take the green sharp envelope from the closed fruit bowl and set it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> envelope [label=""attribute""];
    sharp -> envelope [label=""attribute""];
    closed -> fruit_bowl [label=""attribute""];
    take -> envelope [label=""object""];
    take -> fruit_bowl [label=""from""];
    set -> envelope [label=""object""];
    set -> coat_rack [label=""on""];
}","Command: Take the green sharp envelope from the closed fruit bowl and set it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> envelope [label=""attribute""];
    sharp -> envelope [label=""attribute""];
    closed -> fruit_bowl [label=""attribute""];
    take -> envelope [label=""object""];
    take -> fruit_bowl [label=""from""];
    set -> envelope [label=""object""];
    set -> coat_rack [label=""on""];
}"
"Command: Lift the red fragile tool from the sturdy empty oven and put it on the empty wooden kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> tool [label=""attribute""];
    fragile -> tool [label=""attribute""];
    sturdy -> oven [label=""attribute""];
    empty -> oven [label=""attribute""];
    empty -> kitchen_drawer [label=""attribute""];
    wooden -> kitchen_drawer [label=""attribute""];
    lift -> tool [label=""object""];
    lift -> oven [label=""from""];
    put -> tool [label=""object""];
    put -> kitchen_drawer [label=""on""];
}","Command: Lift the red fragile tool from the sturdy empty oven and put it on the empty wooden kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> tool [label=""attribute""];
    fragile -> tool [label=""attribute""];
    sturdy -> oven [label=""attribute""];
    empty -> oven [label=""attribute""];
    wooden -> kitchen_drawer [label=""attribute""];
    lift -> tool [label=""object""];
    lift -> oven [label=""from""];
    put -> tool [label=""object""];
    put -> kitchen_drawer [label=""on""];
}"
"Command: Pick the light hard spoon from the empty coffee table and leave it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hard -> spoon [label=""attribute""];
    empty -> coffee_table [label=""attribute""];
    pick -> spoon [label=""object""];
    pick -> coffee_table [label=""from""];
    leave -> spoon [label=""object""];
    leave -> above_the_fridge [label=""on""];
}","Command: Pick the light hard spoon from the empty coffee table and leave it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hard -> spoon [label=""attribute""];
    pick -> spoon [label=""object""];
    pick -> coffee_table [label=""from""];
    leave -> spoon [label=""object""];
    leave -> above_the_fridge [label=""on""];
}"
"Command: Lift the blue glossy sneaker from the narrow file cabinet and set it on the bright mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> sneaker [label=""attribute""];
    glossy -> sneaker [label=""attribute""];
    narrow -> file_cabinet [label=""attribute""];
    bright -> mirror_shelf [label=""attribute""];
    lift -> sneaker [label=""object""];
    lift -> file_cabinet [label=""from""];
    set -> sneaker [label=""object""];
    set -> mirror_shelf [label=""on""];
}","Command: Lift the blue glossy sneaker from the narrow file cabinet and set it on the bright mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> sneaker [label=""attribute""];
    glossy -> sneaker [label=""attribute""];
    narrow -> file_cabinet [label=""attribute""];
    bright -> mirror_shelf [label=""attribute""];
    lift -> sneaker [label=""object""];
    lift -> file_cabinet [label=""from""];
    set -> sneaker [label=""object""];
    set -> mirror_shelf [label=""on""];
}"
"Command: Grab the ring from the fruit bowl and place it on the closed garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> garden_box [label=""attribute""];
    grab -> ring [label=""object""];
    grab -> fruit_bowl [label=""from""];
    place -> ring [label=""object""];
    place -> garden_box [label=""on""];
}","Command: Grab the ring from the fruit bowl and place it on the closed garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> garden_box [label=""attribute""];
    grab -> ring [label=""object""];
    grab -> fruit_bowl [label=""from""];
    place -> ring [label=""object""];
    place -> garden_box [label=""on""];
}"
"Command: Grab the hat from the dusty terrace table and set it on the wet recycling bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    dusty -> terrace_table [label=""attribute""];
    wet -> recycling_bin [label=""attribute""];
    grab -> hat [label=""object""];
    grab -> terrace_table [label=""from""];
    set -> hat [label=""object""];
    set -> recycling_bin [label=""on""];
}","Command: Grab the hat from the dusty terrace table and set it on the wet recycling bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    dusty -> terrace_table [label=""attribute""];
    wet -> recycling_bin [label=""attribute""];
    grab -> hat [label=""object""];
    grab -> terrace_table [label=""from""];
    set -> hat [label=""object""];
    set -> recycling_bin [label=""on""];
}"
"Command: Pick the round towel from the dusty under the bed and lay it on the corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    round -> towel [label=""attribute""];
    dusty -> under_the_bed [label=""attribute""];
    pick -> towel [label=""object""];
    pick -> under_the_bed [label=""from""];
    lay -> towel [label=""object""];
    lay -> corner [label=""on""];
}","Command: Pick the round towel from the dusty under the bed and lay it on the corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    round -> towel [label=""attribute""];
    dusty -> under_the_bed [label=""attribute""];
    pick -> towel [label=""object""];
    pick -> under_the_bed [label=""from""];
    lay -> towel [label=""object""];
    lay -> corner [label=""on""];
}"
"Command: Grab the light sharp toothbrush from the dry mini fridge and set it on the entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    light -> toothbrush [label=""attribute""];
    sharp -> toothbrush [label=""attribute""];
    dry -> mini_fridge [label=""attribute""];
    grab -> toothbrush [label=""object""];
    grab -> mini_fridge [label=""from""];
    set -> toothbrush [label=""object""];
    set -> entrance [label=""on""];
}","Command: Grab the light sharp toothbrush from the dry mini fridge and set it on the entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    light -> toothbrush [label=""attribute""];
    sharp -> toothbrush [label=""attribute""];
    dry -> mini_fridge [label=""attribute""];
    grab -> toothbrush [label=""object""];
    grab -> mini_fridge [label=""from""];
    set -> toothbrush [label=""object""];
    set -> entrance [label=""on""];
}"
"Command: Grab the square cracked helmet from the wooden noisy kitchen island and place it on the full dusty trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    square -> helmet [label=""attribute""];
    cracked -> helmet [label=""attribute""];
    wooden -> kitchen_island [label=""attribute""];
    noisy -> kitchen_island [label=""attribute""];
    full -> trash_can [label=""attribute""];
    dusty -> trash_can [label=""attribute""];
    grab -> helmet [label=""object""];
    grab -> kitchen_island [label=""from""];
    place -> helmet [label=""object""];
    place -> trash_can [label=""on""];
}","Command: Grab the square cracked helmet from the wooden noisy kitchen island and place it on the full dusty trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> helmet [label=""attribute""];
    cracked -> helmet [label=""attribute""];
    wooden -> kitchen_island [label=""attribute""];
    noisy -> kitchen_island [label=""attribute""];
    full -> trash_can [label=""attribute""];
    dusty -> trash_can [label=""attribute""];
    grab -> helmet [label=""object""];
    grab -> kitchen_island [label=""from""];
    place -> helmet [label=""object""];
    place -> trash_can [label=""on""];
}"
"Command: Take the sweater from the radiator and place it on the tidy first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> first_aid_box [label=""attribute""];
    take -> sweater [label=""object""];
    take -> radiator [label=""from""];
    place -> sweater [label=""object""];
    place -> first_aid_box [label=""on""];
}","Command: Take the sweater from the radiator and place it on the tidy first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> first_aid_box [label=""attribute""];
    take -> sweater [label=""object""];
    take -> radiator [label=""from""];
    place -> sweater [label=""object""];
    place -> first_aid_box [label=""on""];
}"
"Command: Grab the round white bowl from the desk drawer and put it on the fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> bowl [label=""attribute""];
    white -> bowl [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> desk_drawer [label=""from""];
    put -> bowl [label=""object""];
    put -> fruit_bowl [label=""on""];
}","Command: Grab the round white bowl from the desk drawer and put it on the fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> bowl [label=""attribute""];
    white -> bowl [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> desk_drawer [label=""from""];
    put -> bowl [label=""object""];
    put -> fruit_bowl [label=""on""];
}"
"Command: Lift the green red bat from the above the fridge and leave it on the magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    green -> bat [label=""attribute""];
    red -> bat [label=""attribute""];
    lift -> bat [label=""object""];
    lift -> above_the_fridge [label=""from""];
    leave -> bat [label=""object""];
    leave -> magazine_rack [label=""on""];
}","Command: Lift the green red bat from the above the fridge and leave it on the magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    green -> bat [label=""attribute""];
    red -> bat [label=""attribute""];
    lift -> bat [label=""object""];
    lift -> above_the_fridge [label=""from""];
    leave -> bat [label=""object""];
    leave -> magazine_rack [label=""on""];
}"
"Command: Lift the vase from the full fridge door and put it on the stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    full -> fridge_door [label=""attribute""];
    lift -> vase [label=""object""];
    lift -> fridge_door [label=""from""];
    put -> vase [label=""object""];
    put -> stand [label=""on""];
}","Command: Lift the vase from the full fridge door and put it on the stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    full -> fridge_door [label=""attribute""];
    lift -> vase [label=""object""];
    lift -> fridge_door [label=""from""];
    put -> vase [label=""object""];
    put -> stand [label=""on""];
}"
"Command: Grab the tie from the dark noisy nightstand and place it on the empty bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dark -> nightstand [label=""attribute""];
    noisy -> nightstand [label=""attribute""];
    empty -> bench [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> nightstand [label=""from""];
    place -> tie [label=""object""];
    place -> bench [label=""on""];
}","Command: Grab the tie from the dark noisy nightstand and place it on the empty bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dark -> nightstand [label=""attribute""];
    noisy -> nightstand [label=""attribute""];
    empty -> bench [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> nightstand [label=""from""];
    place -> tie [label=""object""];
    place -> bench [label=""on""];
}"
"Command: Pick the sock from the table and lay it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> table [label=""from""];
    lay -> sock [label=""object""];
    lay -> on_the_radiator [label=""on""];
}","Command: Pick the sock from the table and lay it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> table [label=""from""];
    lay -> sock [label=""object""];
    lay -> on_the_radiator [label=""on""];
}"
"Command: Take the green towel from the bread box and lay it on the tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> towel [label=""attribute""];
    take -> towel [label=""object""];
    take -> bread_box [label=""from""];
    lay -> towel [label=""object""];
    lay -> tv_stand [label=""on""];
}","Command: Take the green towel from the bread box and lay it on the tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    green -> towel [label=""attribute""];
    take -> towel [label=""object""];
    take -> bread_box [label=""from""];
    lay -> towel [label=""object""];
    lay -> tv_stand [label=""on""];
}"
"Command: Take the white blue toothbrush from the tv stand and leave it on the noisy open wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> toothbrush [label=""attribute""];
    blue -> toothbrush [label=""attribute""];
    noisy -> wall_shelf [label=""attribute""];
    open -> wall_shelf [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> tv_stand [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> wall_shelf [label=""on""];
}","Command: Take the white blue toothbrush from the tv stand and leave it on the noisy open wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> toothbrush [label=""attribute""];
    blue -> toothbrush [label=""attribute""];
    noisy -> wall_shelf [label=""attribute""];
    open -> wall_shelf [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> tv_stand [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> wall_shelf [label=""on""];
}"
"Command: Take the glossy hat from the bright full medicine cabinet and put it on the open wooden tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> hat [label=""attribute""];
    bright -> medicine_cabinet [label=""attribute""];
    full -> medicine_cabinet [label=""attribute""];
    open -> tool_rack [label=""attribute""];
    wooden -> tool_rack [label=""attribute""];
    take -> hat [label=""object""];
    take -> medicine_cabinet [label=""from""];
    put -> hat [label=""object""];
    put -> tool_rack [label=""on""];
}","Command: Take the glossy hat from the bright full medicine cabinet and put it on the open wooden tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> hat [label=""attribute""];
    bright -> medicine_cabinet [label=""attribute""];
    full -> medicine_cabinet [label=""attribute""];
    open -> tool_rack [label=""attribute""];
    wooden -> tool_rack [label=""attribute""];
    take -> hat [label=""object""];
    take -> medicine_cabinet [label=""from""];
    put -> hat [label=""object""];
    put -> tool_rack [label=""on""];
}"
"Command: Lift the slipper from the fridge and place it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    lift -> slipper [label=""object""];
    lift -> fridge [label=""from""];
    place -> slipper [label=""object""];
    place -> pantry [label=""on""];
}","Command: Lift the slipper from the fridge and place it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    lift -> slipper [label=""object""];
    lift -> fridge [label=""from""];
    place -> slipper [label=""object""];
    place -> pantry [label=""on""];
}"
"Command: Take the towel from the closed bookshelf top and place it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> towel [label=""object""];
    take -> bookshelf_top [label=""from""];
    place -> towel [label=""object""];
    place -> next_to_the_lamp [label=""on""];
}","Command: Take the towel from the closed bookshelf top and place it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bookshelf_top [label=""from""];
    place -> towel [label=""object""];
    place -> next_to_the_lamp [label=""on""];
}"
"Command: Take the red smooth phone from the vacuum base and put it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> phone [label=""attribute""];
    smooth -> phone [label=""attribute""];
    take -> phone [label=""object""];
    take -> vacuum_base [label=""from""];
    put -> phone [label=""object""];
    put -> shaving_kit [label=""on""];
}","Command: Take the red smooth phone from the vacuum base and put it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> phone [label=""attribute""];
    smooth -> phone [label=""attribute""];
    take -> phone [label=""object""];
    take -> vacuum_base [label=""from""];
    put -> phone [label=""object""];
    put -> shaving_kit [label=""on""];
}"
"Command: Grab the pillow from the recycling bin and place it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    grab -> pillow [label=""object""];
    grab -> recycling_bin [label=""from""];
    place -> pillow [label=""object""];
    place -> makeup_bag [label=""on""];
}","Command: Grab the pillow from the recycling bin and place it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    grab -> pillow [label=""object""];
    grab -> recycling_bin [label=""from""];
    place -> pillow [label=""object""];
    place -> makeup_bag [label=""on""];
}"
"Command: Take the fuzzy heavy toothbrush from the dusty dry on the radiator and set it on the wet safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    fuzzy -> toothbrush [label=""attribute""];
    heavy -> toothbrush [label=""attribute""];
    dusty -> on_the_radiator [label=""attribute""];
    dry -> on_the_radiator [label=""attribute""];
    wet -> safe [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> on_the_radiator [label=""from""];
    set -> toothbrush [label=""object""];
    set -> safe [label=""on""];
}","Command: Take the fuzzy heavy toothbrush from the dusty dry on the radiator and set it on the wet safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> toothbrush [label=""attribute""];
    heavy -> toothbrush [label=""attribute""];
    dusty -> on_the_radiator [label=""attribute""];
    dry -> on_the_radiator [label=""attribute""];
    wet -> safe [label=""attribute""];
    take -> toothbrush [label=""object""];
    take -> on_the_radiator [label=""from""];
    set -> toothbrush [label=""object""];
    set -> safe [label=""on""];
}"
"Command: Take the soft shiny speaker from the coffee table and place it on the narrow wooden side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    soft -> speaker [label=""attribute""];
    shiny -> speaker [label=""attribute""];
    narrow -> side_table [label=""attribute""];
    wooden -> side_table [label=""attribute""];
    take -> speaker [label=""object""];
    take -> coffee_table [label=""from""];
    place -> speaker [label=""object""];
    place -> side_table [label=""on""];
}","Command: Take the soft shiny speaker from the coffee table and place it on the narrow wooden side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    soft -> speaker [label=""attribute""];
    shiny -> speaker [label=""attribute""];
    narrow -> side_table [label=""attribute""];
    wooden -> side_table [label=""attribute""];
    take -> speaker [label=""object""];
    take -> coffee_table [label=""from""];
    place -> speaker [label=""object""];
    place -> side_table [label=""on""];
}"
"Command: Lift the letter from the cutlery drawer and place it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    lift -> letter [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    place -> letter [label=""object""];
    place -> snack_shelf [label=""on""];
}","Command: Lift the letter from the cutlery drawer and place it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    lift -> letter [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    place -> letter [label=""object""];
    place -> snack_shelf [label=""on""];
}"
"Command: Take the heavy envelope from the tidy storage box and leave it on the terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> envelope [label=""attribute""];
    tidy -> storage_box [label=""attribute""];
    take -> envelope [label=""object""];
    take -> storage_box [label=""from""];
    leave -> envelope [label=""object""];
    leave -> terrace_table [label=""on""];
}","Command: Take the heavy envelope from the tidy storage box and leave it on the terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> envelope [label=""attribute""];
    tidy -> storage_box [label=""attribute""];
    take -> envelope [label=""object""];
    take -> storage_box [label=""from""];
    leave -> envelope [label=""object""];
    leave -> terrace_table [label=""on""];
}"
"Command: Lift the scissors from the shoe rack and leave it on the recycling bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    lift -> scissors [label=""object""];
    lift -> shoe_rack [label=""from""];
    leave -> scissors [label=""object""];
    leave -> recycling_bin [label=""on""];
}","Command: Lift the scissors from the shoe rack and leave it on the recycling bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    lift -> scissors [label=""object""];
    lift -> shoe_rack [label=""from""];
    leave -> scissors [label=""object""];
    leave -> recycling_bin [label=""on""];
}"
"Command: Take the heavy tissue from the narrow bench and set it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    heavy -> tissue [label=""attribute""];
    narrow -> bench [label=""attribute""];
    take -> tissue [label=""object""];
    take -> bench [label=""from""];
    set -> tissue [label=""object""];
    set -> shelf [label=""on""];
}","Command: Take the heavy tissue from the narrow bench and set it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    heavy -> tissue [label=""attribute""];
    narrow -> bench [label=""attribute""];
    take -> tissue [label=""object""];
    take -> bench [label=""from""];
    set -> tissue [label=""object""];
    set -> shelf [label=""on""];
}"
"Command: Lift the thermos from the warm dry hallway and lay it on the open coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    warm -> hallway [label=""attribute""];
    dry -> hallway [label=""attribute""];
    open -> coat_shelf [label=""attribute""];
    lift -> thermos [label=""object""];
    lift -> hallway [label=""from""];
    lay -> thermos [label=""object""];
    lay -> coat_shelf [label=""on""];
}","Command: Lift the thermos from the warm dry hallway and lay it on the open coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    warm -> hallway [label=""attribute""];
    dry -> hallway [label=""attribute""];
    open -> coat_shelf [label=""attribute""];
    lift -> thermos [label=""object""];
    lift -> hallway [label=""from""];
    lay -> thermos [label=""object""];
    lay -> coat_shelf [label=""on""];
}"
"Command: Lift the green toothbrush from the snack shelf and leave it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    green -> toothbrush [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> snack_shelf [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Lift the green toothbrush from the snack shelf and leave it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    green -> toothbrush [label=""attribute""];
    lift -> toothbrush [label=""object""];
    lift -> snack_shelf [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Lift the cracked bottle from the wine rack and place it on the messy bright storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    cracked -> bottle [label=""attribute""];
    messy -> storage_box [label=""attribute""];
    bright -> storage_box [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> wine_rack [label=""from""];
    place -> bottle [label=""object""];
    place -> storage_box [label=""on""];
}","Command: Lift the cracked bottle from the wine rack and place it on the messy bright storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    cracked -> bottle [label=""attribute""];
    messy -> storage_box [label=""attribute""];
    bright -> storage_box [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> wine_rack [label=""from""];
    place -> bottle [label=""object""];
    place -> storage_box [label=""on""];
}"
"Command: Take the sharp smooth book from the warm bright safe and put it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> book [label=""attribute""];
    smooth -> book [label=""attribute""];
    warm -> safe [label=""attribute""];
    bright -> safe [label=""attribute""];
    take -> book [label=""object""];
    take -> safe [label=""from""];
    put -> book [label=""object""];
    put -> bed [label=""on""];
}","Command: Take the sharp smooth book from the warm bright safe and put it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> book [label=""attribute""];
    smooth -> book [label=""attribute""];
    warm -> safe [label=""attribute""];
    bright -> safe [label=""attribute""];
    take -> book [label=""object""];
    take -> safe [label=""from""];
    put -> book [label=""object""];
    put -> bed [label=""on""];
}"
"Command: Pick the brush from the bin and place it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    pick -> brush [label=""object""];
    pick -> bin [label=""from""];
    place -> brush [label=""object""];
    place -> toilet [label=""on""];
}","Command: Pick the brush from the bin and place it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    pick -> brush [label=""object""];
    pick -> bin [label=""from""];
    place -> brush [label=""object""];
    place -> toilet [label=""on""];
}"
"Command: Pick the white ring from the wardrobe and set it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    white -> ring [label=""attribute""];
    pick -> ring [label=""object""];
    pick -> wardrobe [label=""from""];
    set -> ring [label=""object""];
    set -> toiletry_shelf [label=""on""];
}","Command: Pick the white ring from the wardrobe and set it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    white -> ring [label=""attribute""];
    pick -> ring [label=""object""];
    pick -> wardrobe [label=""from""];
    set -> ring [label=""object""];
    set -> toiletry_shelf [label=""on""];
}"
"Command: Pick the magazine from the narrow hallway and lay it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> hallway [label=""attribute""];
    pick -> magazine [label=""object""];
    pick -> hallway [label=""from""];
    lay -> magazine [label=""object""];
    lay -> laundry_machine [label=""on""];
}","Command: Pick the magazine from the narrow hallway and lay it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> hallway [label=""attribute""];
    pick -> magazine [label=""object""];
    pick -> hallway [label=""from""];
    lay -> magazine [label=""object""];
    lay -> laundry_machine [label=""on""];
}"
"Command: Lift the matte hard mirror from the bright radiator and place it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    matte -> mirror [label=""attribute""];
    hard -> mirror [label=""attribute""];
    bright -> radiator [label=""attribute""];
    lift -> mirror [label=""object""];
    lift -> radiator [label=""from""];
    place -> mirror [label=""object""];
    place -> coffee_table [label=""on""];
}","Command: Lift the matte hard mirror from the bright radiator and place it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    matte -> mirror [label=""attribute""];
    hard -> mirror [label=""attribute""];
    bright -> radiator [label=""attribute""];
    lift -> mirror [label=""object""];
    lift -> radiator [label=""from""];
    place -> mirror [label=""object""];
    place -> coffee_table [label=""on""];
}"
"Command: Pick the frame from the noisy table and lay it on the entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    noisy -> table [label=""attribute""];
    pick -> frame [label=""object""];
    pick -> table [label=""from""];
    lay -> frame [label=""object""];
    lay -> entrance [label=""on""];
}","Command: Pick the frame from the noisy table and lay it on the entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    noisy -> table [label=""attribute""];
    pick -> frame [label=""object""];
    pick -> table [label=""from""];
    lay -> frame [label=""object""];
    lay -> entrance [label=""on""];
}"
"Command: Pick the fuzzy glass from the wet drawer and set it on the bright tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    fuzzy -> glass [label=""attribute""];
    wet -> drawer [label=""attribute""];
    bright -> tv_cabinet [label=""attribute""];
    pick -> glass [label=""object""];
    pick -> drawer [label=""from""];
    set -> glass [label=""object""];
    set -> tv_cabinet [label=""on""];
}","Command: Pick the fuzzy glass from the wet drawer and set it on the bright tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    fuzzy -> glass [label=""attribute""];
    wet -> drawer [label=""attribute""];
    bright -> tv_cabinet [label=""attribute""];
    pick -> glass [label=""object""];
    pick -> drawer [label=""from""];
    set -> glass [label=""object""];
    set -> tv_cabinet [label=""on""];
}"
"Command: Take the heavy light ring from the basket and set it on the closed wooden wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    heavy -> ring [label=""attribute""];
    light -> ring [label=""attribute""];
    closed -> wardrobe [label=""attribute""];
    wooden -> wardrobe [label=""attribute""];
    take -> ring [label=""object""];
    take -> basket [label=""from""];
    set -> ring [label=""object""];
    set -> wardrobe [label=""on""];
}","Command: Take the heavy light ring from the basket and set it on the closed wooden wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    heavy -> ring [label=""attribute""];
    light -> ring [label=""attribute""];
    closed -> wardrobe [label=""attribute""];
    wooden -> wardrobe [label=""attribute""];
    take -> ring [label=""object""];
    take -> basket [label=""from""];
    set -> ring [label=""object""];
    set -> wardrobe [label=""on""];
}"
"Command: Pick the bracelet from the empty noisy stove and leave it on the messy closed stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> stove [label=""attribute""];
    noisy -> stove [label=""attribute""];
    messy -> stove [label=""attribute""];
    closed -> stove [label=""attribute""];
    pick -> bracelet [label=""object""];
    pick -> stove [label=""from""];
    leave -> bracelet [label=""object""];
    leave -> stove [label=""on""];
}","Command: Pick the bracelet from the empty noisy stove and leave it on the messy closed stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> stove [label=""attribute""];
    noisy -> stove [label=""attribute""];
    messy -> stove [label=""attribute""];
    closed -> stove [label=""attribute""];
    pick -> bracelet [label=""object""];
    pick -> stove [label=""from""];
    leave -> bracelet [label=""object""];
    leave -> stove [label=""on""];
}"
"Command: Grab the round white vase from the balcony shelf and lay it on the ceramic open safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    round -> vase [label=""attribute""];
    white -> vase [label=""attribute""];
    ceramic -> safe [label=""attribute""];
    open -> safe [label=""attribute""];
    grab -> vase [label=""object""];
    grab -> balcony_shelf [label=""from""];
    lay -> vase [label=""object""];
    lay -> safe [label=""on""];
}","Command: Grab the round white vase from the balcony shelf and lay it on the ceramic open safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    round -> vase [label=""attribute""];
    white -> vase [label=""attribute""];
    ceramic -> safe [label=""attribute""];
    open -> safe [label=""attribute""];
    grab -> vase [label=""object""];
    grab -> balcony_shelf [label=""from""];
    lay -> vase [label=""object""];
    lay -> safe [label=""on""];
}"
"Command: Grab the smooth shirt from the counter and lay it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    smooth -> shirt [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> counter [label=""from""];
    lay -> shirt [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Grab the smooth shirt from the counter and lay it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    smooth -> shirt [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> counter [label=""from""];
    lay -> shirt [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Grab the hammer from the toilet and set it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    grab -> hammer [label=""object""];
    grab -> toilet [label=""from""];
    set -> hammer [label=""object""];
    set -> shelf [label=""on""];
}","Command: Grab the hammer from the toilet and set it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    grab -> hammer [label=""object""];
    grab -> toilet [label=""from""];
    set -> hammer [label=""object""];
    set -> shelf [label=""on""];
}"
"Command: Pick the wallet from the toolbox and put it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> toolbox [label=""from""];
    put -> wallet [label=""object""];
    put -> above_the_fridge [label=""on""];
}","Command: Pick the wallet from the toolbox and put it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> toolbox [label=""from""];
    put -> wallet [label=""object""];
    put -> above_the_fridge [label=""on""];
}"
"Command: Grab the fragile shiny headphones from the wooden nightstand and leave it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    fragile -> headphones [label=""attribute""];
    shiny -> headphones [label=""attribute""];
    wooden -> nightstand [label=""attribute""];
    grab -> headphones [label=""object""];
    grab -> nightstand [label=""from""];
    leave -> headphones [label=""object""];
    leave -> bathtub [label=""on""];
}","Command: Grab the fragile shiny headphones from the wooden nightstand and leave it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    fragile -> headphones [label=""attribute""];
    shiny -> headphones [label=""attribute""];
    wooden -> nightstand [label=""attribute""];
    grab -> headphones [label=""object""];
    grab -> nightstand [label=""from""];
    leave -> headphones [label=""object""];
    leave -> bathtub [label=""on""];
}"
"Command: Take the glossy vase from the empty plastic bin and leave it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    glossy -> vase [label=""attribute""];
    empty -> bin [label=""attribute""];
    plastic -> bin [label=""attribute""];
    take -> vase [label=""object""];
    take -> bin [label=""from""];
    leave -> vase [label=""object""];
    leave -> wine_rack [label=""on""];
}","Command: Take the glossy vase from the empty plastic bin and leave it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> vase [label=""attribute""];
    empty -> bin [label=""attribute""];
    plastic -> bin [label=""attribute""];
    take -> vase [label=""object""];
    take -> bin [label=""from""];
    leave -> vase [label=""object""];
    leave -> wine_rack [label=""on""];
}"
"Command: Pick the round mouse from the wet narrow sink and lay it on the cold file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    round -> mouse [label=""attribute""];
    wet -> sink [label=""attribute""];
    narrow -> sink [label=""attribute""];
    cold -> file_cabinet [label=""attribute""];
    pick -> mouse [label=""object""];
    pick -> sink [label=""from""];
    lay -> mouse [label=""object""];
    lay -> file_cabinet [label=""on""];
}","Command: Pick the round mouse from the wet narrow sink and lay it on the cold file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    round -> mouse [label=""attribute""];
    wet -> sink [label=""attribute""];
    narrow -> sink [label=""attribute""];
    cold -> file_cabinet [label=""attribute""];
    pick -> mouse [label=""object""];
    pick -> sink [label=""from""];
    lay -> mouse [label=""object""];
    lay -> file_cabinet [label=""on""];
}"
"Command: Lift the sharp fuzzy slipper from the nightstand and put it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp -> slipper [label=""attribute""];
    fuzzy -> slipper [label=""attribute""];
    lift -> slipper [label=""object""];
    lift -> nightstand [label=""from""];
    put -> slipper [label=""object""];
    put -> coffee_table [label=""on""];
}","Command: Lift the sharp fuzzy slipper from the nightstand and put it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    slipper [label=""slipper"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp -> slipper [label=""attribute""];
    fuzzy -> slipper [label=""attribute""];
    lift -> slipper [label=""object""];
    lift -> nightstand [label=""from""];
    put -> slipper [label=""object""];
    put -> coffee_table [label=""on""];
}"
"Command: Pick the blue umbrella from the sturdy clean closet and place it on the oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    blue -> umbrella [label=""attribute""];
    sturdy -> closet [label=""attribute""];
    clean -> closet [label=""attribute""];
    pick -> umbrella [label=""object""];
    pick -> closet [label=""from""];
    place -> umbrella [label=""object""];
    place -> oven [label=""on""];
}","Command: Pick the blue umbrella from the sturdy clean closet and place it on the oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    blue -> umbrella [label=""attribute""];
    sturdy -> closet [label=""attribute""];
    clean -> closet [label=""attribute""];
    pick -> umbrella [label=""object""];
    pick -> closet [label=""from""];
    place -> umbrella [label=""object""];
    place -> oven [label=""on""];
}"
"Command: Lift the cap from the noisy cold fridge door and leave it on the bright wooden radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    noisy -> fridge_door [label=""attribute""];
    cold -> fridge_door [label=""attribute""];
    bright -> radiator [label=""attribute""];
    wooden -> radiator [label=""attribute""];
    lift -> cap [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> cap [label=""object""];
    leave -> radiator [label=""on""];
}","Command: Lift the cap from the noisy cold fridge door and leave it on the bright wooden radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    noisy -> fridge_door [label=""attribute""];
    cold -> fridge_door [label=""attribute""];
    bright -> radiator [label=""attribute""];
    wooden -> radiator [label=""attribute""];
    lift -> cap [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> cap [label=""object""];
    leave -> radiator [label=""on""];
}"
"Command: Lift the fragile round speaker from the cabinet and set it on the tidy safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    fragile -> speaker [label=""attribute""];
    round -> speaker [label=""attribute""];
    tidy -> safe [label=""attribute""];
    lift -> speaker [label=""object""];
    lift -> cabinet [label=""from""];
    set -> speaker [label=""object""];
    set -> safe [label=""on""];
}","Command: Lift the fragile round speaker from the cabinet and set it on the tidy safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    fragile -> speaker [label=""attribute""];
    round -> speaker [label=""attribute""];
    tidy -> safe [label=""attribute""];
    lift -> speaker [label=""object""];
    lift -> cabinet [label=""from""];
    set -> speaker [label=""object""];
    set -> safe [label=""on""];
}"
"Command: Lift the blunt fragile keyboard from the coffee table and put it on the kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> keyboard [label=""attribute""];
    fragile -> keyboard [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> coffee_table [label=""from""];
    put -> keyboard [label=""object""];
    put -> kitchen_drawer [label=""on""];
}","Command: Lift the blunt fragile keyboard from the coffee table and put it on the kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> keyboard [label=""attribute""];
    fragile -> keyboard [label=""attribute""];
    lift -> keyboard [label=""object""];
    lift -> coffee_table [label=""from""];
    put -> keyboard [label=""object""];
    put -> kitchen_drawer [label=""on""];
}"
"Command: Take the smooth plate from the beside the couch and leave it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    smooth -> plate [label=""attribute""];
    take -> plate [label=""object""];
    take -> beside_the_couch [label=""from""];
    leave -> plate [label=""object""];
    leave -> rack [label=""on""];
}","Command: Take the smooth plate from the beside the couch and leave it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    smooth -> plate [label=""attribute""];
    take -> plate [label=""object""];
    take -> beside_the_couch [label=""from""];
    leave -> plate [label=""object""];
    leave -> rack [label=""on""];
}"
"Command: Pick the round black box from the closed tool rack and place it on the open wet basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    round -> box [label=""attribute""];
    black -> box [label=""attribute""];
    closed -> tool_rack [label=""attribute""];
    open -> basket [label=""attribute""];
    wet -> basket [label=""attribute""];
    pick -> box [label=""object""];
    pick -> tool_rack [label=""from""];
    place -> box [label=""object""];
    place -> basket [label=""on""];
}","Command: Pick the round black box from the closed tool rack and place it on the open wet basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    round -> box [label=""attribute""];
    black -> box [label=""attribute""];
    closed -> tool_rack [label=""attribute""];
    open -> basket [label=""attribute""];
    wet -> basket [label=""attribute""];
    pick -> box [label=""object""];
    pick -> tool_rack [label=""from""];
    place -> box [label=""object""];
    place -> basket [label=""on""];
}"
"Command: Lift the lego from the wet ceramic trash can and lay it on the dark open drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    wet -> trash_can [label=""attribute""];
    ceramic -> trash_can [label=""attribute""];
    dark -> drawer [label=""attribute""];
    open -> drawer [label=""attribute""];
    lift -> lego [label=""object""];
    lift -> trash_can [label=""from""];
    lay -> lego [label=""object""];
    lay -> drawer [label=""on""];
}","Command: Lift the lego from the wet ceramic trash can and lay it on the dark open drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    wet -> trash_can [label=""attribute""];
    ceramic -> trash_can [label=""attribute""];
    dark -> drawer [label=""attribute""];
    open -> drawer [label=""attribute""];
    lift -> lego [label=""object""];
    lift -> trash_can [label=""from""];
    lay -> lego [label=""object""];
    lay -> drawer [label=""on""];
}"
"Command: Pick the paper from the wet magazine rack and put it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    wet -> magazine_rack [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> magazine_rack [label=""from""];
    put -> paper [label=""object""];
    put -> wardrobe [label=""on""];
}","Command: Pick the paper from the wet magazine rack and put it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    wet -> magazine_rack [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> magazine_rack [label=""from""];
    put -> paper [label=""object""];
    put -> wardrobe [label=""on""];
}"
"Command: Take the light charger from the pet bed and set it on the open warm window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> charger [label=""attribute""];
    open -> window_ledge [label=""attribute""];
    warm -> window_ledge [label=""attribute""];
    take -> charger [label=""object""];
    take -> pet_bed [label=""from""];
    set -> charger [label=""object""];
    set -> window_ledge [label=""on""];
}","Command: Take the light charger from the pet bed and set it on the open warm window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    light -> charger [label=""attribute""];
    open -> window_ledge [label=""attribute""];
    warm -> window_ledge [label=""attribute""];
    take -> charger [label=""object""];
    take -> pet_bed [label=""from""];
    set -> charger [label=""object""];
    set -> window_ledge [label=""on""];
}"
"Command: Pick the red green charger from the bathtub and place it on the cold tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    red -> charger [label=""attribute""];
    green -> charger [label=""attribute""];
    cold -> tool_rack [label=""attribute""];
    pick -> charger [label=""object""];
    pick -> bathtub [label=""from""];
    place -> charger [label=""object""];
    place -> tool_rack [label=""on""];
}","Command: Pick the red green charger from the bathtub and place it on the cold tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    red -> charger [label=""attribute""];
    green -> charger [label=""attribute""];
    cold -> tool_rack [label=""attribute""];
    pick -> charger [label=""object""];
    pick -> bathtub [label=""from""];
    place -> charger [label=""object""];
    place -> tool_rack [label=""on""];
}"
"Command: Grab the soft sock from the under the bed and put it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    soft -> sock [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> under_the_bed [label=""from""];
    put -> sock [label=""object""];
    put -> drawer [label=""on""];
}","Command: Grab the soft sock from the under the bed and put it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    soft -> sock [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> under_the_bed [label=""from""];
    put -> sock [label=""object""];
    put -> drawer [label=""on""];
}"
"Command: Take the marker from the behind the curtain and leave it on the drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> marker [label=""object""];
    take -> behind_the_curtain [label=""from""];
    leave -> marker [label=""object""];
    leave -> drawer [label=""on""];
}","Command: Take the marker from the behind the curtain and leave it on the drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take -> marker [label=""object""];
    take -> behind_the_curtain [label=""from""];
    leave -> marker [label=""object""];
    leave -> drawer [label=""on""];
}"
"Command: Pick the blunt bottle from the narrow oven and lay it on the microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blunt -> bottle [label=""attribute""];
    narrow -> oven [label=""attribute""];
    pick -> bottle [label=""object""];
    pick -> oven [label=""from""];
    lay -> bottle [label=""object""];
    lay -> microwave [label=""on""];
}","Command: Pick the blunt bottle from the narrow oven and lay it on the microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blunt -> bottle [label=""attribute""];
    narrow -> oven [label=""attribute""];
    pick -> bottle [label=""object""];
    pick -> oven [label=""from""];
    lay -> bottle [label=""object""];
    lay -> microwave [label=""on""];
}"
"Command: Take the light blunt shirt from the makeup bag and leave it on the windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> shirt [label=""attribute""];
    blunt -> shirt [label=""attribute""];
    take -> shirt [label=""object""];
    take -> makeup_bag [label=""from""];
    leave -> shirt [label=""object""];
    leave -> windowsill [label=""on""];
}","Command: Take the light blunt shirt from the makeup bag and leave it on the windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> shirt [label=""attribute""];
    blunt -> shirt [label=""attribute""];
    take -> shirt [label=""object""];
    take -> makeup_bag [label=""from""];
    leave -> shirt [label=""object""];
    leave -> windowsill [label=""on""];
}"
"Command: Take the plate from the toolbox and lay it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> toolbox [label=""from""];
    lay -> plate [label=""object""];
    lay -> beside_the_couch [label=""on""];
}","Command: Take the plate from the toolbox and lay it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> toolbox [label=""from""];
    lay -> plate [label=""object""];
    lay -> beside_the_couch [label=""on""];
}"
"Command: Pick the fragile white tissue from the table and lay it on the basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    fragile -> tissue [label=""attribute""];
    white -> tissue [label=""attribute""];
    pick -> tissue [label=""object""];
    pick -> table [label=""from""];
    lay -> tissue [label=""object""];
    lay -> basket [label=""on""];
}","Command: Pick the fragile white tissue from the table and lay it on the basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    fragile -> tissue [label=""attribute""];
    white -> tissue [label=""attribute""];
    pick -> tissue [label=""object""];
    pick -> table [label=""from""];
    lay -> tissue [label=""object""];
    lay -> basket [label=""on""];
}"
"Command: Grab the remote from the warm garden box and place it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    warm -> garden_box [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> garden_box [label=""from""];
    place -> remote [label=""object""];
    place -> toilet [label=""on""];
}","Command: Grab the remote from the warm garden box and place it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    warm -> garden_box [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> garden_box [label=""from""];
    place -> remote [label=""object""];
    place -> toilet [label=""on""];
}"
"Command: Grab the ring from the dry ceramic step stool and leave it on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    dry -> step_stool [label=""attribute""];
    ceramic -> step_stool [label=""attribute""];
    grab -> ring [label=""object""];
    grab -> step_stool [label=""from""];
    leave -> ring [label=""object""];
    leave -> radiator [label=""on""];
}","Command: Grab the ring from the dry ceramic step stool and leave it on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    dry -> step_stool [label=""attribute""];
    ceramic -> step_stool [label=""attribute""];
    grab -> ring [label=""object""];
    grab -> step_stool [label=""from""];
    leave -> ring [label=""object""];
    leave -> radiator [label=""on""];
}"
"Command: Lift the headphones from the hanger and place it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    lift -> headphones [label=""object""];
    lift -> hanger [label=""from""];
    place -> headphones [label=""object""];
    place -> coat_rack [label=""on""];
}","Command: Lift the headphones from the hanger and place it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    lift -> headphones [label=""object""];
    lift -> hanger [label=""from""];
    place -> headphones [label=""object""];
    place -> coat_rack [label=""on""];
}"
"Command: Pick the cup from the bright kitchen island and set it on the tidy first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    bright -> kitchen_island [label=""attribute""];
    tidy -> first_aid_box [label=""attribute""];
    pick -> cup [label=""object""];
    pick -> kitchen_island [label=""from""];
    set -> cup [label=""object""];
    set -> first_aid_box [label=""on""];
}","Command: Pick the cup from the bright kitchen island and set it on the tidy first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    tidy -> first_aid_box [label=""attribute""];
    pick -> cup [label=""object""];
    pick -> kitchen_island [label=""from""];
    set -> cup [label=""object""];
    set -> first_aid_box [label=""on""];
}"
"Command: Pick the bin from the trash can and put it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> trash_can [label=""from""];
    put -> bin [label=""object""];
    put -> above_the_fridge [label=""on""];
}","Command: Pick the bin from the trash can and put it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pick -> trash_can [label=""from""];
    put -> bin [label=""object""];
    put -> above_the_fridge [label=""on""];
}"
"Command: Pick the fuzzy bin from the dry drawer top and place it on the toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    fuzzy -> bin [label=""attribute""];
    dry -> drawer_top [label=""attribute""];
    pick -> bin [label=""object""];
    pick -> drawer_top [label=""from""];
    place -> bin [label=""object""];
    place -> toolbox [label=""on""];
}","Command: Pick the fuzzy bin from the dry drawer top and place it on the toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    fuzzy -> bin [label=""attribute""];
    dry -> drawer_top [label=""attribute""];
    pick -> bin [label=""object""];
    pick -> drawer_top [label=""from""];
    place -> bin [label=""object""];
    place -> toolbox [label=""on""];
}"
"Command: Grab the blue green tie from the next to the lamp and leave it on the noisy balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    blue -> tie [label=""attribute""];
    green -> tie [label=""attribute""];
    noisy -> balcony_shelf [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> next_to_the_lamp [label=""from""];
    leave -> tie [label=""object""];
    leave -> balcony_shelf [label=""on""];
}","Command: Grab the blue green tie from the next to the lamp and leave it on the noisy balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    blue -> tie [label=""attribute""];
    green -> tie [label=""attribute""];
    noisy -> balcony_shelf [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> next_to_the_lamp [label=""from""];
    leave -> tie [label=""object""];
    leave -> balcony_shelf [label=""on""];
}"
"Command: Lift the pencil from the full fridge door and place it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> pencil [label=""object""];
    lift -> fridge_door [label=""from""];
    place -> pencil [label=""object""];
    place -> on_the_radiator [label=""on""];
}","Command: Lift the pencil from the full fridge door and place it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full -> fridge_door [label=""attribute""];
    lift -> pencil [label=""object""];
    lift -> fridge_door [label=""from""];
    place -> pencil [label=""object""];
    place -> on_the_radiator [label=""on""];
}"
"Command: Lift the clock from the rack and lay it on the open pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    open -> pantry [label=""attribute""];
    lift -> clock [label=""object""];
    lift -> rack [label=""from""];
    lay -> clock [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Lift the clock from the rack and lay it on the open pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    open -> pantry [label=""attribute""];
    lift -> clock [label=""object""];
    lift -> rack [label=""from""];
    lay -> clock [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Take the blue bottle opener from the pet bed and leave it on the messy noisy armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> bottle_opener [label=""attribute""];
    messy -> armrest [label=""attribute""];
    noisy -> armrest [label=""attribute""];
    take -> bottle_opener [label=""object""];
    take -> pet_bed [label=""from""];
    leave -> bottle_opener [label=""object""];
    leave -> armrest [label=""on""];
}","Command: Take the blue bottle opener from the pet bed and leave it on the messy noisy armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> bottle_opener [label=""attribute""];
    messy -> armrest [label=""attribute""];
    noisy -> armrest [label=""attribute""];
    take -> bottle_opener [label=""object""];
    take -> pet_bed [label=""from""];
    leave -> bottle_opener [label=""object""];
    leave -> armrest [label=""on""];
}"
"Command: Take the fuzzy glossy tie from the storage box and place it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> tie [label=""attribute""];
    glossy -> tie [label=""attribute""];
    take -> tie [label=""object""];
    take -> storage_box [label=""from""];
    place -> tie [label=""object""];
    place -> desk_drawer [label=""on""];
}","Command: Take the fuzzy glossy tie from the storage box and place it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> tie [label=""attribute""];
    glossy -> tie [label=""attribute""];
    take -> tie [label=""object""];
    take -> storage_box [label=""from""];
    place -> tie [label=""object""];
    place -> desk_drawer [label=""on""];
}"
"Command: Grab the square speaker from the first aid box and put it on the full wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> speaker [label=""attribute""];
    full -> wall_shelf [label=""attribute""];
    grab -> speaker [label=""object""];
    grab -> first_aid_box [label=""from""];
    put -> speaker [label=""object""];
    put -> wall_shelf [label=""on""];
}","Command: Grab the square speaker from the first aid box and put it on the full wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> speaker [label=""attribute""];
    full -> wall_shelf [label=""attribute""];
    grab -> speaker [label=""object""];
    grab -> first_aid_box [label=""from""];
    put -> speaker [label=""object""];
    put -> wall_shelf [label=""on""];
}"
"Command: Pick the knife from the dry corner and set it on the ceramic table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> corner [label=""attribute""];
    ceramic -> table [label=""attribute""];
    pick -> knife [label=""object""];
    pick -> corner [label=""from""];
    set -> knife [label=""object""];
    set -> table [label=""on""];
}","Command: Pick the knife from the dry corner and set it on the ceramic table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> corner [label=""attribute""];
    ceramic -> table [label=""attribute""];
    pick -> knife [label=""object""];
    pick -> corner [label=""from""];
    set -> knife [label=""object""];
    set -> table [label=""on""];
}"
"Command: Pick the bin from the toolbox and set it on the hallway.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    pick -> bin [label=""object""];
    pick -> toolbox [label=""from""];
    set -> bin [label=""object""];
    set -> hallway [label=""on""];
}","Command: Pick the bin from the toolbox and set it on the hallway.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    pick -> bin [label=""object""];
    pick -> toolbox [label=""from""];
    set -> bin [label=""object""];
    set -> hallway [label=""on""];
}"
"Command: Pick the black light key from the hanger and set it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> key [label=""attribute""];
    light -> key [label=""attribute""];
    pick -> key [label=""object""];
    pick -> hanger [label=""from""];
    set -> key [label=""object""];
    set -> fish_tank [label=""on""];
}","Command: Pick the black light key from the hanger and set it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> key [label=""attribute""];
    light -> key [label=""attribute""];
    pick -> key [label=""object""];
    pick -> hanger [label=""from""];
    set -> key [label=""object""];
    set -> fish_tank [label=""on""];
}"
"Command: Take the shirt from the dry toolbox and leave it on the coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dry -> toolbox [label=""attribute""];
    take -> shirt [label=""object""];
    take -> toolbox [label=""from""];
    leave -> shirt [label=""object""];
    leave -> coat_shelf [label=""on""];
}","Command: Take the shirt from the dry toolbox and leave it on the coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dry -> toolbox [label=""attribute""];
    take -> shirt [label=""object""];
    take -> toolbox [label=""from""];
    leave -> shirt [label=""object""];
    leave -> coat_shelf [label=""on""];
}"
"Command: Pick the backpack from the stand and set it on the dark ceramic radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dark -> radiator [label=""attribute""];
    ceramic -> radiator [label=""attribute""];
    pick -> backpack [label=""object""];
    pick -> stand [label=""from""];
    set -> backpack [label=""object""];
    set -> radiator [label=""on""];
}","Command: Pick the backpack from the stand and set it on the dark ceramic radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dark -> radiator [label=""attribute""];
    ceramic -> radiator [label=""attribute""];
    pick -> backpack [label=""object""];
    pick -> stand [label=""from""];
    set -> backpack [label=""object""];
    set -> radiator [label=""on""];
}"
"Command: Pick the tissue from the messy tv cabinet and lay it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    messy -> tv_cabinet [label=""attribute""];
    pick -> tissue [label=""object""];
    pick -> tv_cabinet [label=""from""];
    lay -> tissue [label=""object""];
    lay -> cabinet [label=""on""];
}","Command: Pick the tissue from the messy tv cabinet and lay it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    messy -> tv_cabinet [label=""attribute""];
    pick -> tissue [label=""object""];
    pick -> tv_cabinet [label=""from""];
    lay -> tissue [label=""object""];
    lay -> cabinet [label=""on""];
}"
"Command: Pick the stapler from the kitchen drawer and put it on the open sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    open -> sofa [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> kitchen_drawer [label=""from""];
    put -> stapler [label=""object""];
    put -> sofa [label=""on""];
}","Command: Pick the stapler from the kitchen drawer and put it on the open sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    open -> sofa [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> kitchen_drawer [label=""from""];
    put -> stapler [label=""object""];
    put -> sofa [label=""on""];
}"
"Command: Lift the soft toy from the cutlery drawer and leave it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    soft -> toy [label=""attribute""];
    lift -> toy [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    leave -> toy [label=""object""];
    leave -> garage [label=""on""];
}","Command: Lift the soft toy from the cutlery drawer and leave it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    soft -> toy [label=""attribute""];
    lift -> toy [label=""object""];
    lift -> cutlery_drawer [label=""from""];
    leave -> toy [label=""object""];
    leave -> garage [label=""on""];
}"
"Command: Take the sharp speaker from the terrace table and leave it on the dry dusty wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> speaker [label=""attribute""];
    dry -> wall_hook [label=""attribute""];
    dusty -> wall_hook [label=""attribute""];
    take -> speaker [label=""object""];
    take -> terrace_table [label=""from""];
    leave -> speaker [label=""object""];
    leave -> wall_hook [label=""on""];
}","Command: Take the sharp speaker from the terrace table and leave it on the dry dusty wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> speaker [label=""attribute""];
    dry -> wall_hook [label=""attribute""];
    dusty -> wall_hook [label=""attribute""];
    take -> speaker [label=""object""];
    take -> terrace_table [label=""from""];
    leave -> speaker [label=""object""];
    leave -> wall_hook [label=""on""];
}"
"Command: Grab the magazine from the dryer and put it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> magazine [label=""object""];
    grab -> dryer [label=""from""];
    put -> magazine [label=""object""];
    put -> shaving_kit [label=""on""];
}","Command: Grab the magazine from the dryer and put it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> magazine [label=""object""];
    grab -> dryer [label=""from""];
    put -> magazine [label=""object""];
    put -> shaving_kit [label=""on""];
}"
"Command: Take the soft green hammer from the wardrobe and lay it on the heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> hammer [label=""attribute""];
    green -> hammer [label=""attribute""];
    take -> hammer [label=""object""];
    take -> wardrobe [label=""from""];
    lay -> hammer [label=""object""];
    lay -> heater [label=""on""];
}","Command: Take the soft green hammer from the wardrobe and lay it on the heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> hammer [label=""attribute""];
    green -> hammer [label=""attribute""];
    take -> hammer [label=""object""];
    take -> wardrobe [label=""from""];
    lay -> hammer [label=""object""];
    lay -> heater [label=""on""];
}"
"Command: Pick the speaker from the ceramic warm coffee table and leave it on the heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    ceramic -> coffee_table [label=""attribute""];
    warm -> coffee_table [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> coffee_table [label=""from""];
    leave -> speaker [label=""object""];
    leave -> heater [label=""on""];
}","Command: Pick the speaker from the ceramic warm coffee table and leave it on the heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    ceramic -> coffee_table [label=""attribute""];
    warm -> coffee_table [label=""attribute""];
    pick -> speaker [label=""object""];
    pick -> coffee_table [label=""from""];
    leave -> speaker [label=""object""];
    leave -> heater [label=""on""];
}"
"Command: Grab the boot from the empty armrest and place it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> armrest [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> armrest [label=""from""];
    place -> boot [label=""object""];
    place -> snack_shelf [label=""on""];
}","Command: Grab the boot from the empty armrest and place it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> armrest [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> armrest [label=""from""];
    place -> boot [label=""object""];
    place -> snack_shelf [label=""on""];
}"
"Command: Grab the spoon from the open pet bed and put it on the empty plastic plant pot.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    open -> pet_bed [label=""attribute""];
    empty -> plant_pot [label=""attribute""];
    plastic -> plant_pot [label=""attribute""];
    grab -> spoon [label=""object""];
    grab -> pet_bed [label=""from""];
    put -> spoon [label=""object""];
    put -> plant_pot [label=""on""];
}","Command: Grab the spoon from the open pet bed and put it on the empty plastic plant pot.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    plastic -> plant_pot [label=""attribute""];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    grab -> spoon [label=""object""];
    grab -> pet_bed [label=""from""];
    put -> spoon [label=""object""];
    put -> plant_pot [label=""on""];
}"
"Command: Pick the black glossy vase from the table and put it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> vase [label=""attribute""];
    glossy -> vase [label=""attribute""];
    pick -> vase [label=""object""];
    pick -> table [label=""from""];
    put -> vase [label=""object""];
    put -> bookshelf_top [label=""on""];
}","Command: Pick the black glossy vase from the table and put it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    black -> vase [label=""attribute""];
    glossy -> vase [label=""attribute""];
    pick -> vase [label=""object""];
    pick -> table [label=""from""];
    put -> vase [label=""object""];
    put -> bookshelf_top [label=""on""];
}"
"Command: Grab the coaster from the coat rack and place it on the heater.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    grab -> coaster [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> coaster [label=""object""];
    place -> heater [label=""on""];
}","Command: Grab the coaster from the coat rack and place it on the heater.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    grab -> coaster [label=""object""];
    grab -> coat_rack [label=""from""];
    place -> coaster [label=""object""];
    place -> heater [label=""on""];
}"
"Command: Pick the pen from the dry medicine cabinet and leave it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    dry -> medicine_cabinet [label=""attribute""];
    pick -> pen [label=""object""];
    pick -> medicine_cabinet [label=""from""];
    leave -> pen [label=""object""];
    leave -> shelf [label=""on""];
}","Command: Pick the pen from the dry medicine cabinet and leave it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    dry -> medicine_cabinet [label=""attribute""];
    pick -> pen [label=""object""];
    pick -> medicine_cabinet [label=""from""];
    leave -> pen [label=""object""];
    leave -> shelf [label=""on""];
}"
"Command: Take the container from the next to the lamp and leave it on the bright dry wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> wine_rack [label=""attribute""];
    dry -> wine_rack [label=""attribute""];
    take -> container [label=""object""];
    take -> next_to_the_lamp [label=""from""];
    leave -> container [label=""object""];
    leave -> wine_rack [label=""on""];
}","Command: Take the container from the next to the lamp and leave it on the bright dry wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> wine_rack [label=""attribute""];
    dry -> wine_rack [label=""attribute""];
    take -> container [label=""object""];
    take -> next_to_the_lamp [label=""from""];
    leave -> container [label=""object""];
    leave -> wine_rack [label=""on""];
}"
"Command: Lift the belt from the radiator and set it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    lift -> belt [label=""object""];
    lift -> radiator [label=""from""];
    set -> belt [label=""object""];
    set -> step_stool [label=""on""];
}","Command: Lift the belt from the radiator and set it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    lift -> belt [label=""object""];
    lift -> radiator [label=""from""];
    set -> belt [label=""object""];
    set -> step_stool [label=""on""];
}"
"Command: Pick the hat from the wet dark windowsill and put it on the cold empty closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wet -> windowsill [label=""attribute""];
    dark -> windowsill [label=""attribute""];
    cold -> closet [label=""attribute""];
    empty -> closet [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> windowsill [label=""from""];
    put -> hat [label=""object""];
    put -> closet [label=""on""];
}","Command: Pick the hat from the wet dark windowsill and put it on the cold empty closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wet -> windowsill [label=""attribute""];
    dark -> windowsill [label=""attribute""];
    cold -> closet [label=""attribute""];
    empty -> closet [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> windowsill [label=""from""];
    put -> hat [label=""object""];
    put -> closet [label=""on""];
}"
"Command: Lift the fuzzy jacket from the sofa and place it on the warm magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    fuzzy -> jacket [label=""attribute""];
    warm -> magazine_rack [label=""attribute""];
    lift -> jacket [label=""object""];
    lift -> sofa [label=""from""];
    place -> jacket [label=""object""];
    place -> magazine_rack [label=""on""];
}","Command: Lift the fuzzy jacket from the sofa and place it on the warm magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    fuzzy -> jacket [label=""attribute""];
    warm -> magazine_rack [label=""attribute""];
    lift -> jacket [label=""object""];
    lift -> sofa [label=""from""];
    place -> jacket [label=""object""];
    place -> magazine_rack [label=""on""];
}"
"Command: Grab the speaker from the dark wall hook and lay it on the litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    dark -> wall_hook [label=""attribute""];
    grab -> speaker [label=""object""];
    grab -> wall_hook [label=""from""];
    lay -> speaker [label=""object""];
    lay -> litter_box [label=""on""];
}","Command: Grab the speaker from the dark wall hook and lay it on the litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    dark -> wall_hook [label=""attribute""];
    grab -> speaker [label=""object""];
    grab -> wall_hook [label=""from""];
    lay -> speaker [label=""object""];
    lay -> litter_box [label=""on""];
}"
"Command: Pick the helmet from the tidy safe and set it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    tidy -> safe [label=""attribute""];
    pick -> helmet [label=""object""];
    pick -> safe [label=""from""];
    set -> helmet [label=""object""];
    set -> nightstand [label=""on""];
}","Command: Pick the helmet from the tidy safe and set it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    tidy -> safe [label=""attribute""];
    pick -> helmet [label=""object""];
    pick -> safe [label=""from""];
    set -> helmet [label=""object""];
    set -> nightstand [label=""on""];
}"
"Command: Pick the glass from the tv stand and set it on the sturdy medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    sturdy -> medicine_cabinet [label=""attribute""];
    pick -> glass [label=""object""];
    pick -> tv_stand [label=""from""];
    set -> glass [label=""object""];
    set -> medicine_cabinet [label=""on""];
}","Command: Pick the glass from the tv stand and set it on the sturdy medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    sturdy -> medicine_cabinet [label=""attribute""];
    pick -> glass [label=""object""];
    pick -> tv_stand [label=""from""];
    set -> glass [label=""object""];
    set -> medicine_cabinet [label=""on""];
}"
"Command: Pick the hard shiny hat from the tidy medicine cabinet and lay it on the basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    hard -> hat [label=""attribute""];
    shiny -> hat [label=""attribute""];
    tidy -> medicine_cabinet [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> medicine_cabinet [label=""from""];
    lay -> hat [label=""object""];
    lay -> basket [label=""on""];
}","Command: Pick the hard shiny hat from the tidy medicine cabinet and lay it on the basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    hard -> hat [label=""attribute""];
    shiny -> hat [label=""attribute""];
    tidy -> medicine_cabinet [label=""attribute""];
    pick -> hat [label=""object""];
    pick -> medicine_cabinet [label=""from""];
    lay -> hat [label=""object""];
    lay -> basket [label=""on""];
}"
"Command: Lift the glossy case from the wooden narrow bench and put it on the litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    glossy -> case [label=""attribute""];
    wooden -> bench [label=""attribute""];
    narrow -> bench [label=""attribute""];
    lift -> case [label=""object""];
    lift -> bench [label=""from""];
    put -> case [label=""object""];
    put -> litter_box [label=""on""];
}","Command: Lift the glossy case from the wooden narrow bench and put it on the litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    glossy -> case [label=""attribute""];
    wooden -> bench [label=""attribute""];
    narrow -> bench [label=""attribute""];
    lift -> case [label=""object""];
    lift -> bench [label=""from""];
    put -> case [label=""object""];
    put -> litter_box [label=""on""];
}"
"Command: Take the light cable from the armrest and put it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> cable [label=""attribute""];
    take -> cable [label=""object""];
    take -> armrest [label=""from""];
    put -> cable [label=""object""];
    put -> pantry [label=""on""];
}","Command: Take the light cable from the armrest and put it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> cable [label=""attribute""];
    take -> cable [label=""object""];
    take -> armrest [label=""from""];
    put -> cable [label=""object""];
    put -> pantry [label=""on""];
}"
"Command: Lift the boot from the dry bright locker and lay it on the warm bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> locker [label=""attribute""];
    bright -> locker [label=""attribute""];
    warm -> bookshelf_top [label=""attribute""];
    lift -> boot [label=""object""];
    lift -> locker [label=""from""];
    lay -> boot [label=""object""];
    lay -> bookshelf_top [label=""on""];
}","Command: Lift the boot from the dry bright locker and lay it on the warm bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> locker [label=""attribute""];
    bright -> locker [label=""attribute""];
    warm -> bookshelf_top [label=""attribute""];
    lift -> boot [label=""object""];
    lift -> locker [label=""from""];
    lay -> boot [label=""object""];
    lay -> bookshelf_top [label=""on""];
}"
"Command: Lift the cable from the open under the table and place it on the cold empty coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    open -> under_the_table [label=""attribute""];
    cold -> coffee_table [label=""attribute""];
    empty -> coffee_table [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> under_the_table [label=""from""];
    place -> cable [label=""object""];
    place -> coffee_table [label=""on""];
}","Command: Lift the cable from the open under the table and place it on the cold empty coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    open -> under_the_table [label=""attribute""];
    cold -> coffee_table [label=""attribute""];
    empty -> coffee_table [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> under_the_table [label=""from""];
    place -> cable [label=""object""];
    place -> coffee_table [label=""on""];
}"
"Command: Pick the shiny stapler from the heater and set it on the cold wet nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    shiny -> stapler [label=""attribute""];
    cold -> nightstand [label=""attribute""];
    wet -> nightstand [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> heater [label=""from""];
    set -> stapler [label=""object""];
    set -> nightstand [label=""on""];
}","Command: Pick the shiny stapler from the heater and set it on the cold wet nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    shiny -> stapler [label=""attribute""];
    cold -> nightstand [label=""attribute""];
    wet -> nightstand [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> heater [label=""from""];
    set -> stapler [label=""object""];
    set -> nightstand [label=""on""];
}"
"Command: Lift the green red hammer from the bin and set it on the plastic spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    green -> hammer [label=""attribute""];
    red -> hammer [label=""attribute""];
    plastic -> spice_rack [label=""attribute""];
    lift -> hammer [label=""object""];
    lift -> bin [label=""from""];
    set -> hammer [label=""object""];
    set -> spice_rack [label=""on""];
}","Command: Lift the green red hammer from the bin and set it on the plastic spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    green -> hammer [label=""attribute""];
    red -> hammer [label=""attribute""];
    plastic -> spice_rack [label=""attribute""];
    lift -> hammer [label=""object""];
    lift -> bin [label=""from""];
    set -> hammer [label=""object""];
    set -> spice_rack [label=""on""];
}"
"Command: Grab the sneaker from the tidy full under the table and leave it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tidy -> under_the_table [label=""attribute""];
    full -> under_the_table [label=""attribute""];
    grab -> sneaker [label=""object""];
    grab -> under_the_table [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> fridge [label=""on""];
}","Command: Grab the sneaker from the tidy full under the table and leave it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tidy -> under_the_table [label=""attribute""];
    full -> under_the_table [label=""attribute""];
    grab -> sneaker [label=""object""];
    grab -> under_the_table [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> fridge [label=""on""];
}"
"Command: Grab the fragile ball from the dry desk and place it on the full bright file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    fragile -> ball [label=""attribute""];
    dry -> desk [label=""attribute""];
    full -> file_cabinet [label=""attribute""];
    bright -> file_cabinet [label=""attribute""];
    grab -> ball [label=""object""];
    grab -> desk [label=""from""];
    place -> ball [label=""object""];
    place -> file_cabinet [label=""on""];
}","Command: Grab the fragile ball from the dry desk and place it on the full bright file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    fragile -> ball [label=""attribute""];
    dry -> desk [label=""attribute""];
    full -> file_cabinet [label=""attribute""];
    bright -> file_cabinet [label=""attribute""];
    grab -> ball [label=""object""];
    grab -> desk [label=""from""];
    place -> ball [label=""object""];
    place -> file_cabinet [label=""on""];
}"
"Command: Take the fuzzy sneaker from the tool rack and set it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> sneaker [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> tool_rack [label=""from""];
    set -> sneaker [label=""object""];
    set -> fish_tank [label=""on""];
}","Command: Take the fuzzy sneaker from the tool rack and set it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> sneaker [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> tool_rack [label=""from""];
    set -> sneaker [label=""object""];
    set -> fish_tank [label=""on""];
}"
"Command: Lift the blue blanket from the above the fridge and set it on the bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    blue -> blanket [label=""attribute""];
    lift -> blanket [label=""object""];
    lift -> above_the_fridge [label=""from""];
    set -> blanket [label=""object""];
    set -> bread_box [label=""on""];
}","Command: Lift the blue blanket from the above the fridge and set it on the bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    blue -> blanket [label=""attribute""];
    lift -> blanket [label=""object""];
    lift -> above_the_fridge [label=""from""];
    set -> blanket [label=""object""];
    set -> bread_box [label=""on""];
}"
"Command: Take the vase from the narrow closed drawer and put it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> drawer [label=""attribute""];
    closed -> drawer [label=""attribute""];
    take -> vase [label=""object""];
    take -> drawer [label=""from""];
    put -> vase [label=""object""];
    put -> toilet [label=""on""];
}","Command: Take the vase from the narrow closed drawer and put it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> drawer [label=""attribute""];
    closed -> drawer [label=""attribute""];
    take -> vase [label=""object""];
    take -> drawer [label=""from""];
    put -> vase [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Pick the knife from the bread box and set it on the warm fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    warm -> fish_tank [label=""attribute""];
    pick -> knife [label=""object""];
    pick -> bread_box [label=""from""];
    set -> knife [label=""object""];
    set -> fish_tank [label=""on""];
}","Command: Pick the knife from the bread box and set it on the warm fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    warm -> fish_tank [label=""attribute""];
    pick -> knife [label=""object""];
    pick -> bread_box [label=""from""];
    set -> knife [label=""object""];
    set -> fish_tank [label=""on""];
}"
"Command: Pick the backpack from the bright open closet and leave it on the drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    bright -> closet [label=""attribute""];
    open -> closet [label=""attribute""];
    pick -> backpack [label=""object""];
    pick -> closet [label=""from""];
    leave -> backpack [label=""object""];
    leave -> drawer_top [label=""on""];
}","Command: Pick the backpack from the bright open closet and leave it on the drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    bright -> closet [label=""attribute""];
    open -> closet [label=""attribute""];
    pick -> backpack [label=""object""];
    pick -> closet [label=""from""];
    leave -> backpack [label=""object""];
    leave -> drawer_top [label=""on""];
}"
"Command: Lift the sharp folder from the first aid box and place it on the sturdy bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    sharp -> folder [label=""attribute""];
    sturdy -> bin [label=""attribute""];
    lift -> folder [label=""object""];
    lift -> first_aid_box [label=""from""];
    place -> folder [label=""object""];
    place -> bin [label=""on""];
}","Command: Lift the sharp folder from the first aid box and place it on the sturdy bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    folder_to_file [label=""folder"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    sharp -> folder [label=""attribute""];
    sturdy -> bin [label=""attribute""];
    lift -> folder [label=""object""];
    lift -> first_aid_box [label=""from""];
    place -> folder [label=""object""];
    place -> bin [label=""on""];
}"
"Command: Take the container from the empty messy pantry and leave it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    empty -> pantry [label=""attribute""];
    messy -> pantry [label=""attribute""];
    take -> container [label=""object""];
    take -> pantry [label=""from""];
    leave -> container [label=""object""];
    leave -> file_cabinet [label=""on""];
}","Command: Take the container from the empty messy pantry and leave it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    container [label=""container"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    empty -> pantry [label=""attribute""];
    messy -> pantry [label=""attribute""];
    take -> container [label=""object""];
    take -> pantry [label=""from""];
    leave -> container [label=""object""];
    leave -> file_cabinet [label=""on""];
}"
"Command: Take the soap from the open closed first aid box and set it on the window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> first_aid_box [label=""attribute""];
    closed -> first_aid_box [label=""attribute""];
    take -> soap [label=""object""];
    take -> first_aid_box [label=""from""];
    set -> soap [label=""object""];
    set -> window_sill [label=""on""];
}","Command: Take the soap from the open closed first aid box and set it on the window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    soap [label=""soap"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> first_aid_box [label=""attribute""];
    closed -> first_aid_box [label=""attribute""];
    take -> soap [label=""object""];
    take -> first_aid_box [label=""from""];
    set -> soap [label=""object""];
    set -> window_sill [label=""on""];
}"
"Command: Grab the stapler from the bright bathtub and place it on the empty sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    bright -> bathtub [label=""attribute""];
    empty -> sofa [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> bathtub [label=""from""];
    place -> stapler [label=""object""];
    place -> sofa [label=""on""];
}","Command: Grab the stapler from the bright bathtub and place it on the empty sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    bright -> bathtub [label=""attribute""];
    empty -> sofa [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> bathtub [label=""from""];
    place -> stapler [label=""object""];
    place -> sofa [label=""on""];
}"
"Command: Take the knife from the bin and put it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> knife [label=""object""];
    take -> bin [label=""from""];
    put -> knife [label=""object""];
    put -> rack [label=""on""];
}","Command: Take the knife from the bin and put it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> knife [label=""object""];
    take -> bin [label=""from""];
    put -> knife [label=""object""];
    put -> rack [label=""on""];
}"
"Command: Lift the monitor from the sturdy magazine rack and put it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> monitor [label=""object""];
    lift -> magazine_rack [label=""from""];
    put -> monitor [label=""object""];
    put -> behind_the_curtain [label=""on""];
}","Command: Lift the monitor from the sturdy magazine rack and put it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy -> magazine_rack [label=""attribute""];
    lift -> monitor [label=""object""];
    lift -> magazine_rack [label=""from""];
    put -> monitor [label=""object""];
    put -> behind_the_curtain [label=""on""];
}"
"Command: Pick the container from the noisy pet bed and put it on the basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    noisy -> pet_bed [label=""attribute""];
    pick -> container [label=""object""];
    pick -> pet_bed [label=""from""];
    put -> container [label=""object""];
    put -> basket [label=""on""];
}","Command: Pick the container from the noisy pet bed and put it on the basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    noisy -> pet_bed [label=""attribute""];
    pick -> container [label=""object""];
    pick -> pet_bed [label=""from""];
    put -> container [label=""object""];
    put -> basket [label=""on""];
}"
"Command: Grab the toy from the wet plastic recycling bin and put it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic -> recycling_bin [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> recycling_bin [label=""from""];
    put -> toy [label=""object""];
    put -> above_the_fridge [label=""on""];
}","Command: Grab the toy from the wet plastic recycling bin and put it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic -> recycling_bin [label=""attribute""];
    wet -> recycling_bin [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> recycling_bin [label=""from""];
    put -> toy [label=""object""];
    put -> above_the_fridge [label=""on""];
}"
"Command: Grab the bottle opener from the oven and place it on the empty windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> windowsill [label=""attribute""];
    grab -> bottle_opener [label=""object""];
    grab -> oven [label=""from""];
    place -> bottle_opener [label=""object""];
    place -> windowsill [label=""on""];
}","Command: Grab the bottle opener from the oven and place it on the empty windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    bottle_opener [label=""bottle opener"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> windowsill [label=""attribute""];
    grab -> bottle_opener [label=""object""];
    grab -> oven [label=""from""];
    place -> bottle_opener [label=""object""];
    place -> windowsill [label=""on""];
}"
"Command: Grab the bag from the open sturdy bookshelf and leave it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    open -> bookshelf [label=""attribute""];
    sturdy -> bookshelf [label=""attribute""];
    grab -> bag [label=""object""];
    grab -> bookshelf [label=""from""];
    leave -> bag [label=""object""];
    leave -> makeup_bag [label=""on""];
}","Command: Grab the bag from the open sturdy bookshelf and leave it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    open -> bookshelf [label=""attribute""];
    sturdy -> bookshelf [label=""attribute""];
    grab -> bag [label=""object""];
    grab -> bookshelf [label=""from""];
    leave -> bag [label=""object""];
    leave -> makeup_bag [label=""on""];
}"
"Command: Take the white notebook from the corner and place it on the dark dusty tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> notebook [label=""attribute""];
    dark -> tool_rack [label=""attribute""];
    dusty -> tool_rack [label=""attribute""];
    take -> notebook [label=""object""];
    take -> corner [label=""from""];
    place -> notebook [label=""object""];
    place -> tool_rack [label=""on""];
}","Command: Take the white notebook from the corner and place it on the dark dusty tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> notebook [label=""attribute""];
    dark -> tool_rack [label=""attribute""];
    dusty -> tool_rack [label=""attribute""];
    take -> notebook [label=""object""];
    take -> corner [label=""from""];
    place -> notebook [label=""object""];
    place -> tool_rack [label=""on""];
}"
"Command: Take the frame from the bread box and put it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> frame [label=""object""];
    take -> bread_box [label=""from""];
    put -> frame [label=""object""];
    put -> pantry [label=""on""];
}","Command: Take the frame from the bread box and put it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> frame [label=""object""];
    take -> bread_box [label=""from""];
    put -> frame [label=""object""];
    put -> pantry [label=""on""];
}"
"Command: Pick the shiny black sneaker from the dark wet window sill and lay it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    shiny -> sneaker [label=""attribute""];
    black -> sneaker [label=""attribute""];
    dark -> window_sill [label=""attribute""];
    wet -> window_sill [label=""attribute""];
    pick -> sneaker [label=""object""];
    pick -> window_sill [label=""from""];
    lay -> sneaker [label=""object""];
    lay -> coat_rack [label=""on""];
}","Command: Pick the shiny black sneaker from the dark wet window sill and lay it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    shiny -> sneaker [label=""attribute""];
    black -> sneaker [label=""attribute""];
    dark -> window_sill [label=""attribute""];
    wet -> window_sill [label=""attribute""];
    pick -> sneaker [label=""object""];
    pick -> window_sill [label=""from""];
    lay -> sneaker [label=""object""];
    lay -> coat_rack [label=""on""];
}"
"Command: Lift the blue puzzle from the warm makeup bag and lay it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    warm -> makeup_bag [label=""attribute""];
    lift -> puzzle [label=""object""];
    lift -> makeup_bag [label=""from""];
    lay -> puzzle [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}","Command: Lift the blue puzzle from the warm makeup bag and lay it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    blue -> puzzle [label=""attribute""];
    warm -> makeup_bag [label=""attribute""];
    lift -> puzzle [label=""object""];
    lift -> makeup_bag [label=""from""];
    lay -> puzzle [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}"
"Command: Grab the coaster from the messy full next to the lamp and lay it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    messy -> next_to_the_lamp [label=""attribute""];
    full -> next_to_the_lamp [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> next_to_the_lamp [label=""from""];
    lay -> coaster [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Grab the coaster from the messy full next to the lamp and lay it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    messy -> next_to_the_lamp [label=""attribute""];
    full -> next_to_the_lamp [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> next_to_the_lamp [label=""from""];
    lay -> coaster [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Take the bin from the under the table and put it on the tidy rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> rack [label=""attribute""];
    take -> bin [label=""object""];
    take -> under_the_table [label=""from""];
    put -> bin [label=""object""];
    put -> rack [label=""on""];
}","Command: Take the bin from the under the table and put it on the tidy rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> rack [label=""attribute""];
    take -> bin [label=""object""];
    take -> under_the_table [label=""from""];
    put -> bin [label=""object""];
    put -> rack [label=""on""];
}"
"Command: Take the tool from the first aid box and place it on the dusty empty wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dusty -> wardrobe [label=""attribute""];
    empty -> wardrobe [label=""attribute""];
    take -> tool [label=""object""];
    take -> first_aid_box [label=""from""];
    place -> tool [label=""object""];
    place -> wardrobe [label=""on""];
}","Command: Take the tool from the first aid box and place it on the dusty empty wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dusty -> wardrobe [label=""attribute""];
    empty -> wardrobe [label=""attribute""];
    take -> tool [label=""object""];
    take -> first_aid_box [label=""from""];
    place -> tool [label=""object""];
    place -> wardrobe [label=""on""];
}"
"Command: Lift the white toy from the file cabinet and leave it on the plant pot.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    white -> toy [label=""attribute""];
    lift -> toy [label=""object""];
    lift -> file_cabinet [label=""from""];
    leave -> toy [label=""object""];
    leave -> plant_pot [label=""on""];
}","Command: Lift the white toy from the file cabinet and leave it on the plant pot.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    white -> toy [label=""attribute""];
    lift -> toy [label=""object""];
    lift -> file_cabinet [label=""from""];
    leave -> toy [label=""object""];
    leave -> plant_pot [label=""on""];
}"
"Command: Take the jacket from the toiletry shelf and place it on the bright snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> snack_shelf [label=""attribute""];
    take -> jacket [label=""object""];
    take -> toiletry_shelf [label=""from""];
    place -> jacket [label=""object""];
    place -> snack_shelf [label=""on""];
}","Command: Take the jacket from the toiletry shelf and place it on the bright snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> snack_shelf [label=""attribute""];
    take -> jacket [label=""object""];
    take -> toiletry_shelf [label=""from""];
    place -> jacket [label=""object""];
    place -> snack_shelf [label=""on""];
}"
"Command: Grab the boot from the mini fridge and lay it on the fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    grab -> boot [label=""object""];
    grab -> mini_fridge [label=""from""];
    lay -> boot [label=""object""];
    lay -> fridge_door [label=""on""];
}","Command: Grab the boot from the mini fridge and lay it on the fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    grab -> boot [label=""object""];
    grab -> mini_fridge [label=""from""];
    lay -> boot [label=""object""];
    lay -> fridge_door [label=""on""];
}"
"Command: Take the square scissors from the step stool and set it on the bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    square -> scissors [label=""attribute""];
    take -> scissors [label=""object""];
    take -> step_stool [label=""from""];
    set -> scissors [label=""object""];
    set -> bathtub [label=""on""];
}","Command: Take the square scissors from the step stool and set it on the bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    square -> scissors [label=""attribute""];
    take -> scissors [label=""object""];
    take -> step_stool [label=""from""];
    set -> scissors [label=""object""];
    set -> bathtub [label=""on""];
}"
"Command: Take the white black speaker from the armrest and lay it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> speaker [label=""attribute""];
    black -> speaker [label=""attribute""];
    take -> speaker [label=""object""];
    take -> armrest [label=""from""];
    lay -> speaker [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Take the white black speaker from the armrest and lay it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> speaker [label=""attribute""];
    black -> speaker [label=""attribute""];
    take -> speaker [label=""object""];
    take -> armrest [label=""from""];
    lay -> speaker [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Grab the fragile fuzzy lamp from the drawer top and set it on the messy wooden magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    fragile -> lamp [label=""attribute""];
    fuzzy -> lamp [label=""attribute""];
    messy -> magazine_rack [label=""attribute""];
    wooden -> magazine_rack [label=""attribute""];
    grab -> lamp [label=""object""];
    grab -> drawer_top [label=""from""];
    set -> lamp [label=""object""];
    set -> magazine_rack [label=""on""];
}","Command: Grab the fragile fuzzy lamp from the drawer top and set it on the messy wooden magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lamp [label=""lamp"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    fragile -> lamp [label=""attribute""];
    fuzzy -> lamp [label=""attribute""];
    messy -> magazine_rack [label=""attribute""];
    wooden -> magazine_rack [label=""attribute""];
    grab -> lamp [label=""object""];
    grab -> drawer_top [label=""from""];
    set -> lamp [label=""object""];
    set -> magazine_rack [label=""on""];
}"
"Command: Grab the fuzzy charger from the bright plant pot and place it on the cold stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    fuzzy -> charger [label=""attribute""];
    bright -> plant_pot [label=""attribute""];
    cold -> stand [label=""attribute""];
    grab -> charger [label=""object""];
    grab -> plant_pot [label=""from""];
    place -> charger [label=""object""];
    place -> stand [label=""on""];
}","Command: Grab the fuzzy charger from the bright plant pot and place it on the cold stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    fuzzy -> charger [label=""attribute""];
    bright -> plant_pot [label=""attribute""];
    cold -> stand [label=""attribute""];
    grab -> charger [label=""object""];
    grab -> plant_pot [label=""from""];
    place -> charger [label=""object""];
    place -> stand [label=""on""];
}"
"Command: Lift the container from the fish tank and set it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> fish_tank [label=""from""];
    set -> container [label=""object""];
    set -> above_the_fridge [label=""on""];
}","Command: Lift the container from the fish tank and set it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> fish_tank [label=""from""];
    set -> container [label=""object""];
    set -> above_the_fridge [label=""on""];
}"
"Command: Lift the square shiny tool from the makeup bag and leave it on the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> tool [label=""attribute""];
    shiny -> tool [label=""attribute""];
    lift -> tool [label=""object""];
    lift -> makeup_bag [label=""from""];
    leave -> tool [label=""object""];
    leave -> fridge [label=""on""];
}","Command: Lift the square shiny tool from the makeup bag and leave it on the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> tool [label=""attribute""];
    shiny -> tool [label=""attribute""];
    lift -> tool [label=""object""];
    lift -> makeup_bag [label=""from""];
    leave -> tool [label=""object""];
    leave -> fridge [label=""on""];
}"
"Command: Take the sneaker from the narrow clean wardrobe and put it on the closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> wardrobe [label=""attribute""];
    clean -> wardrobe [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> wardrobe [label=""from""];
    put -> sneaker [label=""object""];
    put -> closet [label=""on""];
}","Command: Take the sneaker from the narrow clean wardrobe and put it on the closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> wardrobe [label=""attribute""];
    clean -> wardrobe [label=""attribute""];
    take -> sneaker [label=""object""];
    take -> wardrobe [label=""from""];
    put -> sneaker [label=""object""];
    put -> closet [label=""on""];
}"
"Command: Grab the pillow from the bookshelf and place it on the narrow terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> terrace_table [label=""attribute""];
    grab -> pillow [label=""object""];
    grab -> bookshelf [label=""from""];
    place -> pillow [label=""object""];
    place -> terrace_table [label=""on""];
}","Command: Grab the pillow from the bookshelf and place it on the narrow terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> terrace_table [label=""attribute""];
    grab -> pillow [label=""object""];
    grab -> bookshelf [label=""from""];
    place -> pillow [label=""object""];
    place -> terrace_table [label=""on""];
}"
"Command: Lift the cracked spoon from the fridge door and leave it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> spoon [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> spoon [label=""object""];
    leave -> under_the_bed [label=""on""];
}","Command: Lift the cracked spoon from the fridge door and leave it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked -> spoon [label=""attribute""];
    lift -> spoon [label=""object""];
    lift -> fridge_door [label=""from""];
    leave -> spoon [label=""object""];
    leave -> under_the_bed [label=""on""];
}"
"Command: Pick the toothbrush from the full plastic garage and leave it on the basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    full -> garage [label=""attribute""];
    plastic -> garage [label=""attribute""];
    pick -> toothbrush [label=""object""];
    pick -> garage [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> basket [label=""on""];
}","Command: Pick the toothbrush from the full plastic garage and leave it on the basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    full -> garage [label=""attribute""];
    plastic -> garage [label=""attribute""];
    pick -> toothbrush [label=""object""];
    pick -> garage [label=""from""];
    leave -> toothbrush [label=""object""];
    leave -> basket [label=""on""];
}"
"Command: Lift the shoe from the entrance and leave it on the dry clean first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    dry -> first_aid_box [label=""attribute""];
    clean -> first_aid_box [label=""attribute""];
    lift -> shoe [label=""object""];
    lift -> entrance [label=""from""];
    leave -> shoe [label=""object""];
    leave -> first_aid_box [label=""on""];
}","Command: Lift the shoe from the entrance and leave it on the dry clean first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> first_aid_box [label=""attribute""];
    clean -> first_aid_box [label=""attribute""];
    lift -> shoe [label=""object""];
    lift -> entrance [label=""from""];
    leave -> shoe [label=""object""];
    leave -> first_aid_box [label=""on""];
}"
"Command: Take the soft cup from the first aid box and set it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> cup [label=""object""];
    take -> first_aid_box [label=""from""];
    set -> cup [label=""object""];
    set -> on_the_radiator [label=""on""];
}","Command: Take the soft cup from the first aid box and set it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> cup [label=""attribute""];
    take -> cup [label=""object""];
    take -> first_aid_box [label=""from""];
    set -> cup [label=""object""];
    set -> on_the_radiator [label=""on""];
}"
"Command: Pick the round bracelet from the cabinet and lay it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    round -> bracelet [label=""attribute""];
    pick -> bracelet [label=""object""];
    pick -> cabinet [label=""from""];
    lay -> bracelet [label=""object""];
    lay -> cabinet [label=""on""];
}","Command: Pick the round bracelet from the cabinet and lay it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    round -> bracelet [label=""attribute""];
    pick -> bracelet [label=""object""];
    pick -> cabinet [label=""from""];
    lay -> bracelet [label=""object""];
    lay -> cabinet [label=""on""];
}"
"Command: Take the shiny can from the dryer and leave it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> can [label=""attribute""];
    take -> can [label=""object""];
    take -> dryer [label=""from""];
    leave -> can [label=""object""];
    leave -> rack [label=""on""];
}","Command: Take the shiny can from the dryer and leave it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> can [label=""attribute""];
    take -> can [label=""object""];
    take -> dryer [label=""from""];
    leave -> can [label=""object""];
    leave -> rack [label=""on""];
}"
"Command: Grab the comb from the locker and place it on the ceramic tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    ceramic -> tool_rack [label=""attribute""];
    grab -> comb [label=""object""];
    grab -> locker [label=""from""];
    place -> comb [label=""object""];
    place -> tool_rack [label=""on""];
}","Command: Grab the comb from the locker and place it on the ceramic tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    ceramic -> tool_rack [label=""attribute""];
    grab -> comb [label=""object""];
    grab -> locker [label=""from""];
    place -> comb [label=""object""];
    place -> tool_rack [label=""on""];
}"
"Command: Take the smooth headphones from the wall hook and put it on the noisy warm basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    smooth -> headphones [label=""attribute""];
    noisy -> basket [label=""attribute""];
    warm -> basket [label=""attribute""];
    take -> headphones [label=""object""];
    take -> wall_hook [label=""from""];
    put -> headphones [label=""object""];
    put -> basket [label=""on""];
}","Command: Take the smooth headphones from the wall hook and put it on the noisy warm basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    smooth -> headphones [label=""attribute""];
    noisy -> basket [label=""attribute""];
    warm -> basket [label=""attribute""];
    take -> headphones [label=""object""];
    take -> wall_hook [label=""from""];
    put -> headphones [label=""object""];
    put -> basket [label=""on""];
}"
"Command: Pick the tie from the wooden warm balcony shelf and leave it on the messy empty closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wooden -> balcony_shelf [label=""attribute""];
    warm -> balcony_shelf [label=""attribute""];
    messy -> closet [label=""attribute""];
    empty -> closet [label=""attribute""];
    pick -> tie [label=""object""];
    pick -> balcony_shelf [label=""from""];
    leave -> tie [label=""object""];
    leave -> closet [label=""on""];
}","Command: Pick the tie from the wooden warm balcony shelf and leave it on the messy empty closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wooden -> balcony_shelf [label=""attribute""];
    warm -> balcony_shelf [label=""attribute""];
    messy -> closet [label=""attribute""];
    empty -> closet [label=""attribute""];
    pick -> tie [label=""object""];
    pick -> balcony_shelf [label=""from""];
    leave -> tie [label=""object""];
    leave -> closet [label=""on""];
}"
"Command: Lift the helmet from the storage box and put it on the bright kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    bright -> kitchen_drawer [label=""attribute""];
    lift -> helmet [label=""object""];
    lift -> storage_box [label=""from""];
    put -> helmet [label=""object""];
    put -> kitchen_drawer [label=""on""];
}","Command: Lift the helmet from the storage box and put it on the bright kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bright -> kitchen_drawer [label=""attribute""];
    lift -> helmet [label=""object""];
    lift -> storage_box [label=""from""];
    put -> helmet [label=""object""];
    put -> kitchen_drawer [label=""on""];
}"
"Command: Grab the wallet from the bed and put it on the ceramic toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    ceramic -> toilet [label=""attribute""];
    grab -> wallet [label=""object""];
    grab -> bed [label=""from""];
    put -> wallet [label=""object""];
    put -> toilet [label=""on""];
}","Command: Grab the wallet from the bed and put it on the ceramic toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    ceramic -> toilet [label=""attribute""];
    grab -> wallet [label=""object""];
    grab -> bed [label=""from""];
    put -> wallet [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Pick the vase from the recycling bin and lay it on the side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    pick -> vase [label=""object""];
    pick -> recycling_bin [label=""from""];
    lay -> vase [label=""object""];
    lay -> side_table [label=""on""];
}","Command: Pick the vase from the recycling bin and lay it on the side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    pick -> vase [label=""object""];
    pick -> recycling_bin [label=""from""];
    lay -> vase [label=""object""];
    lay -> side_table [label=""on""];
}"
"Command: Take the paper from the entrance and place it on the tidy spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> spice_rack [label=""attribute""];
    take -> paper [label=""object""];
    take -> entrance [label=""from""];
    place -> paper [label=""object""];
    place -> spice_rack [label=""on""];
}","Command: Take the paper from the entrance and place it on the tidy spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> spice_rack [label=""attribute""];
    take -> paper [label=""object""];
    take -> entrance [label=""from""];
    place -> paper [label=""object""];
    place -> spice_rack [label=""on""];
}"
"Command: Grab the matte key from the wet armrest and set it on the dryer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    matte -> key [label=""attribute""];
    wet -> armrest [label=""attribute""];
    grab -> key [label=""object""];
    grab -> armrest [label=""from""];
    set -> key [label=""object""];
    set -> dryer [label=""on""];
}","Command: Grab the matte key from the wet armrest and set it on the dryer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    matte -> key [label=""attribute""];
    wet -> armrest [label=""attribute""];
    grab -> key [label=""object""];
    grab -> armrest [label=""from""];
    set -> key [label=""object""];
    set -> dryer [label=""on""];
}"
"Command: Grab the bin from the noisy locker and put it on the narrow magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    noisy -> locker [label=""attribute""];
    narrow -> magazine_rack [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> locker [label=""from""];
    put -> bin [label=""object""];
    put -> magazine_rack [label=""on""];
}","Command: Grab the bin from the noisy locker and put it on the narrow magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    noisy -> locker [label=""attribute""];
    narrow -> magazine_rack [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> locker [label=""from""];
    put -> bin [label=""object""];
    put -> magazine_rack [label=""on""];
}"
"Command: Take the light lego from the closed open bathtub and lay it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    light -> lego [label=""attribute""];
    closed -> bathtub [label=""attribute""];
    open -> bathtub [label=""attribute""];
    take -> lego [label=""object""];
    take -> bathtub [label=""from""];
    lay -> lego [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Take the light lego from the closed open bathtub and lay it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    light -> lego [label=""attribute""];
    closed -> bathtub [label=""attribute""];
    open -> bathtub [label=""attribute""];
    take -> lego [label=""object""];
    take -> bathtub [label=""from""];
    lay -> lego [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Pick the fuzzy green can from the under the bed and set it on the bright noisy toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    fuzzy -> can [label=""attribute""];
    green -> can [label=""attribute""];
    bright -> toiletry_shelf [label=""attribute""];
    noisy -> toiletry_shelf [label=""attribute""];
    pick -> can [label=""object""];
    pick -> under_the_bed [label=""from""];
    set -> can [label=""object""];
    set -> toiletry_shelf [label=""on""];
}","Command: Pick the fuzzy green can from the under the bed and set it on the bright noisy toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    fuzzy -> can [label=""attribute""];
    green -> can [label=""attribute""];
    bright -> toiletry_shelf [label=""attribute""];
    noisy -> toiletry_shelf [label=""attribute""];
    pick -> can [label=""object""];
    pick -> under_the_bed [label=""from""];
    set -> can [label=""object""];
    set -> toiletry_shelf [label=""on""];
}"
"Command: Lift the round belt from the coffee table and leave it on the dry counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> belt [label=""attribute""];
    dry -> counter [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> belt [label=""object""];
    leave -> counter [label=""on""];
}","Command: Lift the round belt from the coffee table and leave it on the dry counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> belt [label=""attribute""];
    dry -> counter [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> belt [label=""object""];
    leave -> counter [label=""on""];
}"
"Command: Pick the sock from the plastic corner and put it on the tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plastic -> corner [label=""attribute""];
    pick -> sock [label=""object""];
    pick -> corner [label=""from""];
    put -> sock [label=""object""];
    put -> tv_stand [label=""on""];
}","Command: Pick the sock from the plastic corner and put it on the tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plastic -> corner [label=""attribute""];
    pick -> sock [label=""object""];
    pick -> corner [label=""from""];
    put -> sock [label=""object""];
    put -> tv_stand [label=""on""];
}"
"Command: Pick the sweater from the dry balcony shelf and lay it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> balcony_shelf [label=""attribute""];
    pick -> sweater [label=""object""];
    pick -> balcony_shelf [label=""from""];
    lay -> sweater [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Pick the sweater from the dry balcony shelf and lay it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> balcony_shelf [label=""attribute""];
    pick -> sweater [label=""object""];
    pick -> balcony_shelf [label=""from""];
    lay -> sweater [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Lift the notebook from the laundry machine and lay it on the tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    lift -> notebook [label=""object""];
    lift -> laundry_machine [label=""from""];
    lay -> notebook [label=""object""];
    lay -> tv_cabinet [label=""on""];
}","Command: Lift the notebook from the laundry machine and lay it on the tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    lift -> notebook [label=""object""];
    lift -> laundry_machine [label=""from""];
    lay -> notebook [label=""object""];
    lay -> tv_cabinet [label=""on""];
}"
"Command: Pick the bin from the cushion and lay it on the messy wet fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> fruit_bowl [label=""attribute""];
    wet -> fruit_bowl [label=""attribute""];
    pick -> bin [label=""object""];
    pick -> cushion [label=""from""];
    lay -> bin [label=""object""];
    lay -> fruit_bowl [label=""on""];
}","Command: Pick the bin from the cushion and lay it on the messy wet fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    messy -> fruit_bowl [label=""attribute""];
    wet -> fruit_bowl [label=""attribute""];
    pick -> bin [label=""object""];
    pick -> cushion [label=""from""];
    lay -> bin [label=""object""];
    lay -> fruit_bowl [label=""on""];
}"
"Command: Grab the red cable from the noisy empty balcony shelf and lay it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> cable [label=""attribute""];
    noisy -> balcony_shelf [label=""attribute""];
    empty -> balcony_shelf [label=""attribute""];
    grab -> cable [label=""object""];
    grab -> balcony_shelf [label=""from""];
    lay -> cable [label=""object""];
    lay -> floor [label=""on""];
}","Command: Grab the red cable from the noisy empty balcony shelf and lay it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> cable [label=""attribute""];
    noisy -> balcony_shelf [label=""attribute""];
    empty -> balcony_shelf [label=""attribute""];
    grab -> cable [label=""object""];
    grab -> balcony_shelf [label=""from""];
    lay -> cable [label=""object""];
    lay -> floor [label=""on""];
}"
"Command: Pick the blue letter from the noisy ceramic laundry basket and place it on the wooden open basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    blue -> letter [label=""attribute""];
    noisy -> laundry_basket [label=""attribute""];
    ceramic -> laundry_basket [label=""attribute""];
    wooden -> basket [label=""attribute""];
    open -> basket [label=""attribute""];
    pick -> letter [label=""object""];
    pick -> laundry_basket [label=""from""];
    place -> letter [label=""object""];
    place -> basket [label=""on""];
}","Command: Pick the blue letter from the noisy ceramic laundry basket and place it on the wooden open basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    blue -> letter [label=""attribute""];
    noisy -> laundry_basket [label=""attribute""];
    ceramic -> laundry_basket [label=""attribute""];
    wooden -> basket [label=""attribute""];
    open -> basket [label=""attribute""];
    pick -> letter [label=""object""];
    pick -> laundry_basket [label=""from""];
    place -> letter [label=""object""];
    place -> basket [label=""on""];
}"
"Command: Lift the matte ball from the windowsill and lay it on the plastic windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    matte -> ball [label=""attribute""];
    plastic -> windowsill [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> windowsill [label=""from""];
    lay -> ball [label=""object""];
    lay -> windowsill [label=""on""];
}","Command: Lift the matte ball from the windowsill and lay it on the plastic windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    ball [label=""ball"", shape=ellipse, fillcolor=white];
    matte -> ball [label=""attribute""];
    plastic -> windowsill [label=""attribute""];
    lift -> ball [label=""object""];
    lift -> windowsill [label=""from""];
    lay -> ball [label=""object""];
    lay -> windowsill [label=""on""];
}"
"Command: Take the blanket from the storage box and lay it on the shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    take -> blanket [label=""object""];
    take -> storage_box [label=""from""];
    lay -> blanket [label=""object""];
    lay -> shoe_rack [label=""on""];
}","Command: Take the blanket from the storage box and lay it on the shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> blanket [label=""object""];
    take -> storage_box [label=""from""];
    lay -> blanket [label=""object""];
    lay -> shoe_rack [label=""on""];
}"
"Command: Grab the hard pen from the fridge door and set it on the counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    hard -> pen [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> fridge_door [label=""from""];
    set -> pen [label=""object""];
    set -> counter [label=""on""];
}","Command: Grab the hard pen from the fridge door and set it on the counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    hard -> pen [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> fridge_door [label=""from""];
    set -> pen [label=""object""];
    set -> counter [label=""on""];
}"
"Command: Grab the monitor from the drawer and put it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> monitor [label=""object""];
    grab -> drawer [label=""from""];
    put -> monitor [label=""object""];
    put -> nightstand [label=""on""];
}","Command: Grab the monitor from the drawer and put it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> monitor [label=""object""];
    grab -> drawer [label=""from""];
    put -> monitor [label=""object""];
    put -> nightstand [label=""on""];
}"
"Command: Grab the fragile soft shirt from the ceramic closet and leave it on the bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    fragile -> shirt [label=""attribute""];
    soft -> shirt [label=""attribute""];
    ceramic -> closet [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> closet [label=""from""];
    leave -> shirt [label=""object""];
    leave -> bread_box [label=""on""];
}","Command: Grab the fragile soft shirt from the ceramic closet and leave it on the bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    fragile -> shirt [label=""attribute""];
    soft -> shirt [label=""attribute""];
    ceramic -> closet [label=""attribute""];
    grab -> shirt [label=""object""];
    grab -> closet [label=""from""];
    leave -> shirt [label=""object""];
    leave -> bread_box [label=""on""];
}"
"Command: Lift the green frame from the trash can and set it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    green -> frame [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> trash_can [label=""from""];
    set -> frame [label=""object""];
    set -> coat_rack [label=""on""];
}","Command: Lift the green frame from the trash can and set it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    green -> frame [label=""attribute""];
    lift -> frame [label=""object""];
    lift -> trash_can [label=""from""];
    set -> frame [label=""object""];
    set -> coat_rack [label=""on""];
}"
"Command: Grab the bowl from the tidy clean tv stand and leave it on the ceramic closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    tidy -> tv_stand [label=""attribute""];
    clean -> tv_stand [label=""attribute""];
    ceramic -> closet [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> tv_stand [label=""from""];
    leave -> bowl [label=""object""];
    leave -> closet [label=""on""];
}","Command: Grab the bowl from the tidy clean tv stand and leave it on the ceramic closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    bowl [label=""bowl"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tidy -> tv_stand [label=""attribute""];
    clean -> tv_stand [label=""attribute""];
    ceramic -> closet [label=""attribute""];
    grab -> bowl [label=""object""];
    grab -> tv_stand [label=""from""];
    leave -> bowl [label=""object""];
    leave -> closet [label=""on""];
}"
"Command: Pick the green plate from the narrow cabinet and set it on the empty litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    green -> plate [label=""attribute""];
    narrow -> cabinet [label=""attribute""];
    empty -> litter_box [label=""attribute""];
    pick -> plate [label=""object""];
    pick -> cabinet [label=""from""];
    set -> plate [label=""object""];
    set -> litter_box [label=""on""];
}","Command: Pick the green plate from the narrow cabinet and set it on the empty litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    green -> plate [label=""attribute""];
    narrow -> cabinet [label=""attribute""];
    empty -> litter_box [label=""attribute""];
    pick -> plate [label=""object""];
    pick -> cabinet [label=""from""];
    set -> plate [label=""object""];
    set -> litter_box [label=""on""];
}"
"Command: Pick the blue light card from the tool rack and set it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    blue -> card [label=""attribute""];
    light -> card [label=""attribute""];
    pick -> card [label=""object""];
    pick -> tool_rack [label=""from""];
    set -> card [label=""object""];
    set -> sofa [label=""on""];
}","Command: Pick the blue light card from the tool rack and set it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    blue -> card [label=""attribute""];
    light -> card [label=""attribute""];
    pick -> card [label=""object""];
    pick -> tool_rack [label=""from""];
    set -> card [label=""object""];
    set -> sofa [label=""on""];
}"
"Command: Take the matte sharp tissue from the wall shelf and put it on the warm cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte -> tissue [label=""attribute""];
    sharp -> tissue [label=""attribute""];
    warm -> cupboard [label=""attribute""];
    take -> tissue [label=""object""];
    take -> wall_shelf [label=""from""];
    put -> tissue [label=""object""];
    put -> cupboard [label=""on""];
}","Command: Take the matte sharp tissue from the wall shelf and put it on the warm cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    tissue [label=""tissue"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte -> tissue [label=""attribute""];
    sharp -> tissue [label=""attribute""];
    warm -> cupboard [label=""attribute""];
    take -> tissue [label=""object""];
    take -> wall_shelf [label=""from""];
    put -> tissue [label=""object""];
    put -> cupboard [label=""on""];
}"
"Command: Pick the blunt sharp coin from the open wooden ottoman and put it on the drawer top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> coin [label=""attribute""];
    sharp -> coin [label=""attribute""];
    open -> ottoman [label=""attribute""];
    wooden -> ottoman [label=""attribute""];
    pick -> coin [label=""object""];
    pick -> ottoman [label=""from""];
    put -> coin [label=""object""];
    put -> drawer_top [label=""on""];
}","Command: Pick the blunt sharp coin from the open wooden ottoman and put it on the drawer top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    coin [label=""coin"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> coin [label=""attribute""];
    sharp -> coin [label=""attribute""];
    open -> ottoman [label=""attribute""];
    wooden -> ottoman [label=""attribute""];
    pick -> coin [label=""object""];
    pick -> ottoman [label=""from""];
    put -> coin [label=""object""];
    put -> drawer_top [label=""on""];
}"
"Command: Lift the sharp blunt cup from the coffee table and leave it on the bookshelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    sharp -> cup [label=""attribute""];
    blunt -> cup [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> cup [label=""object""];
    leave -> bookshelf [label=""on""];
}","Command: Lift the sharp blunt cup from the coffee table and leave it on the bookshelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cup [label=""cup"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    sharp -> cup [label=""attribute""];
    blunt -> cup [label=""attribute""];
    lift -> cup [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> cup [label=""object""];
    leave -> bookshelf [label=""on""];
}"
"Command: Lift the fuzzy smooth bin from the windowsill and leave it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    fuzzy -> bin [label=""attribute""];
    smooth -> bin [label=""attribute""];
    lift -> bin [label=""object""];
    lift -> windowsill [label=""from""];
    leave -> bin [label=""object""];
    leave -> locker [label=""on""];
}","Command: Lift the fuzzy smooth bin from the windowsill and leave it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    fuzzy -> bin [label=""attribute""];
    smooth -> bin [label=""attribute""];
    lift -> bin [label=""object""];
    lift -> windowsill [label=""from""];
    leave -> bin [label=""object""];
    leave -> locker [label=""on""];
}"
"Command: Grab the pen from the medicine cabinet and put it on the warm corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    warm -> corner [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> medicine_cabinet [label=""from""];
    put -> pen [label=""object""];
    put -> corner [label=""on""];
}","Command: Grab the pen from the medicine cabinet and put it on the warm corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    warm -> corner [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> medicine_cabinet [label=""from""];
    put -> pen [label=""object""];
    put -> corner [label=""on""];
}"
"Command: Lift the broom from the makeup bag and set it on the dark table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    dark -> table [label=""attribute""];
    lift -> broom [label=""object""];
    lift -> makeup_bag [label=""from""];
    set -> broom [label=""object""];
    set -> table [label=""on""];
}","Command: Lift the broom from the makeup bag and set it on the dark table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    table [label=""table"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    broom [label=""broom"", shape=ellipse, fillcolor=white];
    dark -> table [label=""attribute""];
    lift -> broom [label=""object""];
    lift -> makeup_bag [label=""from""];
    set -> broom [label=""object""];
    set -> table [label=""on""];
}"
"Command: Grab the document from the wet basket and leave it on the noisy open desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    document [label=""document"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    wet -> basket [label=""attribute""];
    noisy -> desk_drawer [label=""attribute""];
    open -> desk_drawer [label=""attribute""];
    grab -> document [label=""object""];
    grab -> basket [label=""from""];
    leave -> document [label=""object""];
    leave -> desk_drawer [label=""on""];
}","Command: Grab the document from the wet basket and leave it on the noisy open desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    wet -> basket [label=""attribute""];
    noisy -> desk_drawer [label=""attribute""];
    open -> desk_drawer [label=""attribute""];
    grab -> document [label=""object""];
    grab -> basket [label=""from""];
    leave -> document [label=""object""];
    leave -> desk_drawer [label=""on""];
}"
"Command: Take the blue speaker from the windowsill and set it on the first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> speaker [label=""attribute""];
    take -> speaker [label=""object""];
    take -> windowsill [label=""from""];
    set -> speaker [label=""object""];
    set -> first_aid_box [label=""on""];
}","Command: Take the blue speaker from the windowsill and set it on the first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> speaker [label=""attribute""];
    take -> speaker [label=""object""];
    take -> windowsill [label=""from""];
    set -> speaker [label=""object""];
    set -> first_aid_box [label=""on""];
}"
"Command: Pick the box from the wall hook and leave it on the clean empty bookshelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    box [label=""box"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    clean -> bookshelf [label=""attribute""];
    empty -> bookshelf [label=""attribute""];
    pick -> box [label=""object""];
    pick -> wall_hook [label=""from""];
    leave -> box [label=""object""];
    leave -> bookshelf [label=""on""];
}","Command: Pick the box from the wall hook and leave it on the clean empty bookshelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    clean -> bookshelf [label=""attribute""];
    empty -> bookshelf [label=""attribute""];
    pick -> box [label=""object""];
    pick -> wall_hook [label=""from""];
    leave -> box [label=""object""];
    leave -> bookshelf [label=""on""];
}"
"Command: Take the jar from the open beside the couch and leave it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    open -> beside_the_couch [label=""attribute""];
    take -> jar [label=""object""];
    take -> beside_the_couch [label=""from""];
    leave -> jar [label=""object""];
    leave -> toilet [label=""on""];
}","Command: Take the jar from the open beside the couch and leave it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    jar [label=""jar"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    open -> beside_the_couch [label=""attribute""];
    take -> jar [label=""object""];
    take -> beside_the_couch [label=""from""];
    leave -> jar [label=""object""];
    leave -> toilet [label=""on""];
}"
"Command: Grab the sweater from the makeup bag and place it on the dry empty mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dry -> mirror_shelf [label=""attribute""];
    empty -> mirror_shelf [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> makeup_bag [label=""from""];
    place -> sweater [label=""object""];
    place -> mirror_shelf [label=""on""];
}","Command: Grab the sweater from the makeup bag and place it on the dry empty mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    dry -> mirror_shelf [label=""attribute""];
    empty -> mirror_shelf [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> makeup_bag [label=""from""];
    place -> sweater [label=""object""];
    place -> mirror_shelf [label=""on""];
}"
"Command: Pick the case from the warm tool rack and lay it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    warm -> tool_rack [label=""attribute""];
    pick -> case [label=""object""];
    pick -> tool_rack [label=""from""];
    lay -> case [label=""object""];
    lay -> rack [label=""on""];
}","Command: Pick the case from the warm tool rack and lay it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    warm -> tool_rack [label=""attribute""];
    pick -> case [label=""object""];
    pick -> tool_rack [label=""from""];
    lay -> case [label=""object""];
    lay -> rack [label=""on""];
}"
"Command: Lift the helmet from the toolbox and put it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    lift -> helmet [label=""object""];
    lift -> toolbox [label=""from""];
    put -> helmet [label=""object""];
    put -> toilet [label=""on""];
}","Command: Lift the helmet from the toolbox and put it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    helmet [label=""helmet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift -> helmet [label=""object""];
    lift -> toolbox [label=""from""];
    put -> helmet [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Pick the glossy toy from the bright narrow magazine rack and lay it on the clean tidy fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    glossy -> toy [label=""attribute""];
    bright -> magazine_rack [label=""attribute""];
    narrow -> magazine_rack [label=""attribute""];
    clean -> fridge [label=""attribute""];
    tidy -> fridge [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> magazine_rack [label=""from""];
    lay -> toy [label=""object""];
    lay -> fridge [label=""on""];
}","Command: Pick the glossy toy from the bright narrow magazine rack and lay it on the clean tidy fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toy [label=""toy"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    glossy -> toy [label=""attribute""];
    bright -> magazine_rack [label=""attribute""];
    narrow -> magazine_rack [label=""attribute""];
    clean -> fridge [label=""attribute""];
    tidy -> fridge [label=""attribute""];
    pick -> toy [label=""object""];
    pick -> magazine_rack [label=""from""];
    lay -> toy [label=""object""];
    lay -> fridge [label=""on""];
}"
"Command: Take the heavy bill from the locker and leave it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bill [label=""object""];
    take -> locker [label=""from""];
    leave -> bill [label=""object""];
    leave -> behind_the_curtain [label=""on""];
}","Command: Take the heavy bill from the locker and leave it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> bill [label=""attribute""];
    take -> bill [label=""object""];
    take -> locker [label=""from""];
    leave -> bill [label=""object""];
    leave -> behind_the_curtain [label=""on""];
}"
"Command: Grab the case from the fridge and put it on the safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> case [label=""object""];
    grab -> fridge [label=""from""];
    put -> case [label=""object""];
    put -> safe [label=""on""];
}","Command: Grab the case from the fridge and put it on the safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> case [label=""object""];
    grab -> fridge [label=""from""];
    put -> case [label=""object""];
    put -> safe [label=""on""];
}"
"Command: Grab the square black hat from the dark stand and set it on the dry shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    square -> hat [label=""attribute""];
    black -> hat [label=""attribute""];
    dark -> stand [label=""attribute""];
    dry -> shaving_kit [label=""attribute""];
    grab -> hat [label=""object""];
    grab -> stand [label=""from""];
    set -> hat [label=""object""];
    set -> shaving_kit [label=""on""];
}","Command: Grab the square black hat from the dark stand and set it on the dry shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    square -> hat [label=""attribute""];
    black -> hat [label=""attribute""];
    dark -> stand [label=""attribute""];
    dry -> shaving_kit [label=""attribute""];
    grab -> hat [label=""object""];
    grab -> stand [label=""from""];
    set -> hat [label=""object""];
    set -> shaving_kit [label=""on""];
}"
"Command: Take the envelope from the file cabinet and leave it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> envelope [label=""object""];
    take -> file_cabinet [label=""from""];
    leave -> envelope [label=""object""];
    leave -> rack [label=""on""];
}","Command: Take the envelope from the file cabinet and leave it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> envelope [label=""object""];
    take -> file_cabinet [label=""from""];
    leave -> envelope [label=""object""];
    leave -> rack [label=""on""];
}"
"Command: Pick the doll from the full sturdy bookshelf and lay it on the open balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    full -> bookshelf [label=""attribute""];
    sturdy -> bookshelf [label=""attribute""];
    open -> balcony_shelf [label=""attribute""];
    pick -> doll [label=""object""];
    pick -> bookshelf [label=""from""];
    lay -> doll [label=""object""];
    lay -> balcony_shelf [label=""on""];
}","Command: Pick the doll from the full sturdy bookshelf and lay it on the open balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    full -> bookshelf [label=""attribute""];
    sturdy -> bookshelf [label=""attribute""];
    open -> balcony_shelf [label=""attribute""];
    pick -> doll [label=""object""];
    pick -> bookshelf [label=""from""];
    lay -> doll [label=""object""];
    lay -> balcony_shelf [label=""on""];
}"
"Command: Take the necklace from the spice rack and place it on the sturdy full fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sturdy -> fish_tank [label=""attribute""];
    full -> fish_tank [label=""attribute""];
    take -> necklace [label=""object""];
    take -> spice_rack [label=""from""];
    place -> necklace [label=""object""];
    place -> fish_tank [label=""on""];
}","Command: Take the necklace from the spice rack and place it on the sturdy full fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sturdy -> fish_tank [label=""attribute""];
    full -> fish_tank [label=""attribute""];
    take -> necklace [label=""object""];
    take -> spice_rack [label=""from""];
    place -> necklace [label=""object""];
    place -> fish_tank [label=""on""];
}"
"Command: Grab the heavy light remote from the wet desk and lay it on the ceramic side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> remote [label=""attribute""];
    light -> remote [label=""attribute""];
    wet -> desk [label=""attribute""];
    ceramic -> side_table [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> desk [label=""from""];
    lay -> remote [label=""object""];
    lay -> side_table [label=""on""];
}","Command: Grab the heavy light remote from the wet desk and lay it on the ceramic side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> remote [label=""attribute""];
    light -> remote [label=""attribute""];
    wet -> desk [label=""attribute""];
    ceramic -> side_table [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> desk [label=""from""];
    lay -> remote [label=""object""];
    lay -> side_table [label=""on""];
}"
"Command: Take the marker from the table and place it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> marker [label=""object""];
    take -> table [label=""from""];
    place -> marker [label=""object""];
    place -> coat_rack [label=""on""];
}","Command: Take the marker from the table and place it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> marker [label=""object""];
    take -> table [label=""from""];
    place -> marker [label=""object""];
    place -> coat_rack [label=""on""];
}"
"Command: Lift the matte sharp case from the next to the lamp and place it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    matte -> case [label=""attribute""];
    sharp -> case [label=""attribute""];
    lift -> case [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    place -> case [label=""object""];
    place -> wall_shelf [label=""on""];
}","Command: Lift the matte sharp case from the next to the lamp and place it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    matte -> case [label=""attribute""];
    sharp -> case [label=""attribute""];
    lift -> case [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    place -> case [label=""object""];
    place -> wall_shelf [label=""on""];
}"
"Command: Take the remote from the behind the curtain and place it on the tidy dusty tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> tv_cabinet [label=""attribute""];
    dusty -> tv_cabinet [label=""attribute""];
    take -> remote [label=""object""];
    take -> behind_the_curtain [label=""from""];
    place -> remote [label=""object""];
    place -> tv_cabinet [label=""on""];
}","Command: Take the remote from the behind the curtain and place it on the tidy dusty tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> tv_cabinet [label=""attribute""];
    dusty -> tv_cabinet [label=""attribute""];
    take -> remote [label=""object""];
    take -> behind_the_curtain [label=""from""];
    place -> remote [label=""object""];
    place -> tv_cabinet [label=""on""];
}"
"Command: Take the sharp cracked hat from the makeup bag and leave it on the tidy messy table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> hat [label=""attribute""];
    cracked -> hat [label=""attribute""];
    tidy -> table [label=""attribute""];
    messy -> table [label=""attribute""];
    take -> hat [label=""object""];
    take -> makeup_bag [label=""from""];
    leave -> hat [label=""object""];
    leave -> table [label=""on""];
}","Command: Take the sharp cracked hat from the makeup bag and leave it on the tidy messy table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    hat [label=""hat"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> hat [label=""attribute""];
    cracked -> hat [label=""attribute""];
    tidy -> table [label=""attribute""];
    messy -> table [label=""attribute""];
    take -> hat [label=""object""];
    take -> makeup_bag [label=""from""];
    leave -> hat [label=""object""];
    leave -> table [label=""on""];
}"
"Command: Take the backpack from the basket and place it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    take -> backpack [label=""object""];
    take -> basket [label=""from""];
    place -> backpack [label=""object""];
    place -> mini_fridge [label=""on""];
}","Command: Take the backpack from the basket and place it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    take -> backpack [label=""object""];
    take -> basket [label=""from""];
    place -> backpack [label=""object""];
    place -> mini_fridge [label=""on""];
}"
"Command: Pick the can from the entrance and put it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick -> can [label=""object""];
    pick -> entrance [label=""from""];
    put -> can [label=""object""];
    put -> wine_rack [label=""on""];
}","Command: Pick the can from the entrance and put it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick -> can [label=""object""];
    pick -> entrance [label=""from""];
    put -> can [label=""object""];
    put -> wine_rack [label=""on""];
}"
"Command: Pick the heavy smooth marker from the fridge and set it on the bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> marker [label=""attribute""];
    smooth -> marker [label=""attribute""];
    pick -> marker [label=""object""];
    pick -> fridge [label=""from""];
    set -> marker [label=""object""];
    set -> bin [label=""on""];
}","Command: Pick the heavy smooth marker from the fridge and set it on the bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> marker [label=""attribute""];
    smooth -> marker [label=""attribute""];
    pick -> marker [label=""object""];
    pick -> fridge [label=""from""];
    set -> marker [label=""object""];
    set -> bin [label=""on""];
}"
"Command: Pick the light toothbrush from the laundry machine and put it on the cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    light -> toothbrush [label=""attribute""];
    pick -> toothbrush [label=""object""];
    pick -> laundry_machine [label=""from""];
    put -> toothbrush [label=""object""];
    put -> cutlery_drawer [label=""on""];
}","Command: Pick the light toothbrush from the laundry machine and put it on the cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    light -> toothbrush [label=""attribute""];
    pick -> toothbrush [label=""object""];
    pick -> laundry_machine [label=""from""];
    put -> toothbrush [label=""object""];
    put -> cutlery_drawer [label=""on""];
}"
"Command: Lift the shirt from the ceramic narrow fridge door and set it on the window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    ceramic -> fridge_door [label=""attribute""];
    narrow -> fridge_door [label=""attribute""];
    lift -> shirt [label=""object""];
    lift -> fridge_door [label=""from""];
    set -> shirt [label=""object""];
    set -> window_sill [label=""on""];
}","Command: Lift the shirt from the ceramic narrow fridge door and set it on the window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    ceramic -> fridge_door [label=""attribute""];
    narrow -> fridge_door [label=""attribute""];
    lift -> shirt [label=""object""];
    lift -> fridge_door [label=""from""];
    set -> shirt [label=""object""];
    set -> window_sill [label=""on""];
}"
"Command: Take the soft glass from the tidy floor and place it on the full dry shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> glass [label=""attribute""];
    tidy -> floor [label=""attribute""];
    full -> shoe_rack [label=""attribute""];
    dry -> shoe_rack [label=""attribute""];
    take -> glass [label=""object""];
    take -> floor [label=""from""];
    place -> glass [label=""object""];
    place -> shoe_rack [label=""on""];
}","Command: Take the soft glass from the tidy floor and place it on the full dry shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    soft -> glass [label=""attribute""];
    tidy -> floor [label=""attribute""];
    full -> shoe_rack [label=""attribute""];
    dry -> shoe_rack [label=""attribute""];
    take -> glass [label=""object""];
    take -> floor [label=""from""];
    place -> glass [label=""object""];
    place -> shoe_rack [label=""on""];
}"
"Command: Lift the glossy glass from the stand and lay it on the dusty bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    glossy -> glass [label=""attribute""];
    dusty -> bench [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> stand [label=""from""];
    lay -> glass [label=""object""];
    lay -> bench [label=""on""];
}","Command: Lift the glossy glass from the stand and lay it on the dusty bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    glossy -> glass [label=""attribute""];
    dusty -> bench [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> stand [label=""from""];
    lay -> glass [label=""object""];
    lay -> bench [label=""on""];
}"
"Command: Lift the keyboard from the laundry machine and set it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    lift -> keyboard [label=""object""];
    lift -> laundry_machine [label=""from""];
    set -> keyboard [label=""object""];
    set -> armrest [label=""on""];
}","Command: Lift the keyboard from the laundry machine and set it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    lift -> keyboard [label=""object""];
    lift -> laundry_machine [label=""from""];
    set -> keyboard [label=""object""];
    set -> armrest [label=""on""];
}"
"Command: Lift the hard cracked doll from the open messy cushion and put it on the ceramic stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    hard -> doll [label=""attribute""];
    cracked -> doll [label=""attribute""];
    open -> cushion [label=""attribute""];
    messy -> cushion [label=""attribute""];
    ceramic -> stove [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> cushion [label=""from""];
    put -> doll [label=""object""];
    put -> stove [label=""on""];
}","Command: Lift the hard cracked doll from the open messy cushion and put it on the ceramic stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    hard -> doll [label=""attribute""];
    cracked -> doll [label=""attribute""];
    open -> cushion [label=""attribute""];
    messy -> cushion [label=""attribute""];
    ceramic -> stove [label=""attribute""];
    lift -> doll [label=""object""];
    lift -> cushion [label=""from""];
    put -> doll [label=""object""];
    put -> stove [label=""on""];
}"
"Command: Grab the envelope from the empty trash can and lay it on the messy makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> trash_can [label=""attribute""];
    messy -> makeup_bag [label=""attribute""];
    grab -> envelope [label=""object""];
    grab -> trash_can [label=""from""];
    lay -> envelope [label=""object""];
    lay -> makeup_bag [label=""on""];
}","Command: Grab the envelope from the empty trash can and lay it on the messy makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> trash_can [label=""attribute""];
    messy -> makeup_bag [label=""attribute""];
    grab -> envelope [label=""object""];
    grab -> trash_can [label=""from""];
    lay -> envelope [label=""object""];
    lay -> makeup_bag [label=""on""];
}"
"Command: Lift the backpack from the bed and put it on the wooden warm radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wooden -> radiator [label=""attribute""];
    warm -> radiator [label=""attribute""];
    lift -> backpack [label=""object""];
    lift -> bed [label=""from""];
    put -> backpack [label=""object""];
    put -> radiator [label=""on""];
}","Command: Lift the backpack from the bed and put it on the wooden warm radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    wooden -> radiator [label=""attribute""];
    warm -> radiator [label=""attribute""];
    lift -> backpack [label=""object""];
    lift -> bed [label=""from""];
    put -> backpack [label=""object""];
    put -> radiator [label=""on""];
}"
"Command: Grab the shoe from the plastic wall hook and put it on the bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plastic -> wall_hook [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> wall_hook [label=""from""];
    put -> shoe [label=""object""];
    put -> bench [label=""on""];
}","Command: Grab the shoe from the plastic wall hook and put it on the bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plastic -> wall_hook [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> wall_hook [label=""from""];
    put -> shoe [label=""object""];
    put -> bench [label=""on""];
}"
"Command: Take the spoon from the toilet and leave it on the magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    take -> spoon [label=""object""];
    take -> toilet [label=""from""];
    leave -> spoon [label=""object""];
    leave -> magazine_rack [label=""on""];
}","Command: Take the spoon from the toilet and leave it on the magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    spoon [label=""spoon"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    take -> spoon [label=""object""];
    take -> toilet [label=""from""];
    leave -> spoon [label=""object""];
    leave -> magazine_rack [label=""on""];
}"
"Command: Pick the white blue blanket from the under the table and leave it on the first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    white -> blanket [label=""attribute""];
    blue -> blanket [label=""attribute""];
    pick -> blanket [label=""object""];
    pick -> under_the_table [label=""from""];
    leave -> blanket [label=""object""];
    leave -> first_aid_box [label=""on""];
}","Command: Pick the white blue blanket from the under the table and leave it on the first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    white -> blanket [label=""attribute""];
    blue -> blanket [label=""attribute""];
    pick -> blanket [label=""object""];
    pick -> under_the_table [label=""from""];
    leave -> blanket [label=""object""];
    leave -> first_aid_box [label=""on""];
}"
"Command: Take the receipt from the empty messy heater and place it on the first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    empty -> heater [label=""attribute""];
    messy -> heater [label=""attribute""];
    take -> receipt [label=""object""];
    take -> heater [label=""from""];
    place -> receipt [label=""object""];
    place -> first_aid_box [label=""on""];
}","Command: Take the receipt from the empty messy heater and place it on the first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> heater [label=""attribute""];
    messy -> heater [label=""attribute""];
    take -> receipt [label=""object""];
    take -> heater [label=""from""];
    place -> receipt [label=""object""];
    place -> first_aid_box [label=""on""];
}"
"Command: Take the blunt glossy plant from the laundry machine and set it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> plant [label=""attribute""];
    glossy -> plant [label=""attribute""];
    take -> plant [label=""object""];
    take -> laundry_machine [label=""from""];
    set -> plant [label=""object""];
    set -> toiletry_shelf [label=""on""];
}","Command: Take the blunt glossy plant from the laundry machine and set it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> plant [label=""attribute""];
    glossy -> plant [label=""attribute""];
    take -> plant [label=""object""];
    take -> laundry_machine [label=""from""];
    set -> plant [label=""object""];
    set -> toiletry_shelf [label=""on""];
}"
"Command: Grab the paper from the tv cabinet and leave it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    grab -> paper [label=""object""];
    grab -> tv_cabinet [label=""from""];
    leave -> paper [label=""object""];
    leave -> pantry [label=""on""];
}","Command: Grab the paper from the tv cabinet and leave it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    grab -> paper [label=""object""];
    grab -> tv_cabinet [label=""from""];
    leave -> paper [label=""object""];
    leave -> pantry [label=""on""];
}"
"Command: Lift the pen from the ceramic tidy cabinet and set it on the tool rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    ceramic -> cabinet [label=""attribute""];
    tidy -> cabinet [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> cabinet [label=""from""];
    set -> pen [label=""object""];
    set -> tool_rack [label=""on""];
}","Command: Lift the pen from the ceramic tidy cabinet and set it on the tool rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    ceramic -> cabinet [label=""attribute""];
    tidy -> cabinet [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> cabinet [label=""from""];
    set -> pen [label=""object""];
    set -> tool_rack [label=""on""];
}"
"Command: Lift the sharp light bottle from the full vacuum base and set it on the hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> bottle [label=""attribute""];
    light -> bottle [label=""attribute""];
    full -> vacuum_base [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> vacuum_base [label=""from""];
    set -> bottle [label=""object""];
    set -> hanger [label=""on""];
}","Command: Lift the sharp light bottle from the full vacuum base and set it on the hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> bottle [label=""attribute""];
    light -> bottle [label=""attribute""];
    full -> vacuum_base [label=""attribute""];
    lift -> bottle [label=""object""];
    lift -> vacuum_base [label=""from""];
    set -> bottle [label=""object""];
    set -> hanger [label=""on""];
}"
"Command: Take the fragile white clock from the open coat rack and put it on the open laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> clock [label=""attribute""];
    white -> clock [label=""attribute""];
    open -> coat_rack [label=""attribute""];
    open -> laundry_basket [label=""attribute""];
    take -> clock [label=""object""];
    take -> coat_rack [label=""from""];
    put -> clock [label=""object""];
    put -> laundry_basket [label=""on""];
}","Command: Take the fragile white clock from the open coat rack and put it on the open laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> clock [label=""attribute""];
    white -> clock [label=""attribute""];
    open -> coat_rack [label=""attribute""];
    open -> laundry_basket [label=""attribute""];
    take -> clock [label=""object""];
    take -> coat_rack [label=""from""];
    put -> clock [label=""object""];
    put -> laundry_basket [label=""on""];
}"
"Command: Lift the necklace from the laundry machine and lay it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    lift -> necklace [label=""object""];
    lift -> laundry_machine [label=""from""];
    lay -> necklace [label=""object""];
    lay -> toiletry_shelf [label=""on""];
}","Command: Lift the necklace from the laundry machine and lay it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    lift -> necklace [label=""object""];
    lift -> laundry_machine [label=""from""];
    lay -> necklace [label=""object""];
    lay -> toiletry_shelf [label=""on""];
}"
"Command: Take the marker from the bread box and put it on the toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> marker [label=""object""];
    take -> bread_box [label=""from""];
    put -> marker [label=""object""];
    put -> toolbox [label=""on""];
}","Command: Take the marker from the bread box and put it on the toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> marker [label=""object""];
    take -> bread_box [label=""from""];
    put -> marker [label=""object""];
    put -> toolbox [label=""on""];
}"
"Command: Pick the charger from the closed narrow hanger and leave it on the messy plastic balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    closed -> hanger [label=""attribute""];
    narrow -> hanger [label=""attribute""];
    messy -> balcony_shelf [label=""attribute""];
    plastic -> balcony_shelf [label=""attribute""];
    pick -> charger [label=""object""];
    pick -> hanger [label=""from""];
    leave -> charger [label=""object""];
    leave -> balcony_shelf [label=""on""];
}","Command: Pick the charger from the closed narrow hanger and leave it on the messy plastic balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    closed -> hanger [label=""attribute""];
    narrow -> hanger [label=""attribute""];
    messy -> balcony_shelf [label=""attribute""];
    plastic -> balcony_shelf [label=""attribute""];
    pick -> charger [label=""object""];
    pick -> hanger [label=""from""];
    leave -> charger [label=""object""];
    leave -> balcony_shelf [label=""on""];
}"
"Command: Grab the document from the dusty bookshelf and place it on the safe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    dusty -> bookshelf [label=""attribute""];
    grab -> document [label=""object""];
    grab -> bookshelf [label=""from""];
    place -> document [label=""object""];
    place -> safe [label=""on""];
}","Command: Grab the document from the dusty bookshelf and place it on the safe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    dusty -> bookshelf [label=""attribute""];
    grab -> document [label=""object""];
    grab -> bookshelf [label=""from""];
    place -> document [label=""object""];
    place -> safe [label=""on""];
}"
"Command: Grab the blunt square puzzle from the mini fridge and put it on the open wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> puzzle [label=""attribute""];
    square -> puzzle [label=""attribute""];
    open -> wall_hook [label=""attribute""];
    grab -> puzzle [label=""object""];
    grab -> mini_fridge [label=""from""];
    put -> puzzle [label=""object""];
    put -> wall_hook [label=""on""];
}","Command: Grab the blunt square puzzle from the mini fridge and put it on the open wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blunt -> puzzle [label=""attribute""];
    square -> puzzle [label=""attribute""];
    open -> wall_hook [label=""attribute""];
    grab -> puzzle [label=""object""];
    grab -> mini_fridge [label=""from""];
    put -> puzzle [label=""object""];
    put -> wall_hook [label=""on""];
}"
"Command: Grab the fork from the corner and leave it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    grab -> fork [label=""object""];
    grab -> corner [label=""from""];
    leave -> fork [label=""object""];
    leave -> locker [label=""on""];
}","Command: Grab the fork from the corner and leave it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    grab -> fork [label=""object""];
    grab -> corner [label=""from""];
    leave -> fork [label=""object""];
    leave -> locker [label=""on""];
}"
"Command: Grab the envelope from the makeup bag and leave it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    grab -> envelope [label=""object""];
    grab -> makeup_bag [label=""from""];
    leave -> envelope [label=""object""];
    leave -> vacuum_base [label=""on""];
}","Command: Grab the envelope from the makeup bag and leave it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    grab -> envelope [label=""object""];
    grab -> makeup_bag [label=""from""];
    leave -> envelope [label=""object""];
    leave -> vacuum_base [label=""on""];
}"
"Command: Take the headphones from the next to the lamp and place it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> headphones [label=""object""];
    take -> next_to_the_lamp [label=""from""];
    place -> headphones [label=""object""];
    place -> window_ledge [label=""on""];
}","Command: Take the headphones from the next to the lamp and place it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> headphones [label=""object""];
    take -> next_to_the_lamp [label=""from""];
    place -> headphones [label=""object""];
    place -> window_ledge [label=""on""];
}"
"Command: Lift the heavy ruler from the coffee table and leave it on the full sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    heavy -> ruler [label=""attribute""];
    full -> sink [label=""attribute""];
    lift -> ruler [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> ruler [label=""object""];
    leave -> sink [label=""on""];
}","Command: Lift the heavy ruler from the coffee table and leave it on the full sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> ruler [label=""attribute""];
    full -> sink [label=""attribute""];
    lift -> ruler [label=""object""];
    lift -> coffee_table [label=""from""];
    leave -> ruler [label=""object""];
    leave -> sink [label=""on""];
}"
"Command: Lift the puzzle from the bookshelf top and place it on the terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    lift -> puzzle [label=""object""];
    lift -> bookshelf_top [label=""from""];
    place -> puzzle [label=""object""];
    place -> terrace_table [label=""on""];
}","Command: Lift the puzzle from the bookshelf top and place it on the terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    lift -> puzzle [label=""object""];
    lift -> bookshelf_top [label=""from""];
    place -> puzzle [label=""object""];
    place -> terrace_table [label=""on""];
}"
"Command: Pick the tablet from the terrace table and place it on the fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    pick -> tablet [label=""object""];
    pick -> terrace_table [label=""from""];
    place -> tablet [label=""object""];
    place -> fridge_door [label=""on""];
}","Command: Pick the tablet from the terrace table and place it on the fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    pick -> tablet [label=""object""];
    pick -> terrace_table [label=""from""];
    place -> tablet [label=""object""];
    place -> fridge_door [label=""on""];
}"
"Command: Grab the round sock from the tv stand and lay it on the dry wet toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> sock [label=""attribute""];
    dry -> toiletry_shelf [label=""attribute""];
    wet -> toiletry_shelf [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> tv_stand [label=""from""];
    lay -> sock [label=""object""];
    lay -> toiletry_shelf [label=""on""];
}","Command: Grab the round sock from the tv stand and lay it on the dry wet toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    round -> sock [label=""attribute""];
    dry -> toiletry_shelf [label=""attribute""];
    wet -> toiletry_shelf [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> tv_stand [label=""from""];
    lay -> sock [label=""object""];
    lay -> toiletry_shelf [label=""on""];
}"
"Command: Pick the card from the shoe rack and set it on the closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    pick -> card [label=""object""];
    pick -> shoe_rack [label=""from""];
    set -> card [label=""object""];
    set -> closet [label=""on""];
}","Command: Pick the card from the shoe rack and set it on the closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    pick -> card [label=""object""];
    pick -> shoe_rack [label=""from""];
    set -> card [label=""object""];
    set -> closet [label=""on""];
}"
"Command: Lift the hard fragile scissors from the bright bin and lay it on the cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    hard -> scissors [label=""attribute""];
    fragile -> scissors [label=""attribute""];
    bright -> bin [label=""attribute""];
    lift -> scissors [label=""object""];
    lift -> bin [label=""from""];
    lay -> scissors [label=""object""];
    lay -> cushion [label=""on""];
}","Command: Lift the hard fragile scissors from the bright bin and lay it on the cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    scissors [label=""scissors"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    hard -> scissors [label=""attribute""];
    fragile -> scissors [label=""attribute""];
    bright -> bin [label=""attribute""];
    lift -> scissors [label=""object""];
    lift -> bin [label=""from""];
    lay -> scissors [label=""object""];
    lay -> cushion [label=""on""];
}"
"Command: Take the mug from the wall shelf and put it on the pet bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mug [label=""object""];
    take -> wall_shelf [label=""from""];
    put -> mug [label=""object""];
    put -> pet_bed [label=""on""];
}","Command: Take the mug from the wall shelf and put it on the pet bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> mug [label=""object""];
    take -> wall_shelf [label=""from""];
    put -> mug [label=""object""];
    put -> pet_bed [label=""on""];
}"
"Command: Grab the paper from the dry side table and put it on the bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dry -> side_table [label=""attribute""];
    grab -> paper [label=""object""];
    grab -> side_table [label=""from""];
    put -> paper [label=""object""];
    put -> bench [label=""on""];
}","Command: Grab the paper from the dry side table and put it on the bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    dry -> side_table [label=""attribute""];
    grab -> paper [label=""object""];
    grab -> side_table [label=""from""];
    put -> paper [label=""object""];
    put -> bench [label=""on""];
}"
"Command: Lift the round shoe from the heater and put it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> shoe [label=""attribute""];
    lift -> shoe [label=""object""];
    lift -> heater [label=""from""];
    put -> shoe [label=""object""];
    put -> snack_shelf [label=""on""];
}","Command: Lift the round shoe from the heater and put it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> shoe [label=""attribute""];
    lift -> shoe [label=""object""];
    lift -> heater [label=""from""];
    put -> shoe [label=""object""];
    put -> snack_shelf [label=""on""];
}"
"Command: Grab the blue matte boot from the bin and set it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    blue -> boot [label=""attribute""];
    matte -> boot [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> bin [label=""from""];
    set -> boot [label=""object""];
    set -> locker [label=""on""];
}","Command: Grab the blue matte boot from the bin and set it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    blue -> boot [label=""attribute""];
    matte -> boot [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> bin [label=""from""];
    set -> boot [label=""object""];
    set -> locker [label=""on""];
}"
"Command: Grab the round smooth case from the open shelf and place it on the fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    round -> case [label=""attribute""];
    smooth -> case [label=""attribute""];
    open -> shelf [label=""attribute""];
    grab -> case [label=""object""];
    grab -> shelf [label=""from""];
    place -> case [label=""object""];
    place -> fruit_bowl [label=""on""];
}","Command: Grab the round smooth case from the open shelf and place it on the fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    round -> case [label=""attribute""];
    smooth -> case [label=""attribute""];
    open -> shelf [label=""attribute""];
    grab -> case [label=""object""];
    grab -> shelf [label=""from""];
    place -> case [label=""object""];
    place -> fruit_bowl [label=""on""];
}"
"Command: Grab the bottle from the ceramic plastic bed and leave it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    ceramic -> bed [label=""attribute""];
    plastic -> bed [label=""attribute""];
    grab -> bottle [label=""object""];
    grab -> bed [label=""from""];
    leave -> bottle [label=""object""];
    leave -> vacuum_base [label=""on""];
}","Command: Grab the bottle from the ceramic plastic bed and leave it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    ceramic -> bed [label=""attribute""];
    plastic -> bed [label=""attribute""];
    grab -> bottle [label=""object""];
    grab -> bed [label=""from""];
    leave -> bottle [label=""object""];
    leave -> vacuum_base [label=""on""];
}"
"Command: Take the round matte boot from the messy clean cabinet and place it on the plastic snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    round -> boot [label=""attribute""];
    matte -> boot [label=""attribute""];
    messy -> cabinet [label=""attribute""];
    clean -> cabinet [label=""attribute""];
    plastic -> snack_shelf [label=""attribute""];
    take -> boot [label=""object""];
    take -> cabinet [label=""from""];
    place -> boot [label=""object""];
    place -> snack_shelf [label=""on""];
}","Command: Take the round matte boot from the messy clean cabinet and place it on the plastic snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    round -> boot [label=""attribute""];
    matte -> boot [label=""attribute""];
    messy -> cabinet [label=""attribute""];
    clean -> cabinet [label=""attribute""];
    plastic -> snack_shelf [label=""attribute""];
    take -> boot [label=""object""];
    take -> cabinet [label=""from""];
    place -> boot [label=""object""];
    place -> snack_shelf [label=""on""];
}"
"Command: Pick the monitor from the open full bookshelf top and place it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    open -> bookshelf_top [label=""attribute""];
    full -> bookshelf_top [label=""attribute""];
    pick -> monitor [label=""object""];
    pick -> bookshelf_top [label=""from""];
    place -> monitor [label=""object""];
    place -> toiletry_shelf [label=""on""];
}","Command: Pick the monitor from the open full bookshelf top and place it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    open -> bookshelf_top [label=""attribute""];
    full -> bookshelf_top [label=""attribute""];
    pick -> monitor [label=""object""];
    pick -> bookshelf_top [label=""from""];
    place -> monitor [label=""object""];
    place -> toiletry_shelf [label=""on""];
}"
"Command: Lift the brush from the pet bed and place it on the warm empty drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    warm -> drawer [label=""attribute""];
    empty -> drawer [label=""attribute""];
    lift -> brush [label=""object""];
    lift -> pet_bed [label=""from""];
    place -> brush [label=""object""];
    place -> drawer [label=""on""];
}","Command: Lift the brush from the pet bed and place it on the warm empty drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pet_bed [label=""pet bed"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    warm -> drawer [label=""attribute""];
    empty -> drawer [label=""attribute""];
    lift -> brush [label=""object""];
    lift -> pet_bed [label=""from""];
    place -> brush [label=""object""];
    place -> drawer [label=""on""];
}"
"Command: Take the matte hard wallet from the window sill and place it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> wallet [label=""attribute""];
    take -> wallet [label=""object""];
    take -> window_sill [label=""from""];
    place -> wallet [label=""object""];
    place -> next_to_the_lamp [label=""on""];
}","Command: Take the matte hard wallet from the window sill and place it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard -> wallet [label=""attribute""];
    take -> wallet [label=""object""];
    take -> window_sill [label=""from""];
    place -> wallet [label=""object""];
    place -> next_to_the_lamp [label=""on""];
}"
"Command: Grab the bin from the storage box and lay it on the cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    grab -> bin [label=""object""];
    grab -> storage_box [label=""from""];
    lay -> bin [label=""object""];
    lay -> cushion [label=""on""];
}","Command: Grab the bin from the storage box and lay it on the cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    grab -> bin [label=""object""];
    grab -> storage_box [label=""from""];
    lay -> bin [label=""object""];
    lay -> cushion [label=""on""];
}"
"Command: Take the backpack from the bed and set it on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> backpack [label=""object""];
    take -> bed [label=""from""];
    set -> backpack [label=""object""];
    set -> radiator [label=""on""];
}","Command: Take the backpack from the bed and set it on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> backpack [label=""object""];
    take -> bed [label=""from""];
    set -> backpack [label=""object""];
    set -> radiator [label=""on""];
}"
"Command: Take the blue shiny letter from the toolbox and leave it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> letter [label=""attribute""];
    shiny -> letter [label=""attribute""];
    take -> letter [label=""object""];
    take -> toolbox [label=""from""];
    leave -> letter [label=""object""];
    leave -> toiletry_shelf [label=""on""];
}","Command: Take the blue shiny letter from the toolbox and leave it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> letter [label=""attribute""];
    shiny -> letter [label=""attribute""];
    take -> letter [label=""object""];
    take -> toolbox [label=""from""];
    leave -> letter [label=""object""];
    leave -> toiletry_shelf [label=""on""];
}"
"Command: Pick the fragile smooth brush from the desk and place it on the sturdy open cutlery drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    fragile -> brush [label=""attribute""];
    smooth -> brush [label=""attribute""];
    sturdy -> cutlery_drawer [label=""attribute""];
    open -> cutlery_drawer [label=""attribute""];
    pick -> brush [label=""object""];
    pick -> desk [label=""from""];
    place -> brush [label=""object""];
    place -> cutlery_drawer [label=""on""];
}","Command: Pick the fragile smooth brush from the desk and place it on the sturdy open cutlery drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    fragile -> brush [label=""attribute""];
    smooth -> brush [label=""attribute""];
    sturdy -> cutlery_drawer [label=""attribute""];
    open -> cutlery_drawer [label=""attribute""];
    pick -> brush [label=""object""];
    pick -> desk [label=""from""];
    place -> brush [label=""object""];
    place -> cutlery_drawer [label=""on""];
}"
"Command: Grab the blue bat from the messy ceramic trash can and lay it on the wooden file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    blue -> bat [label=""attribute""];
    messy -> trash_can [label=""attribute""];
    ceramic -> trash_can [label=""attribute""];
    wooden -> file_cabinet [label=""attribute""];
    grab -> bat [label=""object""];
    grab -> trash_can [label=""from""];
    lay -> bat [label=""object""];
    lay -> file_cabinet [label=""on""];
}","Command: Grab the blue bat from the messy ceramic trash can and lay it on the wooden file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    blue -> bat [label=""attribute""];
    messy -> trash_can [label=""attribute""];
    ceramic -> trash_can [label=""attribute""];
    wooden -> file_cabinet [label=""attribute""];
    grab -> bat [label=""object""];
    grab -> trash_can [label=""from""];
    lay -> bat [label=""object""];
    lay -> file_cabinet [label=""on""];
}"
"Command: Lift the cracked heavy case from the dark cold on the radiator and lay it on the noisy stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    cracked -> case [label=""attribute""];
    heavy -> case [label=""attribute""];
    dark -> on_the_radiator [label=""attribute""];
    cold -> on_the_radiator [label=""attribute""];
    noisy -> stand [label=""attribute""];
    lift -> case [label=""object""];
    lift -> on_the_radiator [label=""from""];
    lay -> case [label=""object""];
    lay -> stand [label=""on""];
}","Command: Lift the cracked heavy case from the dark cold on the radiator and lay it on the noisy stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    cracked -> case [label=""attribute""];
    heavy -> case [label=""attribute""];
    dark -> on_the_radiator [label=""attribute""];
    cold -> on_the_radiator [label=""attribute""];
    noisy -> stand [label=""attribute""];
    lift -> case [label=""object""];
    lift -> on_the_radiator [label=""from""];
    lay -> case [label=""object""];
    lay -> stand [label=""on""];
}"
"Command: Lift the smooth brush from the noisy next to the lamp and place it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    smooth -> brush [label=""attribute""];
    noisy -> next_to_the_lamp [label=""attribute""];
    lift -> brush [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    place -> brush [label=""object""];
    place -> nightstand [label=""on""];
}","Command: Lift the smooth brush from the noisy next to the lamp and place it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    next_to_the_lamp [label=""next to the lamp"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    smooth -> brush [label=""attribute""];
    noisy -> next_to_the_lamp [label=""attribute""];
    lift -> brush [label=""object""];
    lift -> next_to_the_lamp [label=""from""];
    place -> brush [label=""object""];
    place -> nightstand [label=""on""];
}"
"Command: Grab the fuzzy tie from the laundry basket and leave it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    fuzzy -> tie [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> laundry_basket [label=""from""];
    leave -> tie [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Grab the fuzzy tie from the laundry basket and leave it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    fuzzy -> tie [label=""attribute""];
    grab -> tie [label=""object""];
    grab -> laundry_basket [label=""from""];
    leave -> tie [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Lift the wallet from the wall hook and set it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> wall_hook [label=""from""];
    set -> wallet [label=""object""];
    set -> above_the_fridge [label=""on""];
}","Command: Lift the wallet from the wall hook and set it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> wall_hook [label=""from""];
    set -> wallet [label=""object""];
    set -> above_the_fridge [label=""on""];
}"
"Command: Grab the letter from the laundry machine and lay it on the tv cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    grab -> letter [label=""object""];
    grab -> laundry_machine [label=""from""];
    lay -> letter [label=""object""];
    lay -> tv_cabinet [label=""on""];
}","Command: Grab the letter from the laundry machine and lay it on the tv cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    letter [label=""letter"", shape=ellipse, fillcolor=white];
    grab -> letter [label=""object""];
    grab -> laundry_machine [label=""from""];
    lay -> letter [label=""object""];
    lay -> tv_cabinet [label=""on""];
}"
"Command: Pick the light green tablet from the full cold toilet and leave it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    light -> tablet [label=""attribute""];
    green -> tablet [label=""attribute""];
    full -> toilet [label=""attribute""];
    cold -> toilet [label=""attribute""];
    pick -> tablet [label=""object""];
    pick -> toilet [label=""from""];
    leave -> tablet [label=""object""];
    leave -> laundry_machine [label=""on""];
}","Command: Pick the light green tablet from the full cold toilet and leave it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    light -> tablet [label=""attribute""];
    green -> tablet [label=""attribute""];
    full -> toilet [label=""attribute""];
    cold -> toilet [label=""attribute""];
    pick -> tablet [label=""object""];
    pick -> toilet [label=""from""];
    leave -> tablet [label=""object""];
    leave -> laundry_machine [label=""on""];
}"
"Command: Take the shiny glossy brush from the tidy windowsill and lay it on the closed medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> brush [label=""attribute""];
    glossy -> brush [label=""attribute""];
    tidy -> windowsill [label=""attribute""];
    closed -> medicine_cabinet [label=""attribute""];
    take -> brush [label=""object""];
    take -> windowsill [label=""from""];
    lay -> brush [label=""object""];
    lay -> medicine_cabinet [label=""on""];
}","Command: Take the shiny glossy brush from the tidy windowsill and lay it on the closed medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    shiny -> brush [label=""attribute""];
    glossy -> brush [label=""attribute""];
    tidy -> windowsill [label=""attribute""];
    closed -> medicine_cabinet [label=""attribute""];
    take -> brush [label=""object""];
    take -> windowsill [label=""from""];
    lay -> brush [label=""object""];
    lay -> medicine_cabinet [label=""on""];
}"
"Command: Take the round red coaster from the full dark shoe rack and set it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> coaster [label=""attribute""];
    full -> shoe_rack [label=""attribute""];
    dark -> shoe_rack [label=""attribute""];
    take -> coaster [label=""object""];
    take -> shoe_rack [label=""from""];
    set -> coaster [label=""object""];
    set -> on_the_radiator [label=""on""];
}","Command: Take the round red coaster from the full dark shoe rack and set it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> coaster [label=""attribute""];
    full -> shoe_rack [label=""attribute""];
    dark -> shoe_rack [label=""attribute""];
    take -> coaster [label=""object""];
    take -> shoe_rack [label=""from""];
    set -> coaster [label=""object""];
    set -> on_the_radiator [label=""on""];
}"
"Command: Lift the black fuzzy belt from the oven and put it on the dusty mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> belt [label=""attribute""];
    fuzzy -> belt [label=""attribute""];
    dusty -> mirror_shelf [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> oven [label=""from""];
    put -> belt [label=""object""];
    put -> mirror_shelf [label=""on""];
}","Command: Lift the black fuzzy belt from the oven and put it on the dusty mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    black -> belt [label=""attribute""];
    fuzzy -> belt [label=""attribute""];
    dusty -> mirror_shelf [label=""attribute""];
    lift -> belt [label=""object""];
    lift -> oven [label=""from""];
    put -> belt [label=""object""];
    put -> mirror_shelf [label=""on""];
}"
"Command: Pick the shirt from the open fish tank and set it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    open -> fish_tank [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> fish_tank [label=""from""];
    set -> shirt [label=""object""];
    set -> shelf [label=""on""];
}","Command: Pick the shirt from the open fish tank and set it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    open -> fish_tank [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> fish_tank [label=""from""];
    set -> shirt [label=""object""];
    set -> shelf [label=""on""];
}"
"Command: Take the bottle from the window sill and put it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bottle [label=""object""];
    take -> window_sill [label=""from""];
    put -> bottle [label=""object""];
    put -> window_ledge [label=""on""];
}","Command: Take the bottle from the window sill and put it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bottle [label=""object""];
    take -> window_sill [label=""from""];
    put -> bottle [label=""object""];
    put -> window_ledge [label=""on""];
}"
"Command: Take the heavy belt from the warm wardrobe and place it on the warm wet hallway.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> belt [label=""attribute""];
    warm -> wardrobe [label=""attribute""];
    warm -> hallway [label=""attribute""];
    wet -> hallway [label=""attribute""];
    take -> belt [label=""object""];
    take -> wardrobe [label=""from""];
    place -> belt [label=""object""];
    place -> hallway [label=""on""];
}","Command: Take the heavy belt from the warm wardrobe and place it on the warm wet hallway.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> belt [label=""attribute""];
    warm -> wardrobe [label=""attribute""];
    wet -> hallway [label=""attribute""];
    take -> belt [label=""object""];
    take -> wardrobe [label=""from""];
    place -> belt [label=""object""];
    place -> hallway [label=""on""];
}"
"Command: Take the doll from the wooden dark sink and place it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    wooden -> sink [label=""attribute""];
    dark -> sink [label=""attribute""];
    take -> doll [label=""object""];
    take -> sink [label=""from""];
    place -> doll [label=""object""];
    place -> bookshelf_top [label=""on""];
}","Command: Take the doll from the wooden dark sink and place it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    doll [label=""doll"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    wooden -> sink [label=""attribute""];
    dark -> sink [label=""attribute""];
    take -> doll [label=""object""];
    take -> sink [label=""from""];
    place -> doll [label=""object""];
    place -> bookshelf_top [label=""on""];
}"
"Command: Grab the cable from the makeup bag and place it on the terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    grab -> cable [label=""object""];
    grab -> makeup_bag [label=""from""];
    place -> cable [label=""object""];
    place -> terrace_table [label=""on""];
}","Command: Grab the cable from the makeup bag and place it on the terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    grab -> cable [label=""object""];
    grab -> makeup_bag [label=""from""];
    place -> cable [label=""object""];
    place -> terrace_table [label=""on""];
}"
"Command: Pick the blue coaster from the messy dusty drawer top and place it on the stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    blue -> coaster [label=""attribute""];
    messy -> drawer_top [label=""attribute""];
    dusty -> drawer_top [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> drawer_top [label=""from""];
    place -> coaster [label=""object""];
    place -> stove [label=""on""];
}","Command: Pick the blue coaster from the messy dusty drawer top and place it on the stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    drawer_top [label=""drawer top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    blue -> coaster [label=""attribute""];
    messy -> drawer_top [label=""attribute""];
    dusty -> drawer_top [label=""attribute""];
    pick -> coaster [label=""object""];
    pick -> drawer_top [label=""from""];
    place -> coaster [label=""object""];
    place -> stove [label=""on""];
}"
"Command: Lift the blunt green pen from the sturdy wooden vacuum base and place it on the cold clean fridge door.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> pen [label=""attribute""];
    green -> pen [label=""attribute""];
    sturdy -> vacuum_base [label=""attribute""];
    wooden -> vacuum_base [label=""attribute""];
    cold -> fridge_door [label=""attribute""];
    clean -> fridge_door [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> vacuum_base [label=""from""];
    place -> pen [label=""object""];
    place -> fridge_door [label=""on""];
}","Command: Lift the blunt green pen from the sturdy wooden vacuum base and place it on the cold clean fridge door.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> pen [label=""attribute""];
    green -> pen [label=""attribute""];
    sturdy -> vacuum_base [label=""attribute""];
    wooden -> vacuum_base [label=""attribute""];
    cold -> fridge_door [label=""attribute""];
    clean -> fridge_door [label=""attribute""];
    lift -> pen [label=""object""];
    lift -> vacuum_base [label=""from""];
    place -> pen [label=""object""];
    place -> fridge_door [label=""on""];
}"
"Command: Take the smooth glossy sweater from the closet and lay it on the mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> sweater [label=""attribute""];
    glossy -> sweater [label=""attribute""];
    take -> sweater [label=""object""];
    take -> closet [label=""from""];
    lay -> sweater [label=""object""];
    lay -> mirror_shelf [label=""on""];
}","Command: Take the smooth glossy sweater from the closet and lay it on the mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> sweater [label=""attribute""];
    glossy -> sweater [label=""attribute""];
    take -> sweater [label=""object""];
    take -> closet [label=""from""];
    lay -> sweater [label=""object""];
    lay -> mirror_shelf [label=""on""];
}"
"Command: Pick the blue black towel from the plastic balcony shelf and set it on the tidy garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    blue -> towel [label=""attribute""];
    black -> towel [label=""attribute""];
    plastic -> balcony_shelf [label=""attribute""];
    tidy -> garage [label=""attribute""];
    pick -> towel [label=""object""];
    pick -> balcony_shelf [label=""from""];
    set -> towel [label=""object""];
    set -> garage [label=""on""];
}","Command: Pick the blue black towel from the plastic balcony shelf and set it on the tidy garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    blue -> towel [label=""attribute""];
    black -> towel [label=""attribute""];
    plastic -> balcony_shelf [label=""attribute""];
    tidy -> garage [label=""attribute""];
    pick -> towel [label=""object""];
    pick -> balcony_shelf [label=""from""];
    set -> towel [label=""object""];
    set -> garage [label=""on""];
}"
"Command: Lift the backpack from the terrace table and put it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    lift -> backpack [label=""object""];
    lift -> terrace_table [label=""from""];
    put -> backpack [label=""object""];
    put -> shelf [label=""on""];
}","Command: Lift the backpack from the terrace table and put it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    lift -> backpack [label=""object""];
    lift -> terrace_table [label=""from""];
    put -> backpack [label=""object""];
    put -> shelf [label=""on""];
}"
"Command: Grab the cracked bat from the tidy drawer and place it on the corner.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    cracked -> bat [label=""attribute""];
    tidy -> drawer [label=""attribute""];
    grab -> bat [label=""object""];
    grab -> drawer [label=""from""];
    place -> bat [label=""object""];
    place -> corner [label=""on""];
}","Command: Grab the cracked bat from the tidy drawer and place it on the corner.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    bat [label=""bat"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    cracked -> bat [label=""attribute""];
    tidy -> drawer [label=""attribute""];
    grab -> bat [label=""object""];
    grab -> drawer [label=""from""];
    place -> bat [label=""object""];
    place -> corner [label=""on""];
}"
"Command: Lift the smooth shiny charger from the dryer and put it on the wooden warm closet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    smooth -> charger [label=""attribute""];
    shiny -> charger [label=""attribute""];
    wooden -> closet [label=""attribute""];
    warm -> closet [label=""attribute""];
    lift -> charger [label=""object""];
    lift -> dryer [label=""from""];
    put -> charger [label=""object""];
    put -> closet [label=""on""];
}","Command: Lift the smooth shiny charger from the dryer and put it on the wooden warm closet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    closet [label=""closet"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    smooth -> charger [label=""attribute""];
    shiny -> charger [label=""attribute""];
    wooden -> closet [label=""attribute""];
    warm -> closet [label=""attribute""];
    lift -> charger [label=""object""];
    lift -> dryer [label=""from""];
    put -> charger [label=""object""];
    put -> closet [label=""on""];
}"
"Command: Grab the shoe from the messy dusty mirror shelf and place it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> mirror_shelf [label=""attribute""];
    dusty -> mirror_shelf [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> mirror_shelf [label=""from""];
    place -> shoe [label=""object""];
    place -> coat_rack [label=""on""];
}","Command: Grab the shoe from the messy dusty mirror shelf and place it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    messy -> mirror_shelf [label=""attribute""];
    dusty -> mirror_shelf [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> mirror_shelf [label=""from""];
    place -> shoe [label=""object""];
    place -> coat_rack [label=""on""];
}"
"Command: Grab the heavy red bin from the ceramic tidy mini fridge and place it on the cupboard.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> bin [label=""attribute""];
    red -> bin [label=""attribute""];
    ceramic -> mini_fridge [label=""attribute""];
    tidy -> mini_fridge [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> mini_fridge [label=""from""];
    place -> bin [label=""object""];
    place -> cupboard [label=""on""];
}","Command: Grab the heavy red bin from the ceramic tidy mini fridge and place it on the cupboard.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cupboard [label=""cupboard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> bin [label=""attribute""];
    red -> bin [label=""attribute""];
    ceramic -> mini_fridge [label=""attribute""];
    tidy -> mini_fridge [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> mini_fridge [label=""from""];
    place -> bin [label=""object""];
    place -> cupboard [label=""on""];
}"
"Command: Grab the cracked sneaker from the wet bright litter box and leave it on the open oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cracked -> sneaker [label=""attribute""];
    wet -> litter_box [label=""attribute""];
    bright -> litter_box [label=""attribute""];
    open -> oven [label=""attribute""];
    grab -> sneaker [label=""object""];
    grab -> litter_box [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> oven [label=""on""];
}","Command: Grab the cracked sneaker from the wet bright litter box and leave it on the open oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cracked -> sneaker [label=""attribute""];
    wet -> litter_box [label=""attribute""];
    bright -> litter_box [label=""attribute""];
    open -> oven [label=""attribute""];
    grab -> sneaker [label=""object""];
    grab -> litter_box [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> oven [label=""on""];
}"
"Command: Grab the remote from the clean dry oven and set it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    clean -> oven [label=""attribute""];
    dry -> oven [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> oven [label=""from""];
    set -> remote [label=""object""];
    set -> shelf [label=""on""];
}","Command: Grab the remote from the clean dry oven and set it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    clean -> oven [label=""attribute""];
    dry -> oven [label=""attribute""];
    grab -> remote [label=""object""];
    grab -> oven [label=""from""];
    set -> remote [label=""object""];
    set -> shelf [label=""on""];
}"
"Command: Lift the matte sharp towel from the clean wooden tv cabinet and leave it on the coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    matte -> towel [label=""attribute""];
    sharp -> towel [label=""attribute""];
    clean -> tv_cabinet [label=""attribute""];
    wooden -> tv_cabinet [label=""attribute""];
    lift -> towel [label=""object""];
    lift -> tv_cabinet [label=""from""];
    leave -> towel [label=""object""];
    leave -> coat_rack [label=""on""];
}","Command: Lift the matte sharp towel from the clean wooden tv cabinet and leave it on the coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    matte -> towel [label=""attribute""];
    sharp -> towel [label=""attribute""];
    clean -> tv_cabinet [label=""attribute""];
    wooden -> tv_cabinet [label=""attribute""];
    lift -> towel [label=""object""];
    lift -> tv_cabinet [label=""from""];
    leave -> towel [label=""object""];
    leave -> coat_rack [label=""on""];
}"
"Command: Take the shoe from the tv cabinet and set it on the plastic dry storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plastic -> storage_box [label=""attribute""];
    dry -> storage_box [label=""attribute""];
    take -> shoe [label=""object""];
    take -> tv_cabinet [label=""from""];
    set -> shoe [label=""object""];
    set -> storage_box [label=""on""];
}","Command: Take the shoe from the tv cabinet and set it on the plastic dry storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plastic -> storage_box [label=""attribute""];
    dry -> storage_box [label=""attribute""];
    take -> shoe [label=""object""];
    take -> tv_cabinet [label=""from""];
    set -> shoe [label=""object""];
    set -> storage_box [label=""on""];
}"
"Command: Grab the coaster from the sturdy vacuum base and place it on the laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    sturdy -> vacuum_base [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> vacuum_base [label=""from""];
    place -> coaster [label=""object""];
    place -> laundry_basket [label=""on""];
}","Command: Grab the coaster from the sturdy vacuum base and place it on the laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coaster [label=""coaster"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    sturdy -> vacuum_base [label=""attribute""];
    grab -> coaster [label=""object""];
    grab -> vacuum_base [label=""from""];
    place -> coaster [label=""object""];
    place -> laundry_basket [label=""on""];
}"
"Command: Pick the pillow from the bookshelf top and lay it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    pick -> pillow [label=""object""];
    pick -> bookshelf_top [label=""from""];
    lay -> pillow [label=""object""];
    lay -> locker [label=""on""];
}","Command: Pick the pillow from the bookshelf top and lay it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    pick -> pillow [label=""object""];
    pick -> bookshelf_top [label=""from""];
    lay -> pillow [label=""object""];
    lay -> locker [label=""on""];
}"
"Command: Take the puzzle from the entrance and put it on the dark litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> litter_box [label=""attribute""];
    take -> puzzle [label=""object""];
    take -> entrance [label=""from""];
    put -> puzzle [label=""object""];
    put -> litter_box [label=""on""];
}","Command: Take the puzzle from the entrance and put it on the dark litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> litter_box [label=""attribute""];
    take -> puzzle [label=""object""];
    take -> entrance [label=""from""];
    put -> puzzle [label=""object""];
    put -> litter_box [label=""on""];
}"
"Command: Lift the remote from the wet empty wall shelf and leave it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wet -> wall_shelf [label=""attribute""];
    empty -> wall_shelf [label=""attribute""];
    lift -> remote [label=""object""];
    lift -> wall_shelf [label=""from""];
    leave -> remote [label=""object""];
    leave -> bed [label=""on""];
}","Command: Lift the remote from the wet empty wall shelf and leave it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    remote [label=""remote"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    wet -> wall_shelf [label=""attribute""];
    empty -> wall_shelf [label=""attribute""];
    lift -> remote [label=""object""];
    lift -> wall_shelf [label=""from""];
    leave -> remote [label=""object""];
    leave -> bed [label=""on""];
}"
"Command: Take the bracelet from the step stool and leave it on the spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bracelet [label=""object""];
    take -> step_stool [label=""from""];
    leave -> bracelet [label=""object""];
    leave -> spice_rack [label=""on""];
}","Command: Take the bracelet from the step stool and leave it on the spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    bracelet [label=""bracelet"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> bracelet [label=""object""];
    take -> step_stool [label=""from""];
    leave -> bracelet [label=""object""];
    leave -> spice_rack [label=""on""];
}"
"Command: Take the blunt belt from the stand and leave it on the closed bread box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> belt [label=""attribute""];
    closed -> bread_box [label=""attribute""];
    take -> belt [label=""object""];
    take -> stand [label=""from""];
    leave -> belt [label=""object""];
    leave -> bread_box [label=""on""];
}","Command: Take the blunt belt from the stand and leave it on the closed bread box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> belt [label=""attribute""];
    closed -> bread_box [label=""attribute""];
    take -> belt [label=""object""];
    take -> stand [label=""from""];
    leave -> belt [label=""object""];
    leave -> bread_box [label=""on""];
}"
"Command: Lift the ruler from the sofa and leave it on the dry garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> garage [label=""attribute""];
    lift -> ruler [label=""object""];
    lift -> sofa [label=""from""];
    leave -> ruler [label=""object""];
    leave -> garage [label=""on""];
}","Command: Lift the ruler from the sofa and leave it on the dry garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    ruler [label=""ruler"", shape=ellipse, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> garage [label=""attribute""];
    lift -> ruler [label=""object""];
    lift -> sofa [label=""from""];
    leave -> ruler [label=""object""];
    leave -> garage [label=""on""];
}"
"Command: Pick the phone from the clean full microwave and lay it on the plastic windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    clean -> microwave [label=""attribute""];
    full -> microwave [label=""attribute""];
    plastic -> windowsill [label=""attribute""];
    pick -> phone [label=""object""];
    pick -> microwave [label=""from""];
    lay -> phone [label=""object""];
    lay -> windowsill [label=""on""];
}","Command: Pick the phone from the clean full microwave and lay it on the plastic windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    clean -> microwave [label=""attribute""];
    full -> microwave [label=""attribute""];
    plastic -> windowsill [label=""attribute""];
    pick -> phone [label=""object""];
    pick -> microwave [label=""from""];
    lay -> phone [label=""object""];
    lay -> windowsill [label=""on""];
}"
"Command: Pick the fragile hard thermos from the noisy cold cutlery drawer and place it on the open cushion.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    fragile -> thermos [label=""attribute""];
    hard -> thermos [label=""attribute""];
    noisy -> cutlery_drawer [label=""attribute""];
    cold -> cutlery_drawer [label=""attribute""];
    open -> cushion [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    place -> thermos [label=""object""];
    place -> cushion [label=""on""];
}","Command: Pick the fragile hard thermos from the noisy cold cutlery drawer and place it on the open cushion.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    thermos [label=""thermos"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    fragile -> thermos [label=""attribute""];
    hard -> thermos [label=""attribute""];
    noisy -> cutlery_drawer [label=""attribute""];
    cold -> cutlery_drawer [label=""attribute""];
    open -> cushion [label=""attribute""];
    pick -> thermos [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    place -> thermos [label=""object""];
    place -> cushion [label=""on""];
}"
"Command: Pick the vase from the storage box and leave it on the armrest.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    pick -> vase [label=""object""];
    pick -> storage_box [label=""from""];
    leave -> vase [label=""object""];
    leave -> armrest [label=""on""];
}","Command: Pick the vase from the storage box and leave it on the armrest.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vase [label=""vase"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    armrest [label=""armrest"", shape=ellipse, fillcolor=white];
    pick -> vase [label=""object""];
    pick -> storage_box [label=""from""];
    leave -> vase [label=""object""];
    leave -> armrest [label=""on""];
}"
"Command: Grab the knife from the plastic noisy kitchen island and lay it on the empty recycling bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    plastic -> kitchen_island [label=""attribute""];
    noisy -> kitchen_island [label=""attribute""];
    empty -> recycling_bin [label=""attribute""];
    grab -> knife [label=""object""];
    grab -> kitchen_island [label=""from""];
    lay -> knife [label=""object""];
    lay -> recycling_bin [label=""on""];
}","Command: Grab the knife from the plastic noisy kitchen island and lay it on the empty recycling bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    plastic -> kitchen_island [label=""attribute""];
    noisy -> kitchen_island [label=""attribute""];
    empty -> recycling_bin [label=""attribute""];
    grab -> knife [label=""object""];
    grab -> kitchen_island [label=""from""];
    lay -> knife [label=""object""];
    lay -> recycling_bin [label=""on""];
}"
"Command: Take the blunt mirror from the wall hook and put it on the dusty ceramic wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> mirror [label=""attribute""];
    dusty -> wine_rack [label=""attribute""];
    ceramic -> wine_rack [label=""attribute""];
    take -> mirror [label=""object""];
    take -> wall_hook [label=""from""];
    put -> mirror [label=""object""];
    put -> wine_rack [label=""on""];
}","Command: Take the blunt mirror from the wall hook and put it on the dusty ceramic wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    mirror [label=""mirror"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blunt -> mirror [label=""attribute""];
    dusty -> wine_rack [label=""attribute""];
    ceramic -> wine_rack [label=""attribute""];
    take -> mirror [label=""object""];
    take -> wall_hook [label=""from""];
    put -> mirror [label=""object""];
    put -> wine_rack [label=""on""];
}"
"Command: Take the lego from the dark bookshelf and lay it on the dark toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> bookshelf [label=""attribute""];
    dark -> toilet [label=""attribute""];
    take -> lego [label=""object""];
    take -> bookshelf [label=""from""];
    lay -> lego [label=""object""];
    lay -> toilet [label=""on""];
}","Command: Take the lego from the dark bookshelf and lay it on the dark toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    dark -> bookshelf [label=""attribute""];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> toilet [label=""attribute""];
    take -> lego [label=""object""];
    take -> bookshelf [label=""from""];
    lay -> lego [label=""object""];
    lay -> toilet [label=""on""];
}"
"Command: Take the sharp hard wallet from the empty bathtub and set it on the full clean toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    sharp -> wallet [label=""attribute""];
    hard -> wallet [label=""attribute""];
    empty -> bathtub [label=""attribute""];
    full -> toilet [label=""attribute""];
    clean -> toilet [label=""attribute""];
    take -> wallet [label=""object""];
    take -> bathtub [label=""from""];
    set -> wallet [label=""object""];
    set -> toilet [label=""on""];
}","Command: Take the sharp hard wallet from the empty bathtub and set it on the full clean toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    wallet [label=""wallet"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> wallet [label=""attribute""];
    hard -> wallet [label=""attribute""];
    empty -> bathtub [label=""attribute""];
    full -> toilet [label=""attribute""];
    clean -> toilet [label=""attribute""];
    take -> wallet [label=""object""];
    take -> bathtub [label=""from""];
    set -> wallet [label=""object""];
    set -> toilet [label=""on""];
}"
"Command: Lift the black cracked headphones from the garden box and set it on the oven.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> headphones [label=""attribute""];
    cracked -> headphones [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> garden_box [label=""from""];
    set -> headphones [label=""object""];
    set -> oven [label=""on""];
}","Command: Lift the black cracked headphones from the garden box and set it on the oven.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> headphones [label=""attribute""];
    cracked -> headphones [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> garden_box [label=""from""];
    set -> headphones [label=""object""];
    set -> oven [label=""on""];
}"
"Command: Take the slipper from the above the fridge and set it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> above_the_fridge [label=""from""];
    set -> slipper [label=""object""];
    set -> under_the_bed [label=""on""];
}","Command: Take the slipper from the above the fridge and set it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> slipper [label=""object""];
    take -> above_the_fridge [label=""from""];
    set -> slipper [label=""object""];
    set -> under_the_bed [label=""on""];
}"
"Command: Pick the can from the kitchen island and leave it on the coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    pick -> can [label=""object""];
    pick -> kitchen_island [label=""from""];
    leave -> can [label=""object""];
    leave -> coat_shelf [label=""on""];
}","Command: Pick the can from the kitchen island and leave it on the coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    can [label=""can"", shape=ellipse, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    pick -> can [label=""object""];
    pick -> kitchen_island [label=""from""];
    leave -> can [label=""object""];
    leave -> coat_shelf [label=""on""];
}"
"Command: Take the hard matte marker from the first aid box and put it on the dark plant pot.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    hard -> marker [label=""attribute""];
    matte -> marker [label=""attribute""];
    dark -> plant_pot [label=""attribute""];
    take -> marker [label=""object""];
    take -> first_aid_box [label=""from""];
    put -> marker [label=""object""];
    put -> plant_pot [label=""on""];
}","Command: Take the hard matte marker from the first aid box and put it on the dark plant pot.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    hard -> marker [label=""attribute""];
    matte -> marker [label=""attribute""];
    dark -> plant_pot [label=""attribute""];
    take -> marker [label=""object""];
    take -> first_aid_box [label=""from""];
    put -> marker [label=""object""];
    put -> plant_pot [label=""on""];
}"
"Command: Grab the square necklace from the bright closed bathtub and lay it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    square -> necklace [label=""attribute""];
    bright -> bathtub [label=""attribute""];
    closed -> bathtub [label=""attribute""];
    grab -> necklace [label=""object""];
    grab -> bathtub [label=""from""];
    lay -> necklace [label=""object""];
    lay -> wardrobe [label=""on""];
}","Command: Grab the square necklace from the bright closed bathtub and lay it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    necklace [label=""necklace"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    square [label=""square"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    square -> necklace [label=""attribute""];
    bright -> bathtub [label=""attribute""];
    closed -> bathtub [label=""attribute""];
    grab -> necklace [label=""object""];
    grab -> bathtub [label=""from""];
    lay -> necklace [label=""object""];
    lay -> wardrobe [label=""on""];
}"
"Command: Lift the marker from the empty kitchen drawer and put it on the noisy floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> kitchen_drawer [label=""attribute""];
    noisy -> floor [label=""attribute""];
    lift -> marker [label=""object""];
    lift -> kitchen_drawer [label=""from""];
    put -> marker [label=""object""];
    put -> floor [label=""on""];
}","Command: Lift the marker from the empty kitchen drawer and put it on the noisy floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    marker [label=""marker"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> kitchen_drawer [label=""attribute""];
    noisy -> floor [label=""attribute""];
    lift -> marker [label=""object""];
    lift -> kitchen_drawer [label=""from""];
    put -> marker [label=""object""];
    put -> floor [label=""on""];
}"
"Command: Pick the puzzle from the laundry machine and place it on the side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    pick -> puzzle [label=""object""];
    pick -> laundry_machine [label=""from""];
    place -> puzzle [label=""object""];
    place -> side_table [label=""on""];
}","Command: Pick the puzzle from the laundry machine and place it on the side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    puzzle [label=""puzzle"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    pick -> puzzle [label=""object""];
    pick -> laundry_machine [label=""from""];
    place -> puzzle [label=""object""];
    place -> side_table [label=""on""];
}"
"Command: Pick the paper from the under the bed and lay it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pick -> paper [label=""object""];
    pick -> under_the_bed [label=""from""];
    lay -> paper [label=""object""];
    lay -> wall_shelf [label=""on""];
}","Command: Pick the paper from the under the bed and lay it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    under_the_bed [label=""under the bed"", shape=ellipse, fillcolor=white];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    pick -> paper [label=""object""];
    pick -> under_the_bed [label=""from""];
    lay -> paper [label=""object""];
    lay -> wall_shelf [label=""on""];
}"
"Command: Pick the blue stapler from the recycling bin and leave it on the side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    blue -> stapler [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> recycling_bin [label=""from""];
    leave -> stapler [label=""object""];
    leave -> side_table [label=""on""];
}","Command: Pick the blue stapler from the recycling bin and leave it on the side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    blue -> stapler [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> recycling_bin [label=""from""];
    leave -> stapler [label=""object""];
    leave -> side_table [label=""on""];
}"
"Command: Pick the blue blanket from the first aid box and put it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    blue -> blanket [label=""attribute""];
    pick -> blanket [label=""object""];
    pick -> first_aid_box [label=""from""];
    put -> blanket [label=""object""];
    put -> rack [label=""on""];
}","Command: Pick the blue blanket from the first aid box and put it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    blue -> blanket [label=""attribute""];
    pick -> blanket [label=""object""];
    pick -> first_aid_box [label=""from""];
    put -> blanket [label=""object""];
    put -> rack [label=""on""];
}"
"Command: Pick the fuzzy soft key from the balcony shelf and put it on the storage box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> key [label=""attribute""];
    soft -> key [label=""attribute""];
    pick -> key [label=""object""];
    pick -> balcony_shelf [label=""from""];
    put -> key [label=""object""];
    put -> storage_box [label=""on""];
}","Command: Pick the fuzzy soft key from the balcony shelf and put it on the storage box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    key [label=""key"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> key [label=""attribute""];
    soft -> key [label=""attribute""];
    pick -> key [label=""object""];
    pick -> balcony_shelf [label=""from""];
    put -> key [label=""object""];
    put -> storage_box [label=""on""];
}"
"Command: Pick the key from the kitchen drawer and place it on the dusty noisy hanger.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    dusty -> hanger [label=""attribute""];
    noisy -> hanger [label=""attribute""];
    pick -> key [label=""object""];
    pick -> kitchen_drawer [label=""from""];
    place -> key [label=""object""];
    place -> hanger [label=""on""];
}","Command: Pick the key from the kitchen drawer and place it on the dusty noisy hanger.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    key [label=""key"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    dusty -> hanger [label=""attribute""];
    noisy -> hanger [label=""attribute""];
    pick -> key [label=""object""];
    pick -> kitchen_drawer [label=""from""];
    place -> key [label=""object""];
    place -> hanger [label=""on""];
}"
"Command: Pick the soft blue pen from the fridge door and lay it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    soft -> pen [label=""attribute""];
    blue -> pen [label=""attribute""];
    pick -> pen [label=""object""];
    pick -> fridge_door [label=""from""];
    lay -> pen [label=""object""];
    lay -> garage [label=""on""];
}","Command: Pick the soft blue pen from the fridge door and lay it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    soft -> pen [label=""attribute""];
    blue -> pen [label=""attribute""];
    pick -> pen [label=""object""];
    pick -> fridge_door [label=""from""];
    lay -> pen [label=""object""];
    lay -> garage [label=""on""];
}"
"Command: Lift the phone from the noisy fish tank and set it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    noisy -> fish_tank [label=""attribute""];
    lift -> phone [label=""object""];
    lift -> fish_tank [label=""from""];
    set -> phone [label=""object""];
    set -> window_ledge [label=""on""];
}","Command: Lift the phone from the noisy fish tank and set it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    noisy -> fish_tank [label=""attribute""];
    lift -> phone [label=""object""];
    lift -> fish_tank [label=""from""];
    set -> phone [label=""object""];
    set -> window_ledge [label=""on""];
}"
"Command: Grab the drill from the fish tank and set it on the empty sturdy bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> bench [label=""attribute""];
    sturdy -> bench [label=""attribute""];
    grab -> drill [label=""object""];
    grab -> fish_tank [label=""from""];
    set -> drill [label=""object""];
    set -> bench [label=""on""];
}","Command: Grab the drill from the fish tank and set it on the empty sturdy bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> bench [label=""attribute""];
    sturdy -> bench [label=""attribute""];
    grab -> drill [label=""object""];
    grab -> fish_tank [label=""from""];
    set -> drill [label=""object""];
    set -> bench [label=""on""];
}"
"Command: Pick the sharp black hammer from the empty trash can and leave it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    sharp -> hammer [label=""attribute""];
    black -> hammer [label=""attribute""];
    empty -> trash_can [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> trash_can [label=""from""];
    leave -> hammer [label=""object""];
    leave -> coffee_table [label=""on""];
}","Command: Pick the sharp black hammer from the empty trash can and leave it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    sharp -> hammer [label=""attribute""];
    black -> hammer [label=""attribute""];
    empty -> trash_can [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> trash_can [label=""from""];
    leave -> hammer [label=""object""];
    leave -> coffee_table [label=""on""];
}"
"Command: Pick the monitor from the terrace table and place it on the closed noisy magazine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    closed -> magazine_rack [label=""attribute""];
    noisy -> magazine_rack [label=""attribute""];
    pick -> monitor [label=""object""];
    pick -> terrace_table [label=""from""];
    place -> monitor [label=""object""];
    place -> magazine_rack [label=""on""];
}","Command: Pick the monitor from the terrace table and place it on the closed noisy magazine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    closed -> magazine_rack [label=""attribute""];
    noisy -> magazine_rack [label=""attribute""];
    pick -> monitor [label=""object""];
    pick -> terrace_table [label=""from""];
    place -> monitor [label=""object""];
    place -> magazine_rack [label=""on""];
}"
"Command: Grab the red blunt speaker from the radiator and put it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> speaker [label=""attribute""];
    blunt -> speaker [label=""attribute""];
    grab -> speaker [label=""object""];
    grab -> radiator [label=""from""];
    put -> speaker [label=""object""];
    put -> laundry_machine [label=""on""];
}","Command: Grab the red blunt speaker from the radiator and put it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> speaker [label=""attribute""];
    blunt -> speaker [label=""attribute""];
    grab -> speaker [label=""object""];
    grab -> radiator [label=""from""];
    put -> speaker [label=""object""];
    put -> laundry_machine [label=""on""];
}"
"Command: Pick the plate from the microwave and set it on the spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick -> plate [label=""object""];
    pick -> microwave [label=""from""];
    set -> plate [label=""object""];
    set -> spice_rack [label=""on""];
}","Command: Pick the plate from the microwave and set it on the spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    pick -> plate [label=""object""];
    pick -> microwave [label=""from""];
    set -> plate [label=""object""];
    set -> spice_rack [label=""on""];
}"
"Command: Take the glossy shiny mouse from the floor and lay it on the counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> mouse [label=""attribute""];
    shiny -> mouse [label=""attribute""];
    take -> mouse [label=""object""];
    take -> floor [label=""from""];
    lay -> mouse [label=""object""];
    lay -> counter [label=""on""];
}","Command: Take the glossy shiny mouse from the floor and lay it on the counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    shiny [label=""shiny"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    glossy -> mouse [label=""attribute""];
    shiny -> mouse [label=""attribute""];
    take -> mouse [label=""object""];
    take -> floor [label=""from""];
    lay -> mouse [label=""object""];
    lay -> counter [label=""on""];
}"
"Command: Grab the red hard can from the plastic tidy window sill and put it on the dusty fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    red [label=""red"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> can [label=""attribute""];
    hard -> can [label=""attribute""];
    plastic -> window_sill [label=""attribute""];
    tidy -> window_sill [label=""attribute""];
    dusty -> fridge [label=""attribute""];
    grab -> can [label=""object""];
    grab -> window_sill [label=""from""];
    put -> can [label=""object""];
    put -> fridge [label=""on""];
}","Command: Grab the red hard can from the plastic tidy window sill and put it on the dusty fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> can [label=""attribute""];
    hard -> can [label=""attribute""];
    plastic -> window_sill [label=""attribute""];
    tidy -> window_sill [label=""attribute""];
    dusty -> fridge [label=""attribute""];
    grab -> can [label=""object""];
    grab -> window_sill [label=""from""];
    put -> can [label=""object""];
    put -> fridge [label=""on""];
}"
"Command: Pick the light red boot from the window sill and put it on the open cold counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    light -> boot [label=""attribute""];
    red -> boot [label=""attribute""];
    open -> counter [label=""attribute""];
    cold -> counter [label=""attribute""];
    pick -> boot [label=""object""];
    pick -> window_sill [label=""from""];
    put -> boot [label=""object""];
    put -> counter [label=""on""];
}","Command: Pick the light red boot from the window sill and put it on the open cold counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    light [label=""light"", shape=ellipse, fillcolor=white];
    light -> boot [label=""attribute""];
    red -> boot [label=""attribute""];
    open -> counter [label=""attribute""];
    cold -> counter [label=""attribute""];
    pick -> boot [label=""object""];
    pick -> window_sill [label=""from""];
    put -> boot [label=""object""];
    put -> counter [label=""on""];
}"
"Command: Take the speaker from the coffee table and place it on the floor.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> speaker [label=""object""];
    take -> coffee_table [label=""from""];
    place -> speaker [label=""object""];
    place -> floor [label=""on""];
}","Command: Take the speaker from the coffee table and place it on the floor.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    speaker [label=""speaker"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> speaker [label=""object""];
    take -> coffee_table [label=""from""];
    place -> speaker [label=""object""];
    place -> floor [label=""on""];
}"
"Command: Lift the jacket from the garden box and set it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift -> jacket [label=""object""];
    lift -> garden_box [label=""from""];
    set -> jacket [label=""object""];
    set -> shaving_kit [label=""on""];
}","Command: Lift the jacket from the garden box and set it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    lift -> jacket [label=""object""];
    lift -> garden_box [label=""from""];
    set -> jacket [label=""object""];
    set -> shaving_kit [label=""on""];
}"
"Command: Take the stapler from the plant pot and put it on the side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    take -> stapler [label=""object""];
    take -> plant_pot [label=""from""];
    put -> stapler [label=""object""];
    put -> side_table [label=""on""];
}","Command: Take the stapler from the plant pot and put it on the side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    plant_pot [label=""plant pot"", shape=ellipse, fillcolor=white];
    take -> stapler [label=""object""];
    take -> plant_pot [label=""from""];
    put -> stapler [label=""object""];
    put -> side_table [label=""on""];
}"
"Command: Grab the cap from the behind the curtain and set it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    grab -> cap [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    set -> cap [label=""object""];
    set -> trash_can [label=""on""];
}","Command: Grab the cap from the behind the curtain and set it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    grab -> cap [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    set -> cap [label=""object""];
    set -> trash_can [label=""on""];
}"
"Command: Take the heavy mouse from the narrow shelf and place it on the dry table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    heavy -> mouse [label=""attribute""];
    narrow -> shelf [label=""attribute""];
    dry -> table [label=""attribute""];
    take -> mouse [label=""object""];
    take -> shelf [label=""from""];
    place -> mouse [label=""object""];
    place -> table [label=""on""];
}","Command: Take the heavy mouse from the narrow shelf and place it on the dry table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    heavy -> mouse [label=""attribute""];
    narrow -> shelf [label=""attribute""];
    dry -> table [label=""attribute""];
    take -> mouse [label=""object""];
    take -> shelf [label=""from""];
    place -> mouse [label=""object""];
    place -> table [label=""on""];
}"
"Command: Take the blue cracked pillow from the tidy wooden safe and set it on the wooden spice rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> pillow [label=""attribute""];
    cracked -> pillow [label=""attribute""];
    tidy -> safe [label=""attribute""];
    wooden -> safe [label=""attribute""];
    wooden -> spice_rack [label=""attribute""];
    take -> pillow [label=""object""];
    take -> safe [label=""from""];
    set -> pillow [label=""object""];
    set -> spice_rack [label=""on""];
}","Command: Take the blue cracked pillow from the tidy wooden safe and set it on the wooden spice rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    spice_rack [label=""spice rack"", shape=ellipse, fillcolor=white];
    pillow [label=""pillow"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    safe [label=""safe"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> pillow [label=""attribute""];
    cracked -> pillow [label=""attribute""];
    wooden -> safe [label=""attribute""];
    wooden -> spice_rack [label=""attribute""];
    take -> pillow [label=""object""];
    take -> safe [label=""from""];
    set -> pillow [label=""object""];
    set -> spice_rack [label=""on""];
}"
"Command: Take the charger from the warm nightstand and place it on the toiletry shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    warm -> nightstand [label=""attribute""];
    take -> charger [label=""object""];
    take -> nightstand [label=""from""];
    place -> charger [label=""object""];
    place -> toiletry_shelf [label=""on""];
}","Command: Take the charger from the warm nightstand and place it on the toiletry shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    warm -> nightstand [label=""attribute""];
    take -> charger [label=""object""];
    take -> nightstand [label=""from""];
    place -> charger [label=""object""];
    place -> toiletry_shelf [label=""on""];
}"
"Command: Grab the comb from the empty open kitchen island and lay it on the empty vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> kitchen_island [label=""attribute""];
    open -> kitchen_island [label=""attribute""];
    empty -> vacuum_base [label=""attribute""];
    grab -> comb [label=""object""];
    grab -> kitchen_island [label=""from""];
    lay -> comb [label=""object""];
    lay -> vacuum_base [label=""on""];
}","Command: Grab the comb from the empty open kitchen island and lay it on the empty vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> kitchen_island [label=""attribute""];
    open -> kitchen_island [label=""attribute""];
    grab -> comb [label=""object""];
    grab -> kitchen_island [label=""from""];
    lay -> comb [label=""object""];
    lay -> vacuum_base [label=""on""];
}"
"Command: Lift the clock from the window ledge and set it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    lift -> clock [label=""object""];
    lift -> window_ledge [label=""from""];
    set -> clock [label=""object""];
    set -> mini_fridge [label=""on""];
}","Command: Lift the clock from the window ledge and set it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    lift -> clock [label=""object""];
    lift -> window_ledge [label=""from""];
    set -> clock [label=""object""];
    set -> mini_fridge [label=""on""];
}"
"Command: Grab the square glove from the coffee table and lay it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> glove [label=""object""];
    grab -> coffee_table [label=""from""];
    lay -> glove [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}","Command: Grab the square glove from the coffee table and lay it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glove [label=""glove"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    square -> glove [label=""attribute""];
    grab -> glove [label=""object""];
    grab -> coffee_table [label=""from""];
    lay -> glove [label=""object""];
    lay -> behind_the_curtain [label=""on""];
}"
"Command: Lift the glossy red phone from the shelf and set it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    glossy -> phone [label=""attribute""];
    red -> phone [label=""attribute""];
    lift -> phone [label=""object""];
    lift -> shelf [label=""from""];
    set -> phone [label=""object""];
    set -> step_stool [label=""on""];
}","Command: Lift the glossy red phone from the shelf and set it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    glossy -> phone [label=""attribute""];
    red -> phone [label=""attribute""];
    lift -> phone [label=""object""];
    lift -> shelf [label=""from""];
    set -> phone [label=""object""];
    set -> step_stool [label=""on""];
}"
"Command: Take the white hard stapler from the on the radiator and place it on the dusty narrow mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    white -> stapler [label=""attribute""];
    hard -> stapler [label=""attribute""];
    dusty -> mini_fridge [label=""attribute""];
    narrow -> mini_fridge [label=""attribute""];
    take -> stapler [label=""object""];
    take -> on_the_radiator [label=""from""];
    place -> stapler [label=""object""];
    place -> mini_fridge [label=""on""];
}","Command: Take the white hard stapler from the on the radiator and place it on the dusty narrow mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    white -> stapler [label=""attribute""];
    hard -> stapler [label=""attribute""];
    dusty -> mini_fridge [label=""attribute""];
    narrow -> mini_fridge [label=""attribute""];
    take -> stapler [label=""object""];
    take -> on_the_radiator [label=""from""];
    place -> stapler [label=""object""];
    place -> mini_fridge [label=""on""];
}"
"Command: Grab the red round stapler from the microwave and put it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> stapler [label=""attribute""];
    round -> stapler [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> microwave [label=""from""];
    put -> stapler [label=""object""];
    put -> sofa [label=""on""];
}","Command: Grab the red round stapler from the microwave and put it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> stapler [label=""attribute""];
    round -> stapler [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> microwave [label=""from""];
    put -> stapler [label=""object""];
    put -> sofa [label=""on""];
}"
"Command: Grab the drill from the hanger and set it on the sturdy radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    sturdy -> radiator [label=""attribute""];
    grab -> drill [label=""object""];
    grab -> hanger [label=""from""];
    set -> drill [label=""object""];
    set -> radiator [label=""on""];
}","Command: Grab the drill from the hanger and set it on the sturdy radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    sturdy -> radiator [label=""attribute""];
    grab -> drill [label=""object""];
    grab -> hanger [label=""from""];
    set -> drill [label=""object""];
    set -> radiator [label=""on""];
}"
"Command: Lift the square glossy envelope from the ottoman and put it on the balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> envelope [label=""attribute""];
    glossy -> envelope [label=""attribute""];
    lift -> envelope [label=""object""];
    lift -> ottoman [label=""from""];
    put -> envelope [label=""object""];
    put -> balcony_shelf [label=""on""];
}","Command: Lift the square glossy envelope from the ottoman and put it on the balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    envelope [label=""envelope"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    square -> envelope [label=""attribute""];
    glossy -> envelope [label=""attribute""];
    lift -> envelope [label=""object""];
    lift -> ottoman [label=""from""];
    put -> envelope [label=""object""];
    put -> balcony_shelf [label=""on""];
}"
"Command: Grab the red soft controller from the tidy microwave and place it on the bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    red -> controller [label=""attribute""];
    soft -> controller [label=""attribute""];
    tidy -> microwave [label=""attribute""];
    grab -> controller [label=""object""];
    grab -> microwave [label=""from""];
    place -> controller [label=""object""];
    place -> bin [label=""on""];
}","Command: Grab the red soft controller from the tidy microwave and place it on the bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    red -> controller [label=""attribute""];
    soft -> controller [label=""attribute""];
    tidy -> microwave [label=""attribute""];
    grab -> controller [label=""object""];
    grab -> microwave [label=""from""];
    place -> controller [label=""object""];
    place -> bin [label=""on""];
}"
"Command: Pick the shirt from the fridge and leave it on the vacuum base.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    pick -> shirt [label=""object""];
    pick -> fridge [label=""from""];
    leave -> shirt [label=""object""];
    leave -> vacuum_base [label=""on""];
}","Command: Pick the shirt from the fridge and leave it on the vacuum base.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    pick -> shirt [label=""object""];
    pick -> fridge [label=""from""];
    leave -> shirt [label=""object""];
    leave -> vacuum_base [label=""on""];
}"
"Command: Lift the red box from the noisy wooden heater and lay it on the balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    red -> box [label=""attribute""];
    noisy -> heater [label=""attribute""];
    wooden -> heater [label=""attribute""];
    lift -> box [label=""object""];
    lift -> heater [label=""from""];
    lay -> box [label=""object""];
    lay -> balcony_shelf [label=""on""];
}","Command: Lift the red box from the noisy wooden heater and lay it on the balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    red -> box [label=""attribute""];
    noisy -> heater [label=""attribute""];
    wooden -> heater [label=""attribute""];
    lift -> box [label=""object""];
    lift -> heater [label=""from""];
    lay -> box [label=""object""];
    lay -> balcony_shelf [label=""on""];
}"
"Command: Grab the light white notebook from the kitchen drawer and lay it on the dusty wall hook.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    light -> notebook [label=""attribute""];
    white -> notebook [label=""attribute""];
    dusty -> wall_hook [label=""attribute""];
    grab -> notebook [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    lay -> notebook [label=""object""];
    lay -> wall_hook [label=""on""];
}","Command: Grab the light white notebook from the kitchen drawer and lay it on the dusty wall hook.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    wall_hook [label=""wall hook"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    light -> notebook [label=""attribute""];
    white -> notebook [label=""attribute""];
    dusty -> wall_hook [label=""attribute""];
    grab -> notebook [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    lay -> notebook [label=""object""];
    lay -> wall_hook [label=""on""];
}"
"Command: Lift the matte knife from the tidy fish tank and put it on the behind the curtain.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    tidy -> fish_tank [label=""attribute""];
    lift -> knife [label=""object""];
    lift -> fish_tank [label=""from""];
    put -> knife [label=""object""];
    put -> behind_the_curtain [label=""on""];
}","Command: Lift the matte knife from the tidy fish tank and put it on the behind the curtain.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    tidy -> fish_tank [label=""attribute""];
    lift -> knife [label=""object""];
    lift -> fish_tank [label=""from""];
    put -> knife [label=""object""];
    put -> behind_the_curtain [label=""on""];
}"
"Command: Lift the red tool from the step stool and set it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lift -> tool [label=""object""];
    lift -> step_stool [label=""from""];
    set -> tool [label=""object""];
    set -> above_the_fridge [label=""on""];
}","Command: Lift the red tool from the step stool and set it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    red -> tool [label=""attribute""];
    lift -> tool [label=""object""];
    lift -> step_stool [label=""from""];
    set -> tool [label=""object""];
    set -> above_the_fridge [label=""on""];
}"
"Command: Pick the blue round shirt from the stand and set it on the full narrow bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> shirt [label=""attribute""];
    round -> shirt [label=""attribute""];
    full -> bathtub [label=""attribute""];
    narrow -> bathtub [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> stand [label=""from""];
    set -> shirt [label=""object""];
    set -> bathtub [label=""on""];
}","Command: Pick the blue round shirt from the stand and set it on the full narrow bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    blue -> shirt [label=""attribute""];
    round -> shirt [label=""attribute""];
    full -> bathtub [label=""attribute""];
    narrow -> bathtub [label=""attribute""];
    pick -> shirt [label=""object""];
    pick -> stand [label=""from""];
    set -> shirt [label=""object""];
    set -> bathtub [label=""on""];
}"
"Command: Grab the phone from the cushion and place it on the noisy entrance.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    noisy -> entrance [label=""attribute""];
    grab -> phone [label=""object""];
    grab -> cushion [label=""from""];
    place -> phone [label=""object""];
    place -> entrance [label=""on""];
}","Command: Grab the phone from the cushion and place it on the noisy entrance.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    noisy -> entrance [label=""attribute""];
    grab -> phone [label=""object""];
    grab -> cushion [label=""from""];
    place -> phone [label=""object""];
    place -> entrance [label=""on""];
}"
"Command: Lift the clock from the vacuum base and leave it on the shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    lift -> clock [label=""object""];
    lift -> vacuum_base [label=""from""];
    leave -> clock [label=""object""];
    leave -> shelf [label=""on""];
}","Command: Lift the clock from the vacuum base and leave it on the shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    lift -> clock [label=""object""];
    lift -> vacuum_base [label=""from""];
    leave -> clock [label=""object""];
    leave -> shelf [label=""on""];
}"
"Command: Grab the glossy pen from the clean stove and place it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    glossy -> pen [label=""attribute""];
    clean -> stove [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> stove [label=""from""];
    place -> pen [label=""object""];
    place -> wine_rack [label=""on""];
}","Command: Grab the glossy pen from the clean stove and place it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    glossy -> pen [label=""attribute""];
    clean -> stove [label=""attribute""];
    grab -> pen [label=""object""];
    grab -> stove [label=""from""];
    place -> pen [label=""object""];
    place -> wine_rack [label=""on""];
}"
"Command: Take the document from the bright magazine rack and set it on the bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    bright -> magazine_rack [label=""attribute""];
    take -> document [label=""object""];
    take -> magazine_rack [label=""from""];
    set -> document [label=""object""];
    set -> bookshelf_top [label=""on""];
}","Command: Take the document from the bright magazine rack and set it on the bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    bright -> magazine_rack [label=""attribute""];
    take -> document [label=""object""];
    take -> magazine_rack [label=""from""];
    set -> document [label=""object""];
    set -> bookshelf_top [label=""on""];
}"
"Command: Lift the hard sweater from the open armrest and set it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    open -> armrest [label=""attribute""];
    lift -> sweater [label=""object""];
    lift -> armrest [label=""from""];
    set -> sweater [label=""object""];
    set -> next_to_the_lamp [label=""on""];
}","Command: Lift the hard sweater from the open armrest and set it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    open -> armrest [label=""attribute""];
    lift -> sweater [label=""object""];
    lift -> armrest [label=""from""];
    set -> sweater [label=""object""];
    set -> next_to_the_lamp [label=""on""];
}"
"Command: Lift the glossy soft gamepad from the bright above the fridge and place it on the cold microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    glossy -> gamepad [label=""attribute""];
    soft -> gamepad [label=""attribute""];
    bright -> above_the_fridge [label=""attribute""];
    cold -> microwave [label=""attribute""];
    lift -> gamepad [label=""object""];
    lift -> above_the_fridge [label=""from""];
    place -> gamepad [label=""object""];
    place -> microwave [label=""on""];
}","Command: Lift the glossy soft gamepad from the bright above the fridge and place it on the cold microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    gamepad [label=""gamepad"", shape=ellipse, fillcolor=white];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    glossy -> gamepad [label=""attribute""];
    soft -> gamepad [label=""attribute""];
    bright -> above_the_fridge [label=""attribute""];
    cold -> microwave [label=""attribute""];
    lift -> gamepad [label=""object""];
    lift -> above_the_fridge [label=""from""];
    place -> gamepad [label=""object""];
    place -> microwave [label=""on""];
}"
"Command: Take the smooth blunt clock from the behind the curtain and lay it on the snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> clock [label=""attribute""];
    blunt -> clock [label=""attribute""];
    take -> clock [label=""object""];
    take -> behind_the_curtain [label=""from""];
    lay -> clock [label=""object""];
    lay -> snack_shelf [label=""on""];
}","Command: Take the smooth blunt clock from the behind the curtain and lay it on the snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    clock [label=""clock"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> clock [label=""attribute""];
    blunt -> clock [label=""attribute""];
    take -> clock [label=""object""];
    take -> behind_the_curtain [label=""from""];
    lay -> clock [label=""object""];
    lay -> snack_shelf [label=""on""];
}"
"Command: Pick the green hammer from the hanger and lay it on the mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    green -> hammer [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> hanger [label=""from""];
    lay -> hammer [label=""object""];
    lay -> mirror_shelf [label=""on""];
}","Command: Pick the green hammer from the hanger and lay it on the mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    hammer [label=""hammer"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    green -> hammer [label=""attribute""];
    pick -> hammer [label=""object""];
    pick -> hanger [label=""from""];
    lay -> hammer [label=""object""];
    lay -> mirror_shelf [label=""on""];
}"
"Command: Grab the controller from the counter and leave it on the dark coat rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    dark -> coat_rack [label=""attribute""];
    grab -> controller [label=""object""];
    grab -> counter [label=""from""];
    leave -> controller [label=""object""];
    leave -> coat_rack [label=""on""];
}","Command: Grab the controller from the counter and leave it on the dark coat rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_rack [label=""coat rack"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    dark -> coat_rack [label=""attribute""];
    grab -> controller [label=""object""];
    grab -> counter [label=""from""];
    leave -> controller [label=""object""];
    leave -> coat_rack [label=""on""];
}"
"Command: Pick the blanket from the dry bread box and leave it on the laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    dry -> bread_box [label=""attribute""];
    pick -> blanket [label=""object""];
    pick -> bread_box [label=""from""];
    leave -> blanket [label=""object""];
    leave -> laundry_basket [label=""on""];
}","Command: Pick the blanket from the dry bread box and leave it on the laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    dry -> bread_box [label=""attribute""];
    pick -> blanket [label=""object""];
    pick -> bread_box [label=""from""];
    leave -> blanket [label=""object""];
    leave -> laundry_basket [label=""on""];
}"
"Command: Grab the bin from the narrow sturdy hallway and set it on the recycling bin.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> hallway [label=""attribute""];
    sturdy -> hallway [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> hallway [label=""from""];
    set -> bin [label=""object""];
    set -> recycling_bin [label=""on""];
}","Command: Grab the bin from the narrow sturdy hallway and set it on the recycling bin.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hallway [label=""hallway"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    narrow -> hallway [label=""attribute""];
    sturdy -> hallway [label=""attribute""];
    grab -> bin [label=""object""];
    grab -> hallway [label=""from""];
    set -> bin [label=""object""];
    set -> recycling_bin [label=""on""];
}"
"Command: Grab the hard stapler from the toiletry shelf and lay it on the fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    hard -> stapler [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> toiletry_shelf [label=""from""];
    lay -> stapler [label=""object""];
    lay -> fruit_bowl [label=""on""];
}","Command: Grab the hard stapler from the toiletry shelf and lay it on the fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hard -> stapler [label=""attribute""];
    grab -> stapler [label=""object""];
    grab -> toiletry_shelf [label=""from""];
    lay -> stapler [label=""object""];
    lay -> fruit_bowl [label=""on""];
}"
"Command: Lift the black tablet from the full wardrobe and lay it on the narrow sturdy radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    black -> tablet [label=""attribute""];
    full -> wardrobe [label=""attribute""];
    narrow -> radiator [label=""attribute""];
    sturdy -> radiator [label=""attribute""];
    lift -> tablet [label=""object""];
    lift -> wardrobe [label=""from""];
    lay -> tablet [label=""object""];
    lay -> radiator [label=""on""];
}","Command: Lift the black tablet from the full wardrobe and lay it on the narrow sturdy radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    radiator [label=""radiator"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    black -> tablet [label=""attribute""];
    full -> wardrobe [label=""attribute""];
    narrow -> radiator [label=""attribute""];
    sturdy -> radiator [label=""attribute""];
    lift -> tablet [label=""object""];
    lift -> wardrobe [label=""from""];
    lay -> tablet [label=""object""];
    lay -> radiator [label=""on""];
}"
"Command: Pick the shirt from the on the radiator and lay it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    pick -> shirt [label=""object""];
    pick -> on_the_radiator [label=""from""];
    lay -> shirt [label=""object""];
    lay -> nightstand [label=""on""];
}","Command: Pick the shirt from the on the radiator and lay it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    on_the_radiator [label=""on the radiator"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    pick -> shirt [label=""object""];
    pick -> on_the_radiator [label=""from""];
    lay -> shirt [label=""object""];
    lay -> nightstand [label=""on""];
}"
"Command: Lift the can from the open balcony shelf and set it on the shoe rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    open -> balcony_shelf [label=""attribute""];
    lift -> can [label=""object""];
    lift -> balcony_shelf [label=""from""];
    set -> can [label=""object""];
    set -> shoe_rack [label=""on""];
}","Command: Lift the can from the open balcony shelf and set it on the shoe rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    open -> balcony_shelf [label=""attribute""];
    lift -> can [label=""object""];
    lift -> balcony_shelf [label=""from""];
    set -> can [label=""object""];
    set -> shoe_rack [label=""on""];
}"
"Command: Grab the light mug from the bin and set it on the side table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    light -> mug [label=""attribute""];
    grab -> mug [label=""object""];
    grab -> bin [label=""from""];
    set -> mug [label=""object""];
    set -> side_table [label=""on""];
}","Command: Grab the light mug from the bin and set it on the side table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mug [label=""mug"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    side_table [label=""side table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    light -> mug [label=""attribute""];
    grab -> mug [label=""object""];
    grab -> bin [label=""from""];
    set -> mug [label=""object""];
    set -> side_table [label=""on""];
}"
"Command: Take the heavy square comb from the empty toolbox and put it on the wooden microwave.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    heavy -> comb [label=""attribute""];
    square -> comb [label=""attribute""];
    empty -> toolbox [label=""attribute""];
    wooden -> microwave [label=""attribute""];
    take -> comb [label=""object""];
    take -> toolbox [label=""from""];
    put -> comb [label=""object""];
    put -> microwave [label=""on""];
}","Command: Take the heavy square comb from the empty toolbox and put it on the wooden microwave.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy -> comb [label=""attribute""];
    square -> comb [label=""attribute""];
    wooden -> microwave [label=""attribute""];
    take -> comb [label=""object""];
    take -> toolbox [label=""from""];
    put -> comb [label=""object""];
    put -> microwave [label=""on""];
}"
"Command: Grab the boot from the closed open locker and place it on the wet coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> locker [label=""attribute""];
    open -> locker [label=""attribute""];
    wet -> coat_shelf [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> locker [label=""from""];
    place -> boot [label=""object""];
    place -> coat_shelf [label=""on""];
}","Command: Grab the boot from the closed open locker and place it on the wet coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    boot [label=""boot"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    closed -> locker [label=""attribute""];
    open -> locker [label=""attribute""];
    wet -> coat_shelf [label=""attribute""];
    grab -> boot [label=""object""];
    grab -> locker [label=""from""];
    place -> boot [label=""object""];
    place -> coat_shelf [label=""on""];
}"
"Command: Pick the tie from the wet dryer and put it on the warm wooden bathtub.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bathtub [label=""bathtub"", shape=ellipse, fillcolor=white];
    wet -> dryer [label=""attribute""];
    warm -> bathtub [label=""attribute""];
    wooden -> bathtub [label=""attribute""];
    pick -> tie [label=""object""];
    pick -> dryer [label=""from""];
    put -> tie [label=""object""];
    put -> bathtub [label=""on""];
}","Command: Pick the tie from the wet dryer and put it on the warm wooden bathtub.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    wooden [label=""wooden"", shape=ellipse, fillcolor=white];
    wooden -> bathtub [label=""attribute""];
    warm -> bathtub [label=""attribute""];
    pick -> tie [label=""object""];
    pick -> dryer [label=""from""];
    put -> tie [label=""object""];
    put -> bathtub [label=""on""];
}"
"Command: Take the bin from the garage and put it on the tidy full wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> wine_rack [label=""attribute""];
    full -> wine_rack [label=""attribute""];
    take -> bin [label=""object""];
    take -> garage [label=""from""];
    put -> bin [label=""object""];
    put -> wine_rack [label=""on""];
}","Command: Take the bin from the garage and put it on the tidy full wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    tidy -> wine_rack [label=""attribute""];
    full -> wine_rack [label=""attribute""];
    take -> bin [label=""object""];
    take -> garage [label=""from""];
    put -> bin [label=""object""];
    put -> wine_rack [label=""on""];
}"
"Command: Take the folder from the heater and leave it on the nightstand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> folder [label=""object""];
    take -> heater [label=""from""];
    leave -> folder [label=""object""];
    leave -> nightstand [label=""on""];
}","Command: Take the folder from the heater and leave it on the nightstand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    heater [label=""heater"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    nightstand [label=""nightstand"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> folder [label=""object""];
    take -> heater [label=""from""];
    leave -> folder [label=""object""];
    leave -> nightstand [label=""on""];
}"
"Command: Pick the fork from the fridge door and set it on the mini fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    pick -> fork [label=""object""];
    pick -> fridge_door [label=""from""];
    set -> fork [label=""object""];
    set -> mini_fridge [label=""on""];
}","Command: Pick the fork from the fridge door and set it on the mini fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fridge_door [label=""fridge door"", shape=ellipse, fillcolor=white];
    fork [label=""fork"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    pick -> fork [label=""object""];
    pick -> fridge_door [label=""from""];
    set -> fork [label=""object""];
    set -> mini_fridge [label=""on""];
}"
"Command: Grab the red glossy mouse from the messy behind the curtain and leave it on the dry empty desk.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> mouse [label=""attribute""];
    glossy -> mouse [label=""attribute""];
    messy -> behind_the_curtain [label=""attribute""];
    dry -> desk [label=""attribute""];
    empty -> desk [label=""attribute""];
    grab -> mouse [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    leave -> mouse [label=""object""];
    leave -> desk [label=""on""];
}","Command: Grab the red glossy mouse from the messy behind the curtain and leave it on the dry empty desk.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    red -> mouse [label=""attribute""];
    glossy -> mouse [label=""attribute""];
    messy -> behind_the_curtain [label=""attribute""];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    empty -> desk [label=""attribute""];
    grab -> mouse [label=""object""];
    grab -> behind_the_curtain [label=""from""];
    leave -> mouse [label=""object""];
    leave -> desk [label=""on""];
}"
"Command: Take the towel from the basket and lay it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    take -> towel [label=""object""];
    take -> basket [label=""from""];
    lay -> towel [label=""object""];
    lay -> laundry_machine [label=""on""];
}","Command: Take the towel from the basket and lay it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    towel [label=""towel"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    take -> towel [label=""object""];
    take -> basket [label=""from""];
    lay -> towel [label=""object""];
    lay -> laundry_machine [label=""on""];
}"
"Command: Lift the smooth heavy plant from the bookshelf top and set it on the stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    smooth -> plant [label=""attribute""];
    heavy -> plant [label=""attribute""];
    lift -> plant [label=""object""];
    lift -> bookshelf_top [label=""from""];
    set -> plant [label=""object""];
    set -> stand [label=""on""];
}","Command: Lift the smooth heavy plant from the bookshelf top and set it on the stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    smooth -> plant [label=""attribute""];
    heavy -> plant [label=""attribute""];
    lift -> plant [label=""object""];
    lift -> bookshelf_top [label=""from""];
    set -> plant [label=""object""];
    set -> stand [label=""on""];
}"
"Command: Lift the fuzzy blue headphones from the laundry basket and put it on the laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> headphones [label=""attribute""];
    blue -> headphones [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> laundry_basket [label=""from""];
    put -> headphones [label=""object""];
    put -> laundry_basket [label=""on""];
}","Command: Lift the fuzzy blue headphones from the laundry basket and put it on the laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    fuzzy -> headphones [label=""attribute""];
    blue -> headphones [label=""attribute""];
    lift -> headphones [label=""object""];
    lift -> laundry_basket [label=""from""];
    put -> headphones [label=""object""];
    put -> laundry_basket [label=""on""];
}"
"Command: Take the white sharp case from the oven and set it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    white [label=""white"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> case [label=""attribute""];
    sharp -> case [label=""attribute""];
    take -> case [label=""object""];
    take -> oven [label=""from""];
    set -> case [label=""object""];
    set -> desk_drawer [label=""on""];
}","Command: Take the white sharp case from the oven and set it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    case [label=""case"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    white -> case [label=""attribute""];
    sharp -> case [label=""attribute""];
    take -> case [label=""object""];
    take -> oven [label=""from""];
    set -> case [label=""object""];
    set -> desk_drawer [label=""on""];
}"
"Command: Lift the book from the storage box and lay it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    lift -> book [label=""object""];
    lift -> storage_box [label=""from""];
    lay -> book [label=""object""];
    lay -> bed [label=""on""];
}","Command: Lift the book from the storage box and lay it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    storage_box [label=""storage box"", shape=ellipse, fillcolor=white];
    book [label=""book"", shape=ellipse, fillcolor=white];
    lift -> book [label=""object""];
    lift -> storage_box [label=""from""];
    lay -> book [label=""object""];
    lay -> bed [label=""on""];
}"
"Command: Take the brush from the laundry basket and lay it on the desk.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> brush [label=""object""];
    take -> laundry_basket [label=""from""];
    lay -> brush [label=""object""];
    lay -> desk [label=""on""];
}","Command: Take the brush from the laundry basket and lay it on the desk.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    desk [label=""desk"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> brush [label=""object""];
    take -> laundry_basket [label=""from""];
    lay -> brush [label=""object""];
    lay -> desk [label=""on""];
}"
"Command: Pick the sharp magazine from the warm messy bookshelf and lay it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> magazine [label=""attribute""];
    warm -> bookshelf [label=""attribute""];
    messy -> bookshelf [label=""attribute""];
    pick -> magazine [label=""object""];
    pick -> bookshelf [label=""from""];
    lay -> magazine [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Pick the sharp magazine from the warm messy bookshelf and lay it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    magazine [label=""magazine"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> magazine [label=""attribute""];
    warm -> bookshelf [label=""attribute""];
    messy -> bookshelf [label=""attribute""];
    pick -> magazine [label=""object""];
    pick -> bookshelf [label=""from""];
    lay -> magazine [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Grab the sharp toothbrush from the makeup bag and set it on the shaving kit.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> toothbrush [label=""attribute""];
    grab -> toothbrush [label=""object""];
    grab -> makeup_bag [label=""from""];
    set -> toothbrush [label=""object""];
    set -> shaving_kit [label=""on""];
}","Command: Grab the sharp toothbrush from the makeup bag and set it on the shaving kit.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    shaving_kit [label=""shaving kit"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> toothbrush [label=""attribute""];
    grab -> toothbrush [label=""object""];
    grab -> makeup_bag [label=""from""];
    set -> toothbrush [label=""object""];
    set -> shaving_kit [label=""on""];
}"
"Command: Pick the stapler from the noisy open cutlery drawer and leave it on the counter.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    noisy -> cutlery_drawer [label=""attribute""];
    open -> cutlery_drawer [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    leave -> stapler [label=""object""];
    leave -> counter [label=""on""];
}","Command: Pick the stapler from the noisy open cutlery drawer and leave it on the counter.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    stapler [label=""stapler"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    counter [label=""counter"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    noisy -> cutlery_drawer [label=""attribute""];
    open -> cutlery_drawer [label=""attribute""];
    pick -> stapler [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    leave -> stapler [label=""object""];
    leave -> counter [label=""on""];
}"
"Command: Take the tablet from the first aid box and lay it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> first_aid_box [label=""from""];
    lay -> tablet [label=""object""];
    lay -> beside_the_couch [label=""on""];
}","Command: Take the tablet from the first aid box and lay it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> tablet [label=""object""];
    take -> first_aid_box [label=""from""];
    lay -> tablet [label=""object""];
    lay -> beside_the_couch [label=""on""];
}"
"Command: Pick the sharp sweater from the bench and place it on the file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> sweater [label=""attribute""];
    pick -> sweater [label=""object""];
    pick -> bench [label=""from""];
    place -> sweater [label=""object""];
    place -> file_cabinet [label=""on""];
}","Command: Pick the sharp sweater from the bench and place it on the file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    sharp -> sweater [label=""attribute""];
    pick -> sweater [label=""object""];
    pick -> bench [label=""from""];
    place -> sweater [label=""object""];
    place -> file_cabinet [label=""on""];
}"
"Command: Take the black blunt umbrella from the sturdy pantry and set it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    black -> umbrella [label=""attribute""];
    blunt -> umbrella [label=""attribute""];
    sturdy -> pantry [label=""attribute""];
    take -> umbrella [label=""object""];
    take -> pantry [label=""from""];
    set -> umbrella [label=""object""];
    set -> rack [label=""on""];
}","Command: Take the black blunt umbrella from the sturdy pantry and set it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    umbrella [label=""umbrella"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    black -> umbrella [label=""attribute""];
    blunt -> umbrella [label=""attribute""];
    sturdy -> pantry [label=""attribute""];
    take -> umbrella [label=""object""];
    take -> pantry [label=""from""];
    set -> umbrella [label=""object""];
    set -> rack [label=""on""];
}"
"Command: Pick the blue keyboard from the cutlery drawer and set it on the laundry machine.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    blue -> keyboard [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    set -> keyboard [label=""object""];
    set -> laundry_machine [label=""on""];
}","Command: Pick the blue keyboard from the cutlery drawer and set it on the laundry machine.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    blue -> keyboard [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    set -> keyboard [label=""object""];
    set -> laundry_machine [label=""on""];
}"
"Command: Pick the paper from the cold cutlery drawer and lay it on the stove.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    cold -> cutlery_drawer [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    lay -> paper [label=""object""];
    lay -> stove [label=""on""];
}","Command: Pick the paper from the cold cutlery drawer and lay it on the stove.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    paper [label=""paper"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    cold -> cutlery_drawer [label=""attribute""];
    pick -> paper [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    lay -> paper [label=""object""];
    lay -> stove [label=""on""];
}"
"Command: Grab the sweater from the above the fridge and place it on the cold plastic coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    cold -> coat_shelf [label=""attribute""];
    plastic -> coat_shelf [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> above_the_fridge [label=""from""];
    place -> sweater [label=""object""];
    place -> coat_shelf [label=""on""];
}","Command: Grab the sweater from the above the fridge and place it on the cold plastic coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    sweater [label=""sweater"", shape=ellipse, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    above_the_fridge [label=""above the fridge"", shape=ellipse, fillcolor=white];
    cold -> coat_shelf [label=""attribute""];
    plastic -> coat_shelf [label=""attribute""];
    grab -> sweater [label=""object""];
    grab -> above_the_fridge [label=""from""];
    place -> sweater [label=""object""];
    place -> coat_shelf [label=""on""];
}"
"Command: Take the fuzzy glossy shoe from the plastic dry microwave and set it on the kitchen drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> shoe [label=""attribute""];
    glossy -> shoe [label=""attribute""];
    plastic -> microwave [label=""attribute""];
    dry -> microwave [label=""attribute""];
    take -> shoe [label=""object""];
    take -> microwave [label=""from""];
    set -> shoe [label=""object""];
    set -> kitchen_drawer [label=""on""];
}","Command: Take the fuzzy glossy shoe from the plastic dry microwave and set it on the kitchen drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> shoe [label=""attribute""];
    glossy -> shoe [label=""attribute""];
    plastic -> microwave [label=""attribute""];
    dry -> microwave [label=""attribute""];
    take -> shoe [label=""object""];
    take -> microwave [label=""from""];
    set -> shoe [label=""object""];
    set -> kitchen_drawer [label=""on""];
}"
"Command: Pick the pen from the rack and put it on the toilet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick -> pen [label=""object""];
    pick -> rack [label=""from""];
    put -> pen [label=""object""];
    put -> toilet [label=""on""];
}","Command: Pick the pen from the rack and put it on the toilet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toilet [label=""toilet"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    pick -> pen [label=""object""];
    pick -> rack [label=""from""];
    put -> pen [label=""object""];
    put -> toilet [label=""on""];
}"
"Command: Take the cap from the bookshelf top and place it on the open warm wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> wardrobe [label=""attribute""];
    warm -> wardrobe [label=""attribute""];
    take -> cap [label=""object""];
    take -> bookshelf_top [label=""from""];
    place -> cap [label=""object""];
    place -> wardrobe [label=""on""];
}","Command: Take the cap from the bookshelf top and place it on the open warm wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    open -> wardrobe [label=""attribute""];
    warm -> wardrobe [label=""attribute""];
    take -> cap [label=""object""];
    take -> bookshelf_top [label=""from""];
    place -> cap [label=""object""];
    place -> wardrobe [label=""on""];
}"
"Command: Lift the tool from the microwave and leave it on the rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    lift -> tool [label=""object""];
    lift -> microwave [label=""from""];
    leave -> tool [label=""object""];
    leave -> rack [label=""on""];
}","Command: Lift the tool from the microwave and leave it on the rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    microwave [label=""microwave"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    lift -> tool [label=""object""];
    lift -> microwave [label=""from""];
    leave -> tool [label=""object""];
    leave -> rack [label=""on""];
}"
"Command: Pick the soft cap from the full empty mini fridge and lay it on the dry sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    soft -> cap [label=""attribute""];
    full -> mini_fridge [label=""attribute""];
    empty -> mini_fridge [label=""attribute""];
    dry -> sofa [label=""attribute""];
    pick -> cap [label=""object""];
    pick -> mini_fridge [label=""from""];
    lay -> cap [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Pick the soft cap from the full empty mini fridge and lay it on the dry sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    cap [label=""cap"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    soft [label=""soft"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    soft -> cap [label=""attribute""];
    full -> mini_fridge [label=""attribute""];
    empty -> mini_fridge [label=""attribute""];
    dry -> sofa [label=""attribute""];
    pick -> cap [label=""object""];
    pick -> mini_fridge [label=""from""];
    lay -> cap [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Pick the tablet from the sturdy cushion and place it on the clean open wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    sturdy -> cushion [label=""attribute""];
    clean -> wardrobe [label=""attribute""];
    open -> wardrobe [label=""attribute""];
    pick -> tablet [label=""object""];
    pick -> cushion [label=""from""];
    place -> tablet [label=""object""];
    place -> wardrobe [label=""on""];
}","Command: Pick the tablet from the sturdy cushion and place it on the clean open wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    tablet [label=""tablet"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    sturdy -> cushion [label=""attribute""];
    clean -> wardrobe [label=""attribute""];
    open -> wardrobe [label=""attribute""];
    pick -> tablet [label=""object""];
    pick -> cushion [label=""from""];
    place -> tablet [label=""object""];
    place -> wardrobe [label=""on""];
}"
"Command: Pick the fuzzy green can from the open ottoman and leave it on the wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    fuzzy -> can [label=""attribute""];
    green -> can [label=""attribute""];
    open -> ottoman [label=""attribute""];
    pick -> can [label=""object""];
    pick -> ottoman [label=""from""];
    leave -> can [label=""object""];
    leave -> wall_shelf [label=""on""];
}","Command: Pick the fuzzy green can from the open ottoman and leave it on the wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    green [label=""green"", shape=ellipse, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    ottoman [label=""ottoman"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    can [label=""can"", shape=ellipse, fillcolor=white];
    fuzzy -> can [label=""attribute""];
    green -> can [label=""attribute""];
    open -> ottoman [label=""attribute""];
    pick -> can [label=""object""];
    pick -> ottoman [label=""from""];
    leave -> can [label=""object""];
    leave -> wall_shelf [label=""on""];
}"
"Command: Take the sharp white tool from the cabinet and place it on the open warm balcony shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> tool [label=""attribute""];
    white -> tool [label=""attribute""];
    open -> balcony_shelf [label=""attribute""];
    warm -> balcony_shelf [label=""attribute""];
    take -> tool [label=""object""];
    take -> cabinet [label=""from""];
    place -> tool [label=""object""];
    place -> balcony_shelf [label=""on""];
}","Command: Take the sharp white tool from the cabinet and place it on the open warm balcony shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    tool [label=""tool"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> tool [label=""attribute""];
    white -> tool [label=""attribute""];
    open -> balcony_shelf [label=""attribute""];
    warm -> balcony_shelf [label=""attribute""];
    take -> tool [label=""object""];
    take -> cabinet [label=""from""];
    place -> tool [label=""object""];
    place -> balcony_shelf [label=""on""];
}"
"Command: Grab the document from the tv cabinet and leave it on the sink.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    grab -> document [label=""object""];
    grab -> tv_cabinet [label=""from""];
    leave -> document [label=""object""];
    leave -> sink [label=""on""];
}","Command: Grab the document from the tv cabinet and leave it on the sink.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    document [label=""document"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    tv_cabinet [label=""tv cabinet"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    grab -> document [label=""object""];
    grab -> tv_cabinet [label=""from""];
    leave -> document [label=""object""];
    leave -> sink [label=""on""];
}"
"Command: Take the headphones from the dark clean laundry basket and set it on the dark clean bookshelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> laundry_basket [label=""attribute""];
    clean -> laundry_basket [label=""attribute""];
    dark -> bookshelf [label=""attribute""];
    clean -> bookshelf [label=""attribute""];
    take -> headphones [label=""object""];
    take -> laundry_basket [label=""from""];
    set -> headphones [label=""object""];
    set -> bookshelf [label=""on""];
}","Command: Take the headphones from the dark clean laundry basket and set it on the dark clean bookshelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    headphones [label=""headphones"", shape=ellipse, fillcolor=white];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    clean -> laundry_basket [label=""attribute""];
    dark -> bookshelf [label=""attribute""];
    clean -> bookshelf [label=""attribute""];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    dark -> bookshelf [label=""attribute""];
    take -> headphones [label=""object""];
    take -> laundry_basket [label=""from""];
    set -> headphones [label=""object""];
    set -> bookshelf [label=""on""];
}"
"Command: Take the red glossy receipt from the bread box and put it on the stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> receipt [label=""attribute""];
    glossy -> receipt [label=""attribute""];
    take -> receipt [label=""object""];
    take -> bread_box [label=""from""];
    put -> receipt [label=""object""];
    put -> stand [label=""on""];
}","Command: Take the red glossy receipt from the bread box and put it on the stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bread_box [label=""bread box"", shape=ellipse, fillcolor=white];
    glossy [label=""glossy"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    receipt [label=""receipt"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    red -> receipt [label=""attribute""];
    glossy -> receipt [label=""attribute""];
    take -> receipt [label=""object""];
    take -> bread_box [label=""from""];
    put -> receipt [label=""object""];
    put -> stand [label=""on""];
}"
"Command: Take the blue hard notebook from the tool rack and lay it on the garage.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> notebook [label=""attribute""];
    hard -> notebook [label=""attribute""];
    take -> notebook [label=""object""];
    take -> tool_rack [label=""from""];
    lay -> notebook [label=""object""];
    lay -> garage [label=""on""];
}","Command: Take the blue hard notebook from the tool rack and lay it on the garage.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    garage [label=""garage"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    hard [label=""hard"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    notebook [label=""notebook"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    blue -> notebook [label=""attribute""];
    hard -> notebook [label=""attribute""];
    take -> notebook [label=""object""];
    take -> tool_rack [label=""from""];
    lay -> notebook [label=""object""];
    lay -> garage [label=""on""];
}"
"Command: Lift the jacket from the clean vacuum base and put it on the cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    clean -> vacuum_base [label=""attribute""];
    lift -> jacket [label=""object""];
    lift -> vacuum_base [label=""from""];
    put -> jacket [label=""object""];
    put -> cabinet [label=""on""];
}","Command: Lift the jacket from the clean vacuum base and put it on the cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    cabinet [label=""cabinet"", shape=ellipse, fillcolor=white];
    jacket [label=""jacket"", shape=ellipse, fillcolor=white];
    vacuum_base [label=""vacuum base"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    clean -> vacuum_base [label=""attribute""];
    lift -> jacket [label=""object""];
    lift -> vacuum_base [label=""from""];
    put -> jacket [label=""object""];
    put -> cabinet [label=""on""];
}"
"Command: Pick the box from the dry noisy sofa and set it on the coffee table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    box [label=""box"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> sofa [label=""attribute""];
    noisy -> sofa [label=""attribute""];
    pick -> box [label=""object""];
    pick -> sofa [label=""from""];
    set -> box [label=""object""];
    set -> coffee_table [label=""on""];
}","Command: Pick the box from the dry noisy sofa and set it on the coffee table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    coffee_table [label=""coffee table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    box [label=""box"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    dry -> sofa [label=""attribute""];
    noisy -> sofa [label=""attribute""];
    pick -> box [label=""object""];
    pick -> sofa [label=""from""];
    set -> box [label=""object""];
    set -> coffee_table [label=""on""];
}"
"Command: Pick the matte light shoe from the tool rack and put it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    matte -> shoe [label=""attribute""];
    light -> shoe [label=""attribute""];
    pick -> shoe [label=""object""];
    pick -> tool_rack [label=""from""];
    put -> shoe [label=""object""];
    put -> step_stool [label=""on""];
}","Command: Pick the matte light shoe from the tool rack and put it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    tool_rack [label=""tool rack"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    matte -> shoe [label=""attribute""];
    light -> shoe [label=""attribute""];
    pick -> shoe [label=""object""];
    pick -> tool_rack [label=""from""];
    put -> shoe [label=""object""];
    put -> step_stool [label=""on""];
}"
"Command: Lift the cracked green coin from the wooden bright mini fridge and put it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    green -> coin [label=""attribute""];
    wooden -> mini_fridge [label=""attribute""];
    bright -> mini_fridge [label=""attribute""];
    lift -> coin [label=""object""];
    lift -> mini_fridge [label=""from""];
    put -> coin [label=""object""];
    put -> above_the_fridge [label=""on""];
}","Command: Lift the cracked green coin from the wooden bright mini fridge and put it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    green -> coin [label=""attribute""];
    bright -> mini_fridge [label=""attribute""];
    lift -> coin [label=""object""];
    lift -> mini_fridge [label=""from""];
    put -> coin [label=""object""];
    put -> above_the_fridge [label=""on""];
}"
"Command: Pick the black white drill from the hanger and leave it on the ceramic dusty snack shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> drill [label=""attribute""];
    white -> drill [label=""attribute""];
    ceramic -> snack_shelf [label=""attribute""];
    dusty -> snack_shelf [label=""attribute""];
    pick -> drill [label=""object""];
    pick -> hanger [label=""from""];
    leave -> drill [label=""object""];
    leave -> snack_shelf [label=""on""];
}","Command: Pick the black white drill from the hanger and leave it on the ceramic dusty snack shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    drill [label=""drill"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    hanger [label=""hanger"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    snack_shelf [label=""snack shelf"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    black -> drill [label=""attribute""];
    white -> drill [label=""attribute""];
    ceramic -> snack_shelf [label=""attribute""];
    dusty -> snack_shelf [label=""attribute""];
    pick -> drill [label=""object""];
    pick -> hanger [label=""from""];
    leave -> drill [label=""object""];
    leave -> snack_shelf [label=""on""];
}"
"Command: Take the light lego from the drawer and lay it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> lego [label=""attribute""];
    take -> lego [label=""object""];
    take -> drawer [label=""from""];
    lay -> lego [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Take the light lego from the drawer and lay it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    light [label=""light"", shape=ellipse, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    light -> lego [label=""attribute""];
    take -> lego [label=""object""];
    take -> drawer [label=""from""];
    lay -> lego [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Grab the round keyboard from the balcony shelf and lay it on the closed sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    round -> keyboard [label=""attribute""];
    closed -> sofa [label=""attribute""];
    grab -> keyboard [label=""object""];
    grab -> balcony_shelf [label=""from""];
    lay -> keyboard [label=""object""];
    lay -> sofa [label=""on""];
}","Command: Grab the round keyboard from the balcony shelf and lay it on the closed sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    round [label=""round"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    balcony_shelf [label=""balcony shelf"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    closed [label=""closed"", shape=ellipse, fillcolor=white];
    round -> keyboard [label=""attribute""];
    closed -> sofa [label=""attribute""];
    grab -> keyboard [label=""object""];
    grab -> balcony_shelf [label=""from""];
    lay -> keyboard [label=""object""];
    lay -> sofa [label=""on""];
}"
"Command: Grab the toy from the noisy closed cupboard and leave it on the beside the couch.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    closed -> cupboard [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> cupboard [label=""from""];
    leave -> toy [label=""object""];
    leave -> beside_the_couch [label=""on""];
}","Command: Grab the toy from the noisy closed cupboard and leave it on the beside the couch.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    noisy -> cupboard [label=""attribute""];
    closed -> cupboard [label=""attribute""];
    grab -> toy [label=""object""];
    grab -> cupboard [label=""from""];
    leave -> toy [label=""object""];
    leave -> beside_the_couch [label=""on""];
}"
"Command: Grab the bill from the messy wet table and put it on the first aid box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    messy -> table [label=""attribute""];
    wet -> table [label=""attribute""];
    grab -> bill [label=""object""];
    grab -> table [label=""from""];
    put -> bill [label=""object""];
    put -> first_aid_box [label=""on""];
}","Command: Grab the bill from the messy wet table and put it on the first aid box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    table [label=""table"", shape=ellipse, fillcolor=white];
    bill [label=""bill"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    first_aid_box [label=""first aid box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    messy -> table [label=""attribute""];
    wet -> table [label=""attribute""];
    grab -> bill [label=""object""];
    grab -> table [label=""from""];
    put -> bill [label=""object""];
    put -> first_aid_box [label=""on""];
}"
"Command: Pick the cracked red eraser from the cushion and leave it on the makeup bag.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    cracked -> eraser [label=""attribute""];
    red -> eraser [label=""attribute""];
    pick -> eraser [label=""object""];
    pick -> cushion [label=""from""];
    leave -> eraser [label=""object""];
    leave -> makeup_bag [label=""on""];
}","Command: Pick the cracked red eraser from the cushion and leave it on the makeup bag.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    eraser [label=""eraser"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    cushion [label=""cushion"", shape=ellipse, fillcolor=white];
    makeup_bag [label=""makeup bag"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    cracked -> eraser [label=""attribute""];
    red -> eraser [label=""attribute""];
    pick -> eraser [label=""object""];
    pick -> cushion [label=""from""];
    leave -> eraser [label=""object""];
    leave -> makeup_bag [label=""on""];
}"
"Command: Pick the heavy light bottle from the drawer and place it on the sofa.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> bottle [label=""attribute""];
    light -> bottle [label=""attribute""];
    pick -> bottle [label=""object""];
    pick -> drawer [label=""from""];
    place -> bottle [label=""object""];
    place -> sofa [label=""on""];
}","Command: Pick the heavy light bottle from the drawer and place it on the sofa.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    light [label=""light"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    bottle [label=""bottle"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> bottle [label=""attribute""];
    light -> bottle [label=""attribute""];
    pick -> bottle [label=""object""];
    pick -> drawer [label=""from""];
    place -> bottle [label=""object""];
    place -> sofa [label=""on""];
}"
"Command: Take the container from the under the table and put it on the bookshelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> container [label=""object""];
    take -> under_the_table [label=""from""];
    put -> container [label=""object""];
    put -> bookshelf [label=""on""];
}","Command: Take the container from the under the table and put it on the bookshelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    under_the_table [label=""under the table"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    container [label=""container"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> container [label=""object""];
    take -> under_the_table [label=""from""];
    put -> container [label=""object""];
    put -> bookshelf [label=""on""];
}"
"Command: Take the heavy card from the empty sturdy sink and place it on the wine rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    heavy -> card [label=""attribute""];
    empty -> sink [label=""attribute""];
    sturdy -> sink [label=""attribute""];
    take -> card [label=""object""];
    take -> sink [label=""from""];
    place -> card [label=""object""];
    place -> wine_rack [label=""on""];
}","Command: Take the heavy card from the empty sturdy sink and place it on the wine rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    sturdy [label=""sturdy"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    card [label=""card"", shape=ellipse, fillcolor=white];
    wine_rack [label=""wine rack"", shape=ellipse, fillcolor=white];
    sink [label=""sink"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    heavy -> card [label=""attribute""];
    empty -> sink [label=""attribute""];
    sturdy -> sink [label=""attribute""];
    take -> card [label=""object""];
    take -> sink [label=""from""];
    place -> card [label=""object""];
    place -> wine_rack [label=""on""];
}"
"Command: Take the sharp knife from the trash can and place it on the clean window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> knife [label=""attribute""];
    clean -> window_ledge [label=""attribute""];
    take -> knife [label=""object""];
    take -> trash_can [label=""from""];
    place -> knife [label=""object""];
    place -> window_ledge [label=""on""];
}","Command: Take the sharp knife from the trash can and place it on the clean window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    knife [label=""knife"", shape=ellipse, fillcolor=white];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    sharp -> knife [label=""attribute""];
    clean -> window_ledge [label=""attribute""];
    take -> knife [label=""object""];
    take -> trash_can [label=""from""];
    place -> knife [label=""object""];
    place -> window_ledge [label=""on""];
}"
"Command: Pick the smooth fragile pen from the dry toiletry shelf and lay it on the empty window sill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    smooth -> pen [label=""attribute""];
    fragile -> pen [label=""attribute""];
    dry -> toiletry_shelf [label=""attribute""];
    empty -> window_sill [label=""attribute""];
    pick -> pen [label=""object""];
    pick -> toiletry_shelf [label=""from""];
    lay -> pen [label=""object""];
    lay -> window_sill [label=""on""];
}","Command: Pick the smooth fragile pen from the dry toiletry shelf and lay it on the empty window sill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    toiletry_shelf [label=""toiletry shelf"", shape=ellipse, fillcolor=white];
    pen [label=""pen"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    smooth [label=""smooth"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    window_sill [label=""window sill"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    smooth -> pen [label=""attribute""];
    fragile -> pen [label=""attribute""];
    dry -> toiletry_shelf [label=""attribute""];
    empty -> window_sill [label=""attribute""];
    pick -> pen [label=""object""];
    pick -> toiletry_shelf [label=""from""];
    lay -> pen [label=""object""];
    lay -> window_sill [label=""on""];
}"
"Command: Lift the white mouse from the shelf and put it on the tv stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    white -> mouse [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> shelf [label=""from""];
    put -> mouse [label=""object""];
    put -> tv_stand [label=""on""];
}","Command: Lift the white mouse from the shelf and put it on the tv stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    tv_stand [label=""tv stand"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    shelf [label=""shelf"", shape=ellipse, fillcolor=white];
    white -> mouse [label=""attribute""];
    lift -> mouse [label=""object""];
    lift -> shelf [label=""from""];
    put -> mouse [label=""object""];
    put -> tv_stand [label=""on""];
}"
"Command: Pick the mouse from the bright open entrance and put it on the desk drawer.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bright -> entrance [label=""attribute""];
    open -> entrance [label=""attribute""];
    pick -> mouse [label=""object""];
    pick -> entrance [label=""from""];
    put -> mouse [label=""object""];
    put -> desk_drawer [label=""on""];
}","Command: Pick the mouse from the bright open entrance and put it on the desk drawer.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    mouse [label=""mouse"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    entrance [label=""entrance"", shape=ellipse, fillcolor=white];
    desk_drawer [label=""desk drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    bright -> entrance [label=""attribute""];
    open -> entrance [label=""attribute""];
    pick -> mouse [label=""object""];
    pick -> entrance [label=""from""];
    put -> mouse [label=""object""];
    put -> desk_drawer [label=""on""];
}"
"Command: Lift the square phone from the dryer and leave it on the messy noisy rack.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    square -> phone [label=""attribute""];
    messy -> rack [label=""attribute""];
    noisy -> rack [label=""attribute""];
    lift -> phone [label=""object""];
    lift -> dryer [label=""from""];
    leave -> phone [label=""object""];
    leave -> rack [label=""on""];
}","Command: Lift the square phone from the dryer and leave it on the messy noisy rack.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    rack [label=""rack"", shape=ellipse, fillcolor=white];
    dryer [label=""dryer"", shape=ellipse, fillcolor=white];
    messy [label=""messy"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    square -> phone [label=""attribute""];
    messy -> rack [label=""attribute""];
    noisy -> rack [label=""attribute""];
    lift -> phone [label=""object""];
    lift -> dryer [label=""from""];
    leave -> phone [label=""object""];
    leave -> rack [label=""on""];
}"
"Command: Take the fragile white bag from the bin and put it on the dry bench.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> bag [label=""attribute""];
    white -> bag [label=""attribute""];
    dry -> bench [label=""attribute""];
    take -> bag [label=""object""];
    take -> bin [label=""from""];
    put -> bag [label=""object""];
    put -> bench [label=""on""];
}","Command: Take the fragile white bag from the bin and put it on the dry bench.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    bench [label=""bench"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    bin [label=""bin"", shape=ellipse, fillcolor=white];
    bag [label=""bag"", shape=ellipse, fillcolor=white];
    white [label=""white"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fragile -> bag [label=""attribute""];
    white -> bag [label=""attribute""];
    dry -> bench [label=""attribute""];
    take -> bag [label=""object""];
    take -> bin [label=""from""];
    put -> bag [label=""object""];
    put -> bench [label=""on""];
}"
"Command: Lift the shirt from the laundry machine and place it on the warm file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    warm -> file_cabinet [label=""attribute""];
    lift -> shirt [label=""object""];
    lift -> laundry_machine [label=""from""];
    place -> shirt [label=""object""];
    place -> file_cabinet [label=""on""];
}","Command: Lift the shirt from the laundry machine and place it on the warm file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    shirt [label=""shirt"", shape=ellipse, fillcolor=white];
    laundry_machine [label=""laundry machine"", shape=ellipse, fillcolor=white];
    warm -> file_cabinet [label=""attribute""];
    lift -> shirt [label=""object""];
    lift -> laundry_machine [label=""from""];
    place -> shirt [label=""object""];
    place -> file_cabinet [label=""on""];
}"
"Command: Grab the blanket from the fridge and set it on the terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    grab -> blanket [label=""object""];
    grab -> fridge [label=""from""];
    set -> blanket [label=""object""];
    set -> terrace_table [label=""on""];
}","Command: Grab the blanket from the fridge and set it on the terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    blanket [label=""blanket"", shape=ellipse, fillcolor=white];
    grab -> blanket [label=""object""];
    grab -> fridge [label=""from""];
    set -> blanket [label=""object""];
    set -> terrace_table [label=""on""];
}"
"Command: Grab the fragile blunt glass from the tidy wet kitchen drawer and set it on the trash can.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    fragile -> glass [label=""attribute""];
    blunt -> glass [label=""attribute""];
    tidy -> kitchen_drawer [label=""attribute""];
    wet -> kitchen_drawer [label=""attribute""];
    grab -> glass [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    set -> glass [label=""object""];
    set -> trash_can [label=""on""];
}","Command: Grab the fragile blunt glass from the tidy wet kitchen drawer and set it on the trash can.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    fragile [label=""fragile"", shape=ellipse, fillcolor=white];
    wet [label=""wet"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    glass [label=""glass"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    trash_can [label=""trash can"", shape=ellipse, fillcolor=white];
    tidy [label=""tidy"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    fragile -> glass [label=""attribute""];
    blunt -> glass [label=""attribute""];
    tidy -> kitchen_drawer [label=""attribute""];
    wet -> kitchen_drawer [label=""attribute""];
    grab -> glass [label=""object""];
    grab -> kitchen_drawer [label=""from""];
    set -> glass [label=""object""];
    set -> trash_can [label=""on""];
}"
"Command: Pick the sharp case from the cutlery drawer and put it on the terrace table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp -> case [label=""attribute""];
    pick -> case [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    put -> case [label=""object""];
    put -> terrace_table [label=""on""];
}","Command: Pick the sharp case from the cutlery drawer and put it on the terrace table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    case [label=""case"", shape=ellipse, fillcolor=white];
    terrace_table [label=""terrace table"", shape=ellipse, fillcolor=white];
    sharp [label=""sharp"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    sharp -> case [label=""attribute""];
    pick -> case [label=""object""];
    pick -> cutlery_drawer [label=""from""];
    put -> case [label=""object""];
    put -> terrace_table [label=""on""];
}"
"Command: Grab the brush from the plastic fish tank and lay it on the dry ceramic bookshelf top.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    plastic -> fish_tank [label=""attribute""];
    dry -> bookshelf_top [label=""attribute""];
    ceramic -> bookshelf_top [label=""attribute""];
    grab -> brush [label=""object""];
    grab -> fish_tank [label=""from""];
    lay -> brush [label=""object""];
    lay -> bookshelf_top [label=""on""];
}","Command: Grab the brush from the plastic fish tank and lay it on the dry ceramic bookshelf top.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bookshelf_top [label=""bookshelf top"", shape=ellipse, fillcolor=white];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    brush [label=""brush"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    plastic -> fish_tank [label=""attribute""];
    dry -> bookshelf_top [label=""attribute""];
    ceramic -> bookshelf_top [label=""attribute""];
    grab -> brush [label=""object""];
    grab -> fish_tank [label=""from""];
    lay -> brush [label=""object""];
    lay -> bookshelf_top [label=""on""];
}"
"Command: Take the belt from the bright ceramic floor and put it on the cold stand.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> floor [label=""attribute""];
    ceramic -> floor [label=""attribute""];
    cold -> stand [label=""attribute""];
    take -> belt [label=""object""];
    take -> floor [label=""from""];
    put -> belt [label=""object""];
    put -> stand [label=""on""];
}","Command: Take the belt from the bright ceramic floor and put it on the cold stand.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    belt [label=""belt"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    stand [label=""stand"", shape=ellipse, fillcolor=white];
    floor [label=""floor"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    bright -> floor [label=""attribute""];
    ceramic -> floor [label=""attribute""];
    cold -> stand [label=""attribute""];
    take -> belt [label=""object""];
    take -> floor [label=""from""];
    put -> belt [label=""object""];
    put -> stand [label=""on""];
}"
"Command: Pick the matte black keyboard from the mini fridge and put it on the step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    mini_fridge [label=""mini fridge"", shape=ellipse, fillcolor=white];
    black [label=""black"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    matte -> keyboard [label=""attribute""];
    black -> keyboard [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> mini_fridge [label=""from""];
    put -> keyboard [label=""object""];
    put -> step_stool [label=""on""];
}","Command: Pick the matte black keyboard from the mini fridge and put it on the step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    keyboard [label=""keyboard"", shape=ellipse, fillcolor=white];
    matte -> keyboard [label=""attribute""];
    black -> keyboard [label=""attribute""];
    pick -> keyboard [label=""object""];
    pick -> mini_fridge [label=""from""];
    put -> keyboard [label=""object""];
    put -> step_stool [label=""on""];
}"
"Command: Lift the matte ring from the behind the curtain and put it on the full wall shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    full [label=""full"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    matte -> ring [label=""attribute""];
    full -> wall_shelf [label=""attribute""];
    lift -> ring [label=""object""];
    lift -> behind_the_curtain [label=""from""];
    put -> ring [label=""object""];
    put -> wall_shelf [label=""on""];
}","Command: Lift the matte ring from the behind the curtain and put it on the full wall shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    full [label=""full"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    wall_shelf [label=""wall shelf"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    matte -> ring [label=""attribute""];
    full -> wall_shelf [label=""attribute""];
    lift -> ring [label=""object""];
    lift -> behind_the_curtain [label=""from""];
    put -> ring [label=""object""];
    put -> wall_shelf [label=""on""];
}"
"Command: Lift the toothbrush from the oven and set it on the wardrobe.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    lift -> toothbrush [label=""object""];
    lift -> oven [label=""from""];
    set -> toothbrush [label=""object""];
    set -> wardrobe [label=""on""];
}","Command: Lift the toothbrush from the oven and set it on the wardrobe.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    wardrobe [label=""wardrobe"", shape=ellipse, fillcolor=white];
    oven [label=""oven"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    toothbrush [label=""toothbrush"", shape=ellipse, fillcolor=white];
    lift -> toothbrush [label=""object""];
    lift -> oven [label=""from""];
    set -> toothbrush [label=""object""];
    set -> wardrobe [label=""on""];
}"
"Command: Lift the shiny glass from the dusty first aid box and lay it on the next to the lamp.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty -> first_aid_box [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> first_aid_box [label=""from""];
    lay -> glass [label=""object""];
    lay -> next_to_the_lamp [label=""on""];
}","Command: Lift the shiny glass from the dusty first aid box and lay it on the next to the lamp.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    dusty -> first_aid_box [label=""attribute""];
    lift -> glass [label=""object""];
    lift -> first_aid_box [label=""from""];
    lay -> glass [label=""object""];
    lay -> next_to_the_lamp [label=""on""];
}"
"Command: Pick the fuzzy glossy comb from the dryer and place it on the under the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    glossy -> comb [label=""attribute""];
    pick -> comb [label=""object""];
    pick -> dryer [label=""from""];
    place -> comb [label=""object""];
    place -> under_the_bed [label=""on""];
}","Command: Pick the fuzzy glossy comb from the dryer and place it on the under the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    glossy -> comb [label=""attribute""];
    pick -> comb [label=""object""];
    pick -> dryer [label=""from""];
    place -> comb [label=""object""];
    place -> under_the_bed [label=""on""];
}"
"Command: Take the sneaker from the behind the curtain and leave it on the kitchen island.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> sneaker [label=""object""];
    take -> behind_the_curtain [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> kitchen_island [label=""on""];
}","Command: Take the sneaker from the behind the curtain and leave it on the kitchen island.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    kitchen_island [label=""kitchen island"", shape=ellipse, fillcolor=white];
    sneaker [label=""sneaker"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    behind_the_curtain [label=""behind the curtain"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    take -> sneaker [label=""object""];
    take -> behind_the_curtain [label=""from""];
    leave -> sneaker [label=""object""];
    leave -> kitchen_island [label=""on""];
}"
"Command: Pick the plant from the dry magazine rack and put it on the litter box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    dry -> magazine_rack [label=""attribute""];
    pick -> plant [label=""object""];
    pick -> magazine_rack [label=""from""];
    put -> plant [label=""object""];
    put -> litter_box [label=""on""];
}","Command: Pick the plant from the dry magazine rack and put it on the litter box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    litter_box [label=""litter box"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    plant [label=""plant"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    magazine_rack [label=""magazine rack"", shape=ellipse, fillcolor=white];
    dry -> magazine_rack [label=""attribute""];
    pick -> plant [label=""object""];
    pick -> magazine_rack [label=""from""];
    put -> plant [label=""object""];
    put -> litter_box [label=""on""];
}"
"Command: Lift the red blue controller from the shoe rack and put it on the toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red [label=""red"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    red -> controller [label=""attribute""];
    blue -> controller [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> shoe_rack [label=""from""];
    put -> controller [label=""object""];
    put -> toolbox [label=""on""];
}","Command: Lift the red blue controller from the shoe rack and put it on the toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    shoe_rack [label=""shoe rack"", shape=ellipse, fillcolor=white];
    blue [label=""blue"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    red [label=""red"", shape=ellipse, fillcolor=white];
    controller [label=""controller"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    red -> controller [label=""attribute""];
    blue -> controller [label=""attribute""];
    lift -> controller [label=""object""];
    lift -> shoe_rack [label=""from""];
    put -> controller [label=""object""];
    put -> toolbox [label=""on""];
}"
"Command: Pick the plate from the garden box and set it on the noisy empty windowsill.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    noisy -> windowsill [label=""attribute""];
    empty -> windowsill [label=""attribute""];
    pick -> plate [label=""object""];
    pick -> garden_box [label=""from""];
    set -> plate [label=""object""];
    set -> windowsill [label=""on""];
}","Command: Pick the plate from the garden box and set it on the noisy empty windowsill.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    noisy [label=""noisy"", shape=ellipse, fillcolor=white];
    plate [label=""plate"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    windowsill [label=""windowsill"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    noisy -> windowsill [label=""attribute""];
    empty -> windowsill [label=""attribute""];
    pick -> plate [label=""object""];
    pick -> garden_box [label=""from""];
    set -> plate [label=""object""];
    set -> windowsill [label=""on""];
}"
"Command: Take the round smooth receipt from the rack and leave it on the above the fridge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> receipt [label=""attribute""];
    take -> receipt [label=""object""];
    take -> rack [label=""from""];
    leave -> receipt [label=""object""];
    leave -> above_the_fridge [label=""on""];
}","Command: Take the round smooth receipt from the rack and leave it on the above the fridge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    smooth -> receipt [label=""attribute""];
    take -> receipt [label=""object""];
    take -> rack [label=""from""];
    leave -> receipt [label=""object""];
    leave -> above_the_fridge [label=""on""];
}"
"Command: Grab the blunt matte lego from the bright bookshelf and lay it on the ceramic toolbox.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> lego [label=""attribute""];
    matte -> lego [label=""attribute""];
    bright -> bookshelf [label=""attribute""];
    ceramic -> toolbox [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> bookshelf [label=""from""];
    lay -> lego [label=""object""];
    lay -> toolbox [label=""on""];
}","Command: Grab the blunt matte lego from the bright bookshelf and lay it on the ceramic toolbox.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lego [label=""lego"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    matte [label=""matte"", shape=ellipse, fillcolor=white];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    bookshelf [label=""bookshelf"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    ceramic [label=""ceramic"", shape=ellipse, fillcolor=white];
    toolbox [label=""toolbox"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    blunt -> lego [label=""attribute""];
    matte -> lego [label=""attribute""];
    bright -> bookshelf [label=""attribute""];
    ceramic -> toolbox [label=""attribute""];
    grab -> lego [label=""object""];
    grab -> bookshelf [label=""from""];
    lay -> lego [label=""object""];
    lay -> toolbox [label=""on""];
}"
"Command: Grab the shoe from the basket and put it on the dark empty laundry basket.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    dark -> laundry_basket [label=""attribute""];
    empty -> laundry_basket [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> basket [label=""from""];
    put -> shoe [label=""object""];
    put -> laundry_basket [label=""on""];
}","Command: Grab the shoe from the basket and put it on the dark empty laundry basket.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    shoe [label=""shoe"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    dark [label=""dark"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    basket [label=""basket"", shape=ellipse, fillcolor=white];
    dark -> laundry_basket [label=""attribute""];
    empty -> laundry_basket [label=""attribute""];
    grab -> shoe [label=""object""];
    grab -> basket [label=""from""];
    put -> shoe [label=""object""];
    put -> laundry_basket [label=""on""];
}"
"Command: Grab the charger from the sofa and put it on the fish tank.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> charger [label=""object""];
    grab -> sofa [label=""from""];
    put -> charger [label=""object""];
    put -> fish_tank [label=""on""];
}","Command: Grab the charger from the sofa and put it on the fish tank.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    charger [label=""charger"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fish_tank [label=""fish tank"", shape=ellipse, fillcolor=white];
    sofa [label=""sofa"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    grab -> charger [label=""object""];
    grab -> sofa [label=""from""];
    put -> charger [label=""object""];
    put -> fish_tank [label=""on""];
}"
"Command: Grab the tie from the cutlery drawer and set it on the coat shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    grab -> tie [label=""object""];
    grab -> cutlery_drawer [label=""from""];
    set -> tie [label=""object""];
    set -> coat_shelf [label=""on""];
}","Command: Grab the tie from the cutlery drawer and set it on the coat shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    coat_shelf [label=""coat shelf"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    set [label=""Set"", shape=box, fillcolor=lightgreen];
    tie [label=""tie"", shape=ellipse, fillcolor=white];
    cutlery_drawer [label=""cutlery drawer"", shape=ellipse, fillcolor=white];
    grab -> tie [label=""object""];
    grab -> cutlery_drawer [label=""from""];
    set -> tie [label=""object""];
    set -> coat_shelf [label=""on""];
}"
"Command: Lift the cable from the laundry basket and leave it on the empty medicine cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    empty -> medicine_cabinet [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> laundry_basket [label=""from""];
    leave -> cable [label=""object""];
    leave -> medicine_cabinet [label=""on""];
}","Command: Lift the cable from the laundry basket and leave it on the empty medicine cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    medicine_cabinet [label=""medicine cabinet"", shape=ellipse, fillcolor=white];
    laundry_basket [label=""laundry basket"", shape=ellipse, fillcolor=white];
    cable [label=""cable"", shape=ellipse, fillcolor=white];
    empty [label=""empty"", shape=ellipse, fillcolor=white];
    empty -> medicine_cabinet [label=""attribute""];
    lift -> cable [label=""object""];
    lift -> laundry_basket [label=""from""];
    leave -> cable [label=""object""];
    leave -> medicine_cabinet [label=""on""];
}"
"Command: Grab the fuzzy blunt monitor from the dry corner and lay it on the locker.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    fuzzy -> monitor [label=""attribute""];
    blunt -> monitor [label=""attribute""];
    dry -> corner [label=""attribute""];
    grab -> monitor [label=""object""];
    grab -> corner [label=""from""];
    lay -> monitor [label=""object""];
    lay -> locker [label=""on""];
}","Command: Grab the fuzzy blunt monitor from the dry corner and lay it on the locker.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    locker [label=""locker"", shape=ellipse, fillcolor=white];
    corner [label=""corner"", shape=ellipse, fillcolor=white];
    monitor [label=""monitor"", shape=ellipse, fillcolor=white];
    dry [label=""dry"", shape=ellipse, fillcolor=white];
    blunt [label=""blunt"", shape=ellipse, fillcolor=white];
    fuzzy -> monitor [label=""attribute""];
    blunt -> monitor [label=""attribute""];
    dry -> corner [label=""attribute""];
    grab -> monitor [label=""object""];
    grab -> corner [label=""from""];
    lay -> monitor [label=""object""];
    lay -> locker [label=""on""];
}"
"Command: Take the fuzzy folder from the stove and lay it on the pantry.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> folder [label=""attribute""];
    take -> folder [label=""object""];
    take -> stove [label=""from""];
    lay -> folder [label=""object""];
    lay -> pantry [label=""on""];
}","Command: Take the fuzzy folder from the stove and lay it on the pantry.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    folder [label=""folder"", shape=ellipse, fillcolor=white];
    fuzzy [label=""fuzzy"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    stove [label=""stove"", shape=ellipse, fillcolor=white];
    pantry [label=""pantry"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    fuzzy -> folder [label=""attribute""];
    take -> folder [label=""object""];
    take -> stove [label=""from""];
    lay -> folder [label=""object""];
    lay -> pantry [label=""on""];
}"
"Command: Take the cracked box from the kitchen drawer and leave it on the narrow clean file cabinet.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    box [label=""box"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    cracked -> box [label=""attribute""];
    narrow -> file_cabinet [label=""attribute""];
    clean -> file_cabinet [label=""attribute""];
    take -> box [label=""object""];
    take -> kitchen_drawer [label=""from""];
    leave -> box [label=""object""];
    leave -> file_cabinet [label=""on""];
}","Command: Take the cracked box from the kitchen drawer and leave it on the narrow clean file cabinet.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    file_cabinet [label=""file cabinet"", shape=ellipse, fillcolor=white];
    kitchen_drawer [label=""kitchen drawer"", shape=ellipse, fillcolor=white];
    cracked [label=""cracked"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    box [label=""box"", shape=ellipse, fillcolor=white];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    narrow [label=""narrow"", shape=ellipse, fillcolor=white];
    cracked -> box [label=""attribute""];
    narrow -> file_cabinet [label=""attribute""];
    clean -> file_cabinet [label=""attribute""];
    take -> box [label=""object""];
    take -> kitchen_drawer [label=""from""];
    leave -> box [label=""object""];
    leave -> file_cabinet [label=""on""];
}"
"Command: Grab the round frame from the warm plastic fridge and put it on the window ledge.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    round [label=""round"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> frame [label=""attribute""];
    warm -> fridge [label=""attribute""];
    plastic -> fridge [label=""attribute""];
    grab -> frame [label=""object""];
    grab -> fridge [label=""from""];
    put -> frame [label=""object""];
    put -> window_ledge [label=""on""];
}","Command: Grab the round frame from the warm plastic fridge and put it on the window ledge.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    window_ledge [label=""window ledge"", shape=ellipse, fillcolor=white];
    frame [label=""frame"", shape=ellipse, fillcolor=white];
    plastic [label=""plastic"", shape=ellipse, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    round [label=""round"", shape=ellipse, fillcolor=white];
    fridge [label=""fridge"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    round -> frame [label=""attribute""];
    warm -> fridge [label=""attribute""];
    plastic -> fridge [label=""attribute""];
    grab -> frame [label=""object""];
    grab -> fridge [label=""from""];
    put -> frame [label=""object""];
    put -> window_ledge [label=""on""];
}"
"Command: Take the ring from the cold garden box and put it on the dusty fruit bowl.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> garden_box [label=""attribute""];
    dusty -> fruit_bowl [label=""attribute""];
    take -> ring [label=""object""];
    take -> garden_box [label=""from""];
    put -> ring [label=""object""];
    put -> fruit_bowl [label=""on""];
}","Command: Take the ring from the cold garden box and put it on the dusty fruit bowl.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    cold [label=""cold"", shape=ellipse, fillcolor=white];
    fruit_bowl [label=""fruit bowl"", shape=ellipse, fillcolor=white];
    dusty [label=""dusty"", shape=ellipse, fillcolor=white];
    ring [label=""ring"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    cold -> garden_box [label=""attribute""];
    dusty -> fruit_bowl [label=""attribute""];
    take -> ring [label=""object""];
    take -> garden_box [label=""from""];
    put -> ring [label=""object""];
    put -> fruit_bowl [label=""on""];
}"
"Command: Take the comb from the warm drawer and put it on the mirror shelf.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    warm -> drawer [label=""attribute""];
    take -> comb [label=""object""];
    take -> drawer [label=""from""];
    put -> comb [label=""object""];
    put -> mirror_shelf [label=""on""];
}","Command: Take the comb from the warm drawer and put it on the mirror shelf.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    warm [label=""warm"", shape=ellipse, fillcolor=white];
    drawer [label=""drawer"", shape=ellipse, fillcolor=white];
    comb [label=""comb"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    put [label=""Put"", shape=box, fillcolor=lightgreen];
    take [label=""Take"", shape=box, fillcolor=lightblue];
    warm -> drawer [label=""attribute""];
    take -> comb [label=""object""];
    take -> drawer [label=""from""];
    put -> comb [label=""object""];
    put -> mirror_shelf [label=""on""];
}"
"Command: Grab the sock from the bright beside the couch and lay it on the open clean garden box.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    open [label=""open"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    bright -> beside_the_couch [label=""attribute""];
    open -> garden_box [label=""attribute""];
    clean -> garden_box [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> beside_the_couch [label=""from""];
    lay -> sock [label=""object""];
    lay -> garden_box [label=""on""];
}","Command: Grab the sock from the bright beside the couch and lay it on the open clean garden box.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    bright [label=""bright"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    sock [label=""sock"", shape=ellipse, fillcolor=white];
    garden_box [label=""garden box"", shape=ellipse, fillcolor=white];
    clean [label=""clean"", shape=ellipse, fillcolor=white];
    beside_the_couch [label=""beside the couch"", shape=ellipse, fillcolor=white];
    bright -> beside_the_couch [label=""attribute""];
    open -> garden_box [label=""attribute""];
    clean -> garden_box [label=""attribute""];
    grab -> sock [label=""object""];
    grab -> beside_the_couch [label=""from""];
    lay -> sock [label=""object""];
    lay -> garden_box [label=""on""];
}"
"Command: Pick the square phone from the recycling bin and leave it on the open step stool.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    square -> phone [label=""attribute""];
    open -> step_stool [label=""attribute""];
    pick -> phone [label=""object""];
    pick -> recycling_bin [label=""from""];
    leave -> phone [label=""object""];
    leave -> step_stool [label=""on""];
}","Command: Pick the square phone from the recycling bin and leave it on the open step stool.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    recycling_bin [label=""recycling bin"", shape=ellipse, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    open [label=""open"", shape=ellipse, fillcolor=white];
    square [label=""square"", shape=ellipse, fillcolor=white];
    phone [label=""phone"", shape=ellipse, fillcolor=white];
    step_stool [label=""step stool"", shape=ellipse, fillcolor=white];
    square -> phone [label=""attribute""];
    open -> step_stool [label=""attribute""];
    pick -> phone [label=""object""];
    pick -> recycling_bin [label=""from""];
    leave -> phone [label=""object""];
    leave -> step_stool [label=""on""];
}"
"Command: Grab the bowl from the first aid box and place it on the under the table.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> first_aid_box [label=""from""];
    place -> bowl [label=""object""];
    place -> under_the_table [label=""on""];
}","Command: Grab the bowl from the first aid box and place it on the under the table.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    place [label=""Place"", shape=box, fillcolor=lightgreen];
    grab [label=""Grab"", shape=box, fillcolor=lightblue];
    grab -> bowl [label=""object""];
    grab -> first_aid_box [label=""from""];
    place -> bowl [label=""object""];
    place -> under_the_table [label=""on""];
}"
"Command: Pick the black red brush from the full kitchen island and leave it on the on the radiator.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    red -> brush [label=""attribute""];
    full -> kitchen_island [label=""attribute""];
    pick -> brush [label=""object""];
    pick -> kitchen_island [label=""from""];
    leave -> brush [label=""object""];
    leave -> on_the_radiator [label=""on""];
}","Command: Pick the black red brush from the full kitchen island and leave it on the on the radiator.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    leave [label=""Leave"", shape=box, fillcolor=lightgreen];
    pick [label=""Pick"", shape=box, fillcolor=lightblue];
    red -> brush [label=""attribute""];
    full -> kitchen_island [label=""attribute""];
    pick -> brush [label=""object""];
    pick -> kitchen_island [label=""from""];
    leave -> brush [label=""object""];
    leave -> on_the_radiator [label=""on""];
}"
"Command: Lift the heavy backpack from the mirror shelf and lay it on the bed.
Graph:","digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> backpack [label=""attribute""];
    lift -> backpack [label=""object""];
    lift -> mirror_shelf [label=""from""];
    lay -> backpack [label=""object""];
    lay -> bed [label=""on""];
}","Command: Lift the heavy backpack from the mirror shelf and lay it on the bed.
Graph: digraph SemanticGraph {
    node [shape=ellipse, style=filled, fillcolor=white];
    lift [label=""Lift"", shape=box, fillcolor=lightblue];
    bed [label=""bed"", shape=ellipse, fillcolor=white];
    backpack [label=""backpack"", shape=ellipse, fillcolor=white];
    lay [label=""Lay"", shape=box, fillcolor=lightgreen];
    mirror_shelf [label=""mirror shelf"", shape=ellipse, fillcolor=white];
    heavy [label=""heavy"", shape=ellipse, fillcolor=white];
    heavy -> backpack [label=""attribute""];
    lift -> backpack [label=""object""];
    lift -> mirror_shelf [label=""from""];
    lay -> backpack [label=""object""];
    lay -> bed [label=""on""];
}"
